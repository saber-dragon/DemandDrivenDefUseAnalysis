Start testing: Mar 25 15:02 EDT
----------------------------------------------------------
1/1 Testing: variableExtractTest
1/1 Test: variableExtractTest
Command: "/bin/bash" "-c" "opt -load /home/saber/GitHub/DemandDrivenDefUseAnalysis/build/libdefUseAnalysis.so -defUse -analyze demo.ll"
Directory: /home/saber/GitHub/DemandDrivenDefUseAnalysis/build
"variableExtractTest" start time: Mar 25 15:02 EDT
Output:
----------------------------------------------------------
Printing analysis 'Def-Use Analysis' for function 'foo':
  ret i32 %9
		uses: %9 

  %9 = load i32, i32* %sum, align 4
		def: %9
		uses: %sum 

  br label %for.cond

  %dec6 = add nsw i32 %8, -1
		def: %dec6
		uses: %8 

  br label %for.inc5

  store i32 %dec, i32* %c1, align 4
		def: %dec
		uses: %c1 

  br label %for.inc

  store i32 %add, i32* %sum, align 4
		def: %add
		uses: %sum 

  %7 = load i32, i32* %c1, align 4
		def: %7
		uses: %c1 

  %add = add nsw i32 %6, %cond
		def: %add
		uses: %6 %cond 

  %8 = load i32, i32* %c0, align 4
		def: %8
		uses: %c0 

  %6 = load i32, i32* %sum, align 4
		def: %6
		uses: %sum 

  %cond = select i1 %cmp4, i32 1, i32 0
		def: %cond
		uses: %cmp4 

  %cmp4 = icmp sgt i32 %4, %5
		def: %cmp4
		uses: %4 %5 

  store i32 %n, i32* %n.addr, align 4
		def: %n
		uses: %n.addr 

  %2 = load i32, i32* %m.addr, align 4
		def: %2
		uses: %m.addr 

  %c1 = alloca i32, align 4
		def: %c1

  %cmp = icmp sgt i32 %1, 0
		def: %cmp
		uses: %1 

  %n.addr = alloca i32, align 4
		def: %n.addr

  store i32 %dec6, i32* %c0, align 4
		def: %dec6
		uses: %c0 

  %3 = load i32, i32* %c1, align 4
		def: %3
		uses: %c1 

  %c0 = alloca i32, align 4
		def: %c0

  %0 = load i32, i32* %n.addr, align 4
		def: %0
		uses: %n.addr 

  store i32 %0, i32* %c0, align 4
		def: %0
		uses: %c0 

  br label %for.cond1

  %m.addr = alloca i32, align 4
		def: %m.addr

  br i1 %cmp, label %for.body, label %for.end7
		uses: %cmp 

  br label %for.cond

  store i32 0, i32* %sum, align 4
		def: %sum

  store i32 %2, i32* %c1, align 4
		def: %2
		uses: %c1 

  %dec = add nsw i32 %7, -1
		def: %dec
		uses: %7 

  %sum = alloca i32, align 4
		def: %sum

  %5 = load i32, i32* %c1, align 4
		def: %5
		uses: %c1 

  %1 = load i32, i32* %c0, align 4
		def: %1
		uses: %c0 

  store i32 %m, i32* %m.addr, align 4
		def: %m
		uses: %m.addr 

  br label %for.cond1

  %cmp2 = icmp sgt i32 %3, 0
		def: %cmp2
		uses: %3 

  br i1 %cmp2, label %for.body3, label %for.end
		uses: %cmp2 

  %4 = load i32, i32* %c0, align 4
		def: %4
		uses: %c0 

Printing analysis 'Def-Use Analysis' for function 'main':
  ret i32 0

  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0), i32 %0, i32 %1, i32 %call)
		def: %call1
		uses: @.str %0 %1 %call 

  %call = call i32 @foo(i32 %2, i32 %3)
		def: %call
		uses: %2 %3 

  %2 = load i32, i32* %n, align 4
		def: %2
		uses: %n 

  %3 = load i32, i32* %m, align 4
		def: %3
		uses: %m 

  %4 = load i32, i32* %c0, align 4
		def: %4
		uses: %c0 

  %cmp2 = icmp sgt i32 %3, 0
		def: %cmp2
		uses: %3 

  br label %for.cond1

  %1 = load i32, i32* %c0, align 4
		def: %1
		uses: %c0 

  %5 = load i32, i32* %c1, align 4
		def: %5
		uses: %c1 

  %sum = alloca i32, align 4
		def: %sum

  store i32 0, i32* %sum, align 4
		def: %sum

  %1 = load i32, i32* %m, align 4
		def: %1
		uses: %m 

  store i32 %m, i32* %m.addr, align 4
		def: %m
		uses: %m.addr 

  br label %for.cond

  br i1 %cmp, label %for.body, label %for.end7
		uses: %cmp 

  %m.addr = alloca i32, align 4
		def: %m.addr

  br label %for.cond1

  store i32 0, i32* %retval, align 4
		def: %retval

  %c0 = alloca i32, align 4
		def: %c0

  %3 = load i32, i32* %c1, align 4
		def: %3
		uses: %c1 

  store i32 %dec6, i32* %c0, align 4
		def: %dec6
		uses: %c0 

  %n.addr = alloca i32, align 4
		def: %n.addr

  %cmp = icmp sgt i32 %1, 0
		def: %cmp
		uses: %1 

  %c1 = alloca i32, align 4
		def: %c1

  store i32 5, i32* %m, align 4
		def: %m

  %2 = load i32, i32* %m.addr, align 4
		def: %2
		uses: %m.addr 

  store i32 %n, i32* %n.addr, align 4
		def: %n
		uses: %n.addr 

  %cmp4 = icmp sgt i32 %4, %5
		def: %cmp4
		uses: %4 %5 

  %0 = load i32, i32* %n.addr, align 4
		def: %0
		uses: %n.addr 

  %cond = select i1 %cmp4, i32 1, i32 0
		def: %cond
		uses: %cmp4 

  %dec = add nsw i32 %7, -1
		def: %dec
		uses: %7 

  %6 = load i32, i32* %sum, align 4
		def: %6
		uses: %sum 

  %add = add nsw i32 %6, %cond
		def: %add
		uses: %6 %cond 

  store i32 %2, i32* %c1, align 4
		def: %2
		uses: %c1 

  %7 = load i32, i32* %c1, align 4
		def: %7
		uses: %c1 

  store i32 %0, i32* %c0, align 4
		def: %0
		uses: %c0 

  %8 = load i32, i32* %c0, align 4
		def: %8
		uses: %c0 

  store i32 10, i32* %n, align 4
		def: %n

  store i32 %add, i32* %sum, align 4
		def: %add
		uses: %sum 

  br label %for.inc

  %retval = alloca i32, align 4
		def: %retval

  store i32 %dec, i32* %c1, align 4
		def: %dec
		uses: %c1 

  %m = alloca i32, align 4
		def: %m

  br label %for.inc5

  %dec6 = add nsw i32 %8, -1
		def: %dec6
		uses: %8 

  br label %for.cond

  br i1 %cmp2, label %for.body3, label %for.end
		uses: %cmp2 

  %0 = load i32, i32* %n, align 4
		def: %0
		uses: %n 

  %9 = load i32, i32* %sum, align 4
		def: %9
		uses: %sum 

  ret i32 %9
		uses: %9 

  %n = alloca i32, align 4
		def: %n

<end of output>
Test time =   0.08 sec
----------------------------------------------------------
Test Passed.
"variableExtractTest" end time: Mar 25 15:02 EDT
"variableExtractTest" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Mar 25 15:02 EDT
