; ModuleID = 'src/mv-search.c'
source_filename = "src/mv-search.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.InputParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i32]], [8 x [2 x i32]], i32, i32, i32, i32, [200 x i8], [200 x i8], [200 x i8], [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], i32, i32, i32*, i32*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x double], [200 x i8], i32, i32, i32, i32, [2 x [5 x i32]], i32, i32, i32, i32 }
%struct.ImageParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i8**, i32, i32***, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]], [9 x [8 x [8 x i16]]], [2 x [4 x [16 x [16 x i16]]]], [16 x [16 x i16]], [16 x [16 x i32]], i32****, i32***, [4 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]], [4 x [2 x [16 x [16 x i32]]]], [1 x [2 x [16 x [16 x i32]]]], %struct.Picture*, %struct.Slice*, %struct.macroblock*, [1200 x %struct.syntaxelement], i32*, i32*, i32, i32, i32, i32, [4 x [4 x i32]], i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i16******, i16******, i16******, i16******, [15 x i16], i32, i32, i32, i32, i32, i32, i32, i32, [6 x [32 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s*, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, double*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double**, double**, i32**, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i16, i32, i32 }
%struct.Picture = type { i32, i32, [100 x %struct.Slice*], i32, float, float, float }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, %struct.datapartition*, %struct.MotionInfoContexts*, %struct.TextureInfoContexts*, %struct.RMPNIbuffer_s*, i32, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32 (i32)*, [3 x [2 x i32]] }
%struct.datapartition = type { %struct.Bitstream*, %struct.EncodingEnvironment, i32 (%struct.syntaxelement*, %struct.datapartition*)* }
%struct.Bitstream = type { i32, i32, i8, i32, i32, i8, i8, i32, i32, i8*, i32 }
%struct.EncodingEnvironment = type { i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i8*, i32*, i32, i32 }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32*, i32*)*, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* }
%struct.MotionInfoContexts = type { [3 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.BiContextType = type { i16, i8, i64 }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.RMPNIbuffer_s = type { i32, i32, %struct.RMPNIbuffer_s* }
%struct.macroblock = type { i32, i32, i32, i32, i32, [8 x i32], %struct.macroblock*, %struct.macroblock*, i32, [2 x [4 x [4 x [2 x i32]]]], [16 x i8], [16 x i8], i32, i64, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, double, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DecRefPicMarking_s = type { i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s* }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.storable_picture = type { i32, i32, i32, i32, i32, i32, [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16**, i16*, i16*, i16**, i16**, i16***, i8*, i8***, i64***, i64***, i16****, i8**, i8**, %struct.storable_picture*, %struct.storable_picture*, %struct.storable_picture*, i32, i32, i32, i32, i32, i32, i32 }
%struct.colocated_params = type { i32, i32, i32, [6 x [33 x i64]], i8***, i64***, i16****, i8**, [6 x [33 x i64]], i8***, i64***, i16****, i8**, [6 x [33 x i64]], i8***, i64***, i16****, i8**, i8, i8** }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct.GOP_DATA = type { i32, i32, i32, i32, i32, i32 }
%struct.RD_DATA = type { double, [16 x [16 x i16]], [16 x [16 x i16]], [16 x [16 x i16]], i32****, i32***, i32, i16, [4 x i32], [4 x i32], i8**, [16 x i8], i32, i64, i32, i16******, i16******, [2 x [4 x [4 x i8]]], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.pix_pos = type { i32, i32, i32, i32, i32, i32 }
%struct.timeb = type { i64, i16, i16, i16 }

@QP2QUANT = local_unnamed_addr constant [40 x i32] [i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 5, i32 6, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 13, i32 14, i32 16, i32 18, i32 20, i32 23, i32 25, i32 29, i32 32, i32 36, i32 40, i32 45, i32 51, i32 57, i32 64, i32 72, i32 81, i32 91], align 16
@LEVELMVLIMIT = local_unnamed_addr constant [17 x [6 x i32]] [[6 x i32] [i32 -63, i32 63, i32 -128, i32 127, i32 -256, i32 255], [6 x i32] [i32 -63, i32 63, i32 -128, i32 127, i32 -256, i32 255], [6 x i32] [i32 -127, i32 127, i32 -256, i32 255, i32 -512, i32 511], [6 x i32] [i32 -127, i32 127, i32 -256, i32 255, i32 -512, i32 511], [6 x i32] [i32 -127, i32 127, i32 -256, i32 255, i32 -512, i32 511], [6 x i32] [i32 -127, i32 127, i32 -256, i32 255, i32 -512, i32 511], [6 x i32] [i32 -255, i32 255, i32 -512, i32 511, i32 -1024, i32 1023], [6 x i32] [i32 -255, i32 255, i32 -512, i32 511, i32 -1024, i32 1023], [6 x i32] [i32 -255, i32 255, i32 -512, i32 511, i32 -1024, i32 1023], [6 x i32] [i32 -511, i32 511, i32 -1024, i32 1023, i32 -2048, i32 2047], [6 x i32] [i32 -511, i32 511, i32 -1024, i32 1023, i32 -2048, i32 2047], [6 x i32] [i32 -511, i32 511, i32 -1024, i32 1023, i32 -2048, i32 2047], [6 x i32] [i32 -511, i32 511, i32 -1024, i32 1023, i32 -2048, i32 2047], [6 x i32] [i32 -511, i32 511, i32 -1024, i32 1023, i32 -2048, i32 2047], [6 x i32] [i32 -511, i32 511, i32 -1024, i32 1023, i32 -2048, i32 2047], [6 x i32] [i32 -511, i32 511, i32 -1024, i32 1023, i32 -2048, i32 2047], [6 x i32] [i32 -511, i32 511, i32 -1024, i32 1023, i32 -2048, i32 2047]], align 16
@input = external local_unnamed_addr global %struct.InputParameters*, align 8
@BlockSAD = internal unnamed_addr global i32***** null, align 8
@.str = private unnamed_addr constant [42 x i8] c"InitializeFastFullIntegerSearch: BlockSAD\00", align 1
@img = external local_unnamed_addr global %struct.ImageParameters*, align 8
@search_setup_done = internal unnamed_addr global i32** null, align 8
@.str.1 = private unnamed_addr constant [51 x i8] c"InitializeFastFullIntegerSearch: search_setup_done\00", align 1
@search_center_x = internal unnamed_addr global i32** null, align 8
@.str.2 = private unnamed_addr constant [49 x i8] c"InitializeFastFullIntegerSearch: search_center_x\00", align 1
@search_center_y = internal unnamed_addr global i32** null, align 8
@.str.3 = private unnamed_addr constant [49 x i8] c"InitializeFastFullIntegerSearch: search_center_y\00", align 1
@pos_00 = internal unnamed_addr global i32** null, align 8
@.str.4 = private unnamed_addr constant [40 x i8] c"InitializeFastFullIntegerSearch: pos_00\00", align 1
@max_search_range = internal unnamed_addr global i32** null, align 8
@.str.5 = private unnamed_addr constant [50 x i8] c"InitializeFastFullIntegerSearch: max_search_range\00", align 1
@active_pps = common local_unnamed_addr global %struct.pic_parameter_set_rbsp_t* null, align 8
@listX = external local_unnamed_addr global [6 x %struct.storable_picture**], align 16
@enc_picture = external local_unnamed_addr global %struct.storable_picture*, align 8
@imgY_org = common local_unnamed_addr global i16** null, align 8
@PelYline_11 = internal unnamed_addr global i16* (i16*, i32, i32, i32, i32)* null, align 8
@spiral_search_x = common local_unnamed_addr global i16* null, align 8
@spiral_search_y = common local_unnamed_addr global i16* null, align 8
@byte_abs = common local_unnamed_addr global i32* null, align 8
@FME_blocktype = common local_unnamed_addr global i32 0, align 4
@pred_SAD_space = common local_unnamed_addr global i32 0, align 4
@fastme_l1_cost = common local_unnamed_addr global i32*** null, align 8
@fastme_l0_cost = common local_unnamed_addr global i32*** null, align 8
@max_mvd = common local_unnamed_addr global i32 0, align 4
@byte_abs_range = common local_unnamed_addr global i32 0, align 4
@.str.6 = private unnamed_addr constant [43 x i8] c"Init_Motion_Search_Module: spiral_search_x\00", align 1
@.str.7 = private unnamed_addr constant [43 x i8] c"Init_Motion_Search_Module: spiral_search_y\00", align 1
@spiral_hpel_search_x = common local_unnamed_addr global i16* null, align 8
@.str.8 = private unnamed_addr constant [48 x i8] c"Init_Motion_Search_Module: spiral_hpel_search_x\00", align 1
@spiral_hpel_search_y = common local_unnamed_addr global i16* null, align 8
@.str.9 = private unnamed_addr constant [48 x i8] c"Init_Motion_Search_Module: spiral_hpel_search_y\00", align 1
@mvbits = common local_unnamed_addr global i32* null, align 8
@.str.10 = private unnamed_addr constant [34 x i8] c"Init_Motion_Search_Module: mvbits\00", align 1
@refbits = common local_unnamed_addr global i32* null, align 8
@.str.11 = private unnamed_addr constant [35 x i8] c"Init_Motion_Search_Module: refbits\00", align 1
@.str.12 = private unnamed_addr constant [36 x i8] c"Init_Motion_Search_Module: byte_abs\00", align 1
@motion_cost = common global i32**** null, align 8
@get_line = internal unnamed_addr global i16* (i16**, i32, i32, i32, i32)* null, align 8
@SubPelThreshold3 = common local_unnamed_addr global i16 0, align 2
@block_type_shift_factor = internal unnamed_addr constant [8 x i16] [i16 0, i16 0, i16 1, i16 1, i16 2, i16 3, i16 3, i16 1], align 16
@SubPelThreshold1 = common local_unnamed_addr global i16 0, align 2
@wbp_weight = common local_unnamed_addr global i32**** null, align 8
@luma_log_weight_denom = common local_unnamed_addr global i32 0, align 4
@wp_offset = common local_unnamed_addr global i32*** null, align 8
@wp_luma_round = common local_unnamed_addr global i32 0, align 4
@get_line_p2 = internal unnamed_addr global i16* (i16**, i32, i32, i32, i32)* null, align 8
@get_line_p1 = internal unnamed_addr global i16* (i16**, i32, i32, i32, i32)* null, align 8
@BlockMotionSearch.orig_val = internal global [256 x i16] zeroinitializer, align 16
@BlockMotionSearch.orig_pic = internal global [16 x i16*] [i16* getelementptr inbounds ([256 x i16], [256 x i16]* @BlockMotionSearch.orig_val, i32 0, i32 0), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 32) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 64) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 96) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 128) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 160) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 192) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 224) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 256) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 288) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 320) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 352) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 384) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 416) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 448) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 480) to i16*)], align 16
@EPZSDistortion = external local_unnamed_addr global i32***, align 8
@fastme_ref_cost = common local_unnamed_addr global i32**** null, align 8
@simplified_fastme_l0_cost = common local_unnamed_addr global i32*** null, align 8
@simplified_fastme_l1_cost = common local_unnamed_addr global i32*** null, align 8
@me_tot_time = common local_unnamed_addr global i32 0, align 4
@me_time = common local_unnamed_addr global i32 0, align 4
@direct_pdir = common local_unnamed_addr global i16** null, align 8
@direct_ref_idx = common local_unnamed_addr global i8*** null, align 8
@PartitionMotionSearch.bx0 = internal unnamed_addr constant [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] [i32 0, i32 2, i32 0, i32 2]], align 16
@PartitionMotionSearch.by0 = internal unnamed_addr constant [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 0, i32 2, i32 2]], align 16
@listXsize = external local_unnamed_addr global [6 x i32], align 16
@Co_located = external local_unnamed_addr global %struct.colocated_params*, align 8
@top_pic = common local_unnamed_addr global %struct.Picture* null, align 8
@bottom_pic = common local_unnamed_addr global %struct.Picture* null, align 8
@frame_pic = common local_unnamed_addr global %struct.Picture* null, align 8
@frame_pic_1 = common local_unnamed_addr global %struct.Picture* null, align 8
@frame_pic_2 = common local_unnamed_addr global %struct.Picture* null, align 8
@frame_pic_3 = common local_unnamed_addr global %struct.Picture* null, align 8
@imgUV_org = common local_unnamed_addr global i16*** null, align 8
@img4Y_tmp = common local_unnamed_addr global i32** null, align 8
@yPicPos = common local_unnamed_addr global i32* null, align 8
@xPicPos = common local_unnamed_addr global i32* null, align 8
@log2_max_frame_num_minus4 = common local_unnamed_addr global i32 0, align 4
@log2_max_pic_order_cnt_lsb_minus4 = common local_unnamed_addr global i32 0, align 4
@active_sps = common local_unnamed_addr global %struct.seq_parameter_set_rbsp_t* null, align 8
@mb_adaptive = common local_unnamed_addr global i32 0, align 4
@MBPairIsField = common local_unnamed_addr global i32 0, align 4
@wp_weight = common local_unnamed_addr global i32*** null, align 8
@chroma_log_weight_denom = common local_unnamed_addr global i32 0, align 4
@wp_chroma_round = common local_unnamed_addr global i32 0, align 4
@imgY_org_top = common local_unnamed_addr global i16** null, align 8
@imgY_org_bot = common local_unnamed_addr global i16** null, align 8
@imgUV_org_top = common local_unnamed_addr global i16*** null, align 8
@imgUV_org_bot = common local_unnamed_addr global i16*** null, align 8
@imgY_org_frm = common local_unnamed_addr global i16** null, align 8
@imgUV_org_frm = common local_unnamed_addr global i16*** null, align 8
@imgY_com = common local_unnamed_addr global i16** null, align 8
@imgUV_com = common local_unnamed_addr global i16*** null, align 8
@pixel_map = common local_unnamed_addr global i8** null, align 8
@refresh_map = common local_unnamed_addr global i8** null, align 8
@intras = common local_unnamed_addr global i32 0, align 4
@frame_ctr = common local_unnamed_addr global [5 x i32] zeroinitializer, align 16
@frame_no = common local_unnamed_addr global i32 0, align 4
@nextP_tr_fld = common local_unnamed_addr global i32 0, align 4
@nextP_tr_frm = common local_unnamed_addr global i32 0, align 4
@tot_time = common local_unnamed_addr global i32 0, align 4
@errortext = common local_unnamed_addr global [300 x i8] zeroinitializer, align 16
@resTrans_R = common local_unnamed_addr global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_G = common local_unnamed_addr global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_B = common local_unnamed_addr global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resR = common local_unnamed_addr global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resG = common local_unnamed_addr global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resB = common local_unnamed_addr global [16 x [16 x i32]] zeroinitializer, align 16
@mprRGB = common local_unnamed_addr global [3 x [16 x [16 x i32]]] zeroinitializer, align 16
@dc_level = common local_unnamed_addr global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@dc_level_temp = common local_unnamed_addr global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block = common local_unnamed_addr global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block_temp = common local_unnamed_addr global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@b8_ipredmode8x8 = common local_unnamed_addr global [4 x [4 x i8]] zeroinitializer, align 16
@b8_intra_pred_modes8x8 = common local_unnamed_addr global [16 x i8] zeroinitializer, align 16
@gop_structure = common local_unnamed_addr global %struct.GOP_DATA* null, align 8
@rdopt = common local_unnamed_addr global %struct.RD_DATA* null, align 8
@rddata_top_frame_mb = common local_unnamed_addr global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_frame_mb = common local_unnamed_addr global %struct.RD_DATA zeroinitializer, align 8
@rddata_top_field_mb = common local_unnamed_addr global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_field_mb = common local_unnamed_addr global %struct.RD_DATA zeroinitializer, align 8
@p_stat = common local_unnamed_addr global %struct._IO_FILE* null, align 8
@p_log = common local_unnamed_addr global %struct._IO_FILE* null, align 8
@p_trace = common local_unnamed_addr global %struct._IO_FILE* null, align 8
@p_in = common local_unnamed_addr global i32 0, align 4
@p_dec = common local_unnamed_addr global i32 0, align 4
@Bytes_After_Header = common local_unnamed_addr global i32 0, align 4
@rpc_bytes_to_go = common local_unnamed_addr global i32 0, align 4
@rpc_bits_to_go = common local_unnamed_addr global i32 0, align 4
@lrec = common local_unnamed_addr global i32** null, align 8
@lrec_uv = common local_unnamed_addr global i32*** null, align 8
@si_frame_indicator = common local_unnamed_addr global i32 0, align 4
@sp2_frame_indicator = common local_unnamed_addr global i32 0, align 4
@number_sp2_frames = common local_unnamed_addr global i32 0, align 4
@giRDOpt_B8OnlyFlag = common local_unnamed_addr global i32 0, align 4
@gaaiMBAFF_NZCoeff = common local_unnamed_addr global [4 x [12 x i32]] zeroinitializer, align 16
@McostState = common local_unnamed_addr global i8** null, align 8
@SearchState = common local_unnamed_addr global i8** null, align 8
@pred_SAD_ref = common local_unnamed_addr global i32 0, align 4
@pred_SAD_uplayer = common local_unnamed_addr global i32 0, align 4
@pred_MV_ref = common local_unnamed_addr global [2 x i32] zeroinitializer, align 4
@pred_MV_uplayer = common local_unnamed_addr global [2 x i32] zeroinitializer, align 4
@Bsize = common local_unnamed_addr global [8 x float] zeroinitializer, align 16
@AlphaSec = common local_unnamed_addr global [8 x float] zeroinitializer, align 16
@AlphaThird = common local_unnamed_addr global [8 x float] zeroinitializer, align 16
@flag_intra = common local_unnamed_addr global i8* null, align 8
@flag_intra_SAD = common local_unnamed_addr global i32 0, align 4
@SymmetricalCrossSearchThreshold1 = common local_unnamed_addr global i16 0, align 2
@SymmetricalCrossSearchThreshold2 = common local_unnamed_addr global i16 0, align 2
@ConvergeThreshold = common local_unnamed_addr global i16 0, align 2
@simplified_SearchState = common local_unnamed_addr global i8** null, align 8
@simplified_flag_intra = common local_unnamed_addr global i8* null, align 8
@simplified_flag_intra_SAD = common local_unnamed_addr global i32 0, align 4
@simplified_pred_SAD_uplayer = common local_unnamed_addr global i32 0, align 4
@simplified_pred_MV_uplayer_X = common local_unnamed_addr global i16 0, align 2
@simplified_pred_MV_uplayer_Y = common local_unnamed_addr global i16 0, align 2

; Function Attrs: nounwind uwtable
define void @InitializeFastFullIntegerSearch() local_unnamed_addr #0 {
entry:
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %search_range1 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i64 0, i32 8
  %1 = load i32, i32* %search_range1, align 8, !tbaa !5
  %mul = shl nsw i32 %1, 1
  %add = or i32 %mul, 1
  %mul4 = mul nsw i32 %add, %add
  %call = tail call noalias i8* @malloc(i64 16) #8
  store i8* %call, i8** bitcast (i32****** @BlockSAD to i8**), align 8, !tbaa !1
  %cmp = icmp eq i8* %call, null
  %2 = bitcast i8* %call to i32*****
  br i1 %cmp, label %if.then, label %for.cond.preheader

if.then:                                          ; preds = %entry
  tail call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #8
  %.pre = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then, %entry
  %3 = phi i32***** [ %.pre, %if.then ], [ %2, %entry ]
  %conv45240 = zext i32 %mul4 to i64
  %mul46 = shl nuw nsw i64 %conv45240, 2
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 9
  %5 = load i32, i32* %max_num_references, align 4, !tbaa !9
  %conv = sext i32 %5 to i64
  %mul6 = shl nsw i64 %conv, 3
  %call7 = tail call noalias i8* @malloc(i64 %mul6) #8
  %6 = bitcast i32***** %3 to i8**
  store i8* %call7, i8** %6, align 8, !tbaa !1
  %cmp8 = icmp eq i8* %call7, null
  br i1 %cmp8, label %if.then10, label %for.cond12.preheader

if.then10:                                        ; preds = %for.cond.preheader
  tail call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #8
  br label %for.cond12.preheader

for.cond12.preheader:                             ; preds = %if.then10, %for.cond.preheader
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references13253 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i64 0, i32 9
  %8 = load i32, i32* %max_num_references13253, align 4, !tbaa !9
  %cmp14254 = icmp sgt i32 %8, 0
  br i1 %cmp14254, label %for.body16.preheader, label %for.inc66

for.body16.preheader:                             ; preds = %for.cond12.preheader
  br label %for.body16

for.body16:                                       ; preds = %for.body16.preheader, %for.inc63
  %indvars.iv271 = phi i64 [ %indvars.iv.next272, %for.inc63 ], [ 0, %for.body16.preheader ]
  %call17 = tail call noalias i8* @malloc(i64 64) #8
  %9 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %10 = load i32****, i32***** %9, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds i32***, i32**** %10, i64 %indvars.iv271
  %11 = bitcast i32**** %arrayidx21 to i8**
  store i8* %call17, i8** %11, align 8, !tbaa !1
  %cmp22 = icmp eq i8* %call17, null
  br i1 %cmp22, label %if.then24, label %for.body29.preheader

if.then24:                                        ; preds = %for.body16
  tail call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #8
  br label %for.body29.preheader

for.body29.preheader:                             ; preds = %if.then24, %for.body16
  br label %for.body29

for.body29:                                       ; preds = %for.body29.preheader, %for.inc60
  %indvars.iv268 = phi i64 [ %indvars.iv.next269, %for.inc60 ], [ 1, %for.body29.preheader ]
  %call30 = tail call noalias i8* @malloc(i64 128) #8
  %12 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %13 = load i32****, i32***** %12, align 8, !tbaa !1
  %arrayidx34 = getelementptr inbounds i32***, i32**** %13, i64 %indvars.iv271
  %14 = load i32***, i32**** %arrayidx34, align 8, !tbaa !1
  %arrayidx36 = getelementptr inbounds i32**, i32*** %14, i64 %indvars.iv268
  %15 = bitcast i32*** %arrayidx36 to i8**
  store i8* %call30, i8** %15, align 8, !tbaa !1
  %cmp37 = icmp eq i8* %call30, null
  br i1 %cmp37, label %if.then39, label %for.body44.preheader

if.then39:                                        ; preds = %for.body29
  tail call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #8
  br label %for.body44.preheader

for.body44.preheader:                             ; preds = %if.then39, %for.body29
  br label %for.body44

for.body44:                                       ; preds = %for.body44.preheader, %for.inc
  %indvars.iv266 = phi i64 [ %indvars.iv.next267, %for.inc ], [ 0, %for.body44.preheader ]
  %call47 = tail call noalias i8* @malloc(i64 %mul46) #8
  %16 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %17 = load i32****, i32***** %16, align 8, !tbaa !1
  %arrayidx51 = getelementptr inbounds i32***, i32**** %17, i64 %indvars.iv271
  %18 = load i32***, i32**** %arrayidx51, align 8, !tbaa !1
  %arrayidx53 = getelementptr inbounds i32**, i32*** %18, i64 %indvars.iv268
  %19 = load i32**, i32*** %arrayidx53, align 8, !tbaa !1
  %arrayidx55 = getelementptr inbounds i32*, i32** %19, i64 %indvars.iv266
  %20 = bitcast i32** %arrayidx55 to i8**
  store i8* %call47, i8** %20, align 8, !tbaa !1
  %cmp56 = icmp eq i8* %call47, null
  br i1 %cmp56, label %if.then58, label %for.inc

if.then58:                                        ; preds = %for.body44
  tail call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #8
  br label %for.inc

for.inc:                                          ; preds = %for.body44, %if.then58
  %indvars.iv.next267 = add nuw nsw i64 %indvars.iv266, 1
  %exitcond = icmp eq i64 %indvars.iv.next267, 16
  br i1 %exitcond, label %for.inc60, label %for.body44

for.inc60:                                        ; preds = %for.inc
  %indvars.iv.next269 = add nuw nsw i64 %indvars.iv268, 1
  %exitcond270 = icmp eq i64 %indvars.iv.next269, 8
  br i1 %exitcond270, label %for.inc63, label %for.body29

for.inc63:                                        ; preds = %for.inc60
  %indvars.iv.next272 = add nuw i64 %indvars.iv271, 1
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references13 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i64 0, i32 9
  %22 = load i32, i32* %max_num_references13, align 4, !tbaa !9
  %23 = sext i32 %22 to i64
  %cmp14 = icmp slt i64 %indvars.iv.next272, %23
  br i1 %cmp14, label %for.body16, label %for.inc66.loopexit

for.inc66.loopexit:                               ; preds = %for.inc63
  br label %for.inc66

for.inc66:                                        ; preds = %for.inc66.loopexit, %for.cond12.preheader
  %24 = phi i32 [ %8, %for.cond12.preheader ], [ %22, %for.inc66.loopexit ]
  %25 = phi %struct.ImageParameters* [ %7, %for.cond12.preheader ], [ %21, %for.inc66.loopexit ]
  %conv.1 = sext i32 %24 to i64
  %mul6.1 = shl nsw i64 %conv.1, 3
  %call7.1 = tail call noalias i8* @malloc(i64 %mul6.1) #8
  %26 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.1 = getelementptr inbounds i32****, i32***** %26, i64 1
  %27 = bitcast i32***** %arrayidx.1 to i8**
  store i8* %call7.1, i8** %27, align 8, !tbaa !1
  %cmp8.1 = icmp eq i8* %call7.1, null
  br i1 %cmp8.1, label %if.then10.1, label %for.cond12.preheader.1

if.then72:                                        ; preds = %for.inc66.1
  tail call void @no_mem_exit(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %if.end73

if.end73:                                         ; preds = %if.then72, %for.inc66.1
  %call74 = tail call noalias i8* @malloc(i64 16) #8
  store i8* %call74, i8** bitcast (i32*** @search_center_x to i8**), align 8, !tbaa !1
  %cmp75 = icmp eq i8* %call74, null
  br i1 %cmp75, label %if.then77, label %if.end78

if.then77:                                        ; preds = %if.end73
  tail call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0)) #8
  br label %if.end78

if.end78:                                         ; preds = %if.then77, %if.end73
  %call79 = tail call noalias i8* @malloc(i64 16) #8
  store i8* %call79, i8** bitcast (i32*** @search_center_y to i8**), align 8, !tbaa !1
  %cmp80 = icmp eq i8* %call79, null
  br i1 %cmp80, label %if.then82, label %if.end83

if.then82:                                        ; preds = %if.end78
  tail call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0)) #8
  br label %if.end83

if.end83:                                         ; preds = %if.then82, %if.end78
  %call84 = tail call noalias i8* @malloc(i64 16) #8
  store i8* %call84, i8** bitcast (i32*** @pos_00 to i8**), align 8, !tbaa !1
  %cmp85 = icmp eq i8* %call84, null
  br i1 %cmp85, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.end83
  tail call void @no_mem_exit(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #8
  br label %if.end88

if.end88:                                         ; preds = %if.then87, %if.end83
  %call89 = tail call noalias i8* @malloc(i64 16) #8
  store i8* %call89, i8** bitcast (i32*** @max_search_range to i8**), align 8, !tbaa !1
  %cmp90 = icmp eq i8* %call89, null
  br i1 %cmp90, label %if.then92, label %for.body97.preheader

if.then92:                                        ; preds = %if.end88
  tail call void @no_mem_exit(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0)) #8
  br label %for.body97.preheader

for.body97.preheader:                             ; preds = %if.then92, %if.end88
  %28 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references98 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %28, i64 0, i32 9
  %29 = load i32, i32* %max_num_references98, align 4, !tbaa !9
  %conv99 = sext i32 %29 to i64
  %mul100 = shl nsw i64 %conv99, 2
  %call101 = tail call noalias i8* @malloc(i64 %mul100) #8
  %30 = load i8**, i8*** bitcast (i32*** @search_setup_done to i8***), align 8, !tbaa !1
  store i8* %call101, i8** %30, align 8, !tbaa !1
  %cmp104 = icmp eq i8* %call101, null
  br i1 %cmp104, label %if.then106, label %if.end107

if.then106:                                       ; preds = %for.body97.preheader
  tail call void @no_mem_exit(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %if.end107

if.end107:                                        ; preds = %if.then106, %for.body97.preheader
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references108 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i64 0, i32 9
  %32 = load i32, i32* %max_num_references108, align 4, !tbaa !9
  %conv109 = sext i32 %32 to i64
  %mul110 = shl nsw i64 %conv109, 2
  %call111 = tail call noalias i8* @malloc(i64 %mul110) #8
  %33 = load i8**, i8*** bitcast (i32*** @search_center_x to i8***), align 8, !tbaa !1
  store i8* %call111, i8** %33, align 8, !tbaa !1
  %cmp114 = icmp eq i8* %call111, null
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %if.end107
  tail call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0)) #8
  br label %if.end117

if.end117:                                        ; preds = %if.then116, %if.end107
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references118 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i64 0, i32 9
  %35 = load i32, i32* %max_num_references118, align 4, !tbaa !9
  %conv119 = sext i32 %35 to i64
  %mul120 = shl nsw i64 %conv119, 2
  %call121 = tail call noalias i8* @malloc(i64 %mul120) #8
  %36 = load i8**, i8*** bitcast (i32*** @search_center_y to i8***), align 8, !tbaa !1
  store i8* %call121, i8** %36, align 8, !tbaa !1
  %cmp124 = icmp eq i8* %call121, null
  br i1 %cmp124, label %if.then126, label %if.end127

if.then126:                                       ; preds = %if.end117
  tail call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0)) #8
  br label %if.end127

if.end127:                                        ; preds = %if.then126, %if.end117
  %37 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references128 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %37, i64 0, i32 9
  %38 = load i32, i32* %max_num_references128, align 4, !tbaa !9
  %conv129 = sext i32 %38 to i64
  %mul130 = shl nsw i64 %conv129, 2
  %call131 = tail call noalias i8* @malloc(i64 %mul130) #8
  %39 = load i8**, i8*** bitcast (i32*** @pos_00 to i8***), align 8, !tbaa !1
  store i8* %call131, i8** %39, align 8, !tbaa !1
  %cmp134 = icmp eq i8* %call131, null
  br i1 %cmp134, label %if.then136, label %if.end137

if.then136:                                       ; preds = %if.end127
  tail call void @no_mem_exit(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #8
  br label %if.end137

if.end137:                                        ; preds = %if.then136, %if.end127
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references138 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i64 0, i32 9
  %41 = load i32, i32* %max_num_references138, align 4, !tbaa !9
  %conv139 = sext i32 %41 to i64
  %mul140 = shl nsw i64 %conv139, 2
  %call141 = tail call noalias i8* @malloc(i64 %mul140) #8
  %42 = load i8**, i8*** bitcast (i32*** @max_search_range to i8***), align 8, !tbaa !1
  store i8* %call141, i8** %42, align 8, !tbaa !1
  %cmp144 = icmp eq i8* %call141, null
  br i1 %cmp144, label %if.then146, label %for.inc148

if.then146:                                       ; preds = %if.end137
  tail call void @no_mem_exit(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0)) #8
  br label %for.inc148

for.inc148:                                       ; preds = %if.end137, %if.then146
  %43 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references98.1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %43, i64 0, i32 9
  %44 = load i32, i32* %max_num_references98.1, align 4, !tbaa !9
  %conv99.1 = sext i32 %44 to i64
  %mul100.1 = shl nsw i64 %conv99.1, 2
  %call101.1 = tail call noalias i8* @malloc(i64 %mul100.1) #8
  %45 = load i32**, i32*** @search_setup_done, align 8, !tbaa !1
  %arrayidx103.1 = getelementptr inbounds i32*, i32** %45, i64 1
  %46 = bitcast i32** %arrayidx103.1 to i8**
  store i8* %call101.1, i8** %46, align 8, !tbaa !1
  %cmp104.1 = icmp eq i8* %call101.1, null
  br i1 %cmp104.1, label %if.then106.1, label %if.end107.1

for.cond173.preheader:                            ; preds = %for.inc148.1
  %47 = load i32**, i32*** @max_search_range, align 8
  %48 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references181246 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %48, i64 0, i32 9
  %div = sdiv i32 %1, 2
  %49 = load i32*, i32** %47, align 8, !tbaa !1
  store i32 %1, i32* %49, align 4, !tbaa !13
  %50 = load i32, i32* %max_num_references181246, align 4, !tbaa !9
  %cmp182247 = icmp sgt i32 %50, 1
  br i1 %cmp182247, label %for.body184.preheader, label %for.inc192

for.body184.preheader:                            ; preds = %for.cond173.preheader
  br label %for.body184

for.cond154.preheader:                            ; preds = %for.inc148.1
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references159242 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i64 0, i32 9
  %52 = load i32**, i32*** @max_search_range, align 8
  %53 = load i32, i32* %max_num_references159242, align 4, !tbaa !9
  %cmp160243 = icmp sgt i32 %53, 0
  br i1 %cmp160243, label %for.body162.lr.ph, label %if.end195

for.body162.lr.ph:                                ; preds = %for.cond154.preheader
  %54 = load i32*, i32** %52, align 8, !tbaa !1
  br label %for.body162

for.body162:                                      ; preds = %for.body162.lr.ph, %for.body162
  %indvars.iv = phi i64 [ 0, %for.body162.lr.ph ], [ %indvars.iv.next, %for.body162 ]
  %arrayidx166 = getelementptr inbounds i32, i32* %54, i64 %indvars.iv
  store i32 %1, i32* %arrayidx166, align 4, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %55 = load i32, i32* %max_num_references159242, align 4, !tbaa !9
  %56 = sext i32 %55 to i64
  %cmp160 = icmp slt i64 %indvars.iv.next, %56
  br i1 %cmp160, label %for.body162, label %for.inc170

for.inc170:                                       ; preds = %for.body162
  %cmp160243.1 = icmp sgt i32 %55, 0
  br i1 %cmp160243.1, label %for.body162.lr.ph.1, label %if.end195

for.body184:                                      ; preds = %for.body184.preheader, %for.body184
  %indvars.iv260 = phi i64 [ %indvars.iv.next261, %for.body184 ], [ 1, %for.body184.preheader ]
  %arrayidx188 = getelementptr inbounds i32, i32* %49, i64 %indvars.iv260
  store i32 %div, i32* %arrayidx188, align 4, !tbaa !13
  %indvars.iv.next261 = add nuw nsw i64 %indvars.iv260, 1
  %57 = load i32, i32* %max_num_references181246, align 4, !tbaa !9
  %58 = sext i32 %57 to i64
  %cmp182 = icmp slt i64 %indvars.iv.next261, %58
  br i1 %cmp182, label %for.body184, label %for.inc192.loopexit

for.inc192.loopexit:                              ; preds = %for.body184
  br label %for.inc192

for.inc192:                                       ; preds = %for.inc192.loopexit, %for.cond173.preheader
  %arrayidx178.1 = getelementptr inbounds i32*, i32** %47, i64 1
  %59 = load i32*, i32** %arrayidx178.1, align 8, !tbaa !1
  store i32 %1, i32* %59, align 4, !tbaa !13
  %60 = load i32, i32* %max_num_references181246, align 4, !tbaa !9
  %cmp182247.1 = icmp sgt i32 %60, 1
  br i1 %cmp182247.1, label %for.body184.1.preheader, label %if.end195

for.body184.1.preheader:                          ; preds = %for.inc192
  br label %for.body184.1

if.end195.loopexit:                               ; preds = %for.body162.1
  br label %if.end195

if.end195.loopexit288:                            ; preds = %for.body184.1
  br label %if.end195

if.end195:                                        ; preds = %if.end195.loopexit288, %if.end195.loopexit, %for.cond154.preheader, %for.inc192, %for.inc170
  ret void

for.body162.lr.ph.1:                              ; preds = %for.inc170
  %arrayidx164.1 = getelementptr inbounds i32*, i32** %52, i64 1
  %61 = load i32*, i32** %arrayidx164.1, align 8, !tbaa !1
  br label %for.body162.1

for.body162.1:                                    ; preds = %for.body162.1, %for.body162.lr.ph.1
  %indvars.iv.1 = phi i64 [ 0, %for.body162.lr.ph.1 ], [ %indvars.iv.next.1, %for.body162.1 ]
  %arrayidx166.1 = getelementptr inbounds i32, i32* %61, i64 %indvars.iv.1
  store i32 %1, i32* %arrayidx166.1, align 4, !tbaa !13
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %62 = load i32, i32* %max_num_references159242, align 4, !tbaa !9
  %63 = sext i32 %62 to i64
  %cmp160.1 = icmp slt i64 %indvars.iv.next.1, %63
  br i1 %cmp160.1, label %for.body162.1, label %if.end195.loopexit

for.body184.1:                                    ; preds = %for.body184.1.preheader, %for.body184.1
  %indvars.iv260.1 = phi i64 [ %indvars.iv.next261.1, %for.body184.1 ], [ 1, %for.body184.1.preheader ]
  %arrayidx188.1 = getelementptr inbounds i32, i32* %59, i64 %indvars.iv260.1
  store i32 %div, i32* %arrayidx188.1, align 4, !tbaa !13
  %indvars.iv.next261.1 = add nuw nsw i64 %indvars.iv260.1, 1
  %64 = load i32, i32* %max_num_references181246, align 4, !tbaa !9
  %65 = sext i32 %64 to i64
  %cmp182.1 = icmp slt i64 %indvars.iv.next261.1, %65
  br i1 %cmp182.1, label %for.body184.1, label %if.end195.loopexit288

if.then106.1:                                     ; preds = %for.inc148
  tail call void @no_mem_exit(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0)) #8
  %.pre277 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %if.end107.1

if.end107.1:                                      ; preds = %if.then106.1, %for.inc148
  %66 = phi %struct.ImageParameters* [ %.pre277, %if.then106.1 ], [ %43, %for.inc148 ]
  %max_num_references108.1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %66, i64 0, i32 9
  %67 = load i32, i32* %max_num_references108.1, align 4, !tbaa !9
  %conv109.1 = sext i32 %67 to i64
  %mul110.1 = shl nsw i64 %conv109.1, 2
  %call111.1 = tail call noalias i8* @malloc(i64 %mul110.1) #8
  %68 = load i32**, i32*** @search_center_x, align 8, !tbaa !1
  %arrayidx113.1 = getelementptr inbounds i32*, i32** %68, i64 1
  %69 = bitcast i32** %arrayidx113.1 to i8**
  store i8* %call111.1, i8** %69, align 8, !tbaa !1
  %cmp114.1 = icmp eq i8* %call111.1, null
  br i1 %cmp114.1, label %if.then116.1, label %if.end117.1

if.then116.1:                                     ; preds = %if.end107.1
  tail call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0)) #8
  %.pre278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %if.end117.1

if.end117.1:                                      ; preds = %if.then116.1, %if.end107.1
  %70 = phi %struct.ImageParameters* [ %.pre278, %if.then116.1 ], [ %66, %if.end107.1 ]
  %max_num_references118.1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %70, i64 0, i32 9
  %71 = load i32, i32* %max_num_references118.1, align 4, !tbaa !9
  %conv119.1 = sext i32 %71 to i64
  %mul120.1 = shl nsw i64 %conv119.1, 2
  %call121.1 = tail call noalias i8* @malloc(i64 %mul120.1) #8
  %72 = load i32**, i32*** @search_center_y, align 8, !tbaa !1
  %arrayidx123.1 = getelementptr inbounds i32*, i32** %72, i64 1
  %73 = bitcast i32** %arrayidx123.1 to i8**
  store i8* %call121.1, i8** %73, align 8, !tbaa !1
  %cmp124.1 = icmp eq i8* %call121.1, null
  br i1 %cmp124.1, label %if.then126.1, label %if.end127.1

if.then126.1:                                     ; preds = %if.end117.1
  tail call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0)) #8
  %.pre279 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %if.end127.1

if.end127.1:                                      ; preds = %if.then126.1, %if.end117.1
  %74 = phi %struct.ImageParameters* [ %.pre279, %if.then126.1 ], [ %70, %if.end117.1 ]
  %max_num_references128.1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %74, i64 0, i32 9
  %75 = load i32, i32* %max_num_references128.1, align 4, !tbaa !9
  %conv129.1 = sext i32 %75 to i64
  %mul130.1 = shl nsw i64 %conv129.1, 2
  %call131.1 = tail call noalias i8* @malloc(i64 %mul130.1) #8
  %76 = load i32**, i32*** @pos_00, align 8, !tbaa !1
  %arrayidx133.1 = getelementptr inbounds i32*, i32** %76, i64 1
  %77 = bitcast i32** %arrayidx133.1 to i8**
  store i8* %call131.1, i8** %77, align 8, !tbaa !1
  %cmp134.1 = icmp eq i8* %call131.1, null
  br i1 %cmp134.1, label %if.then136.1, label %if.end137.1

if.then136.1:                                     ; preds = %if.end127.1
  tail call void @no_mem_exit(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #8
  %.pre280 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %if.end137.1

if.end137.1:                                      ; preds = %if.then136.1, %if.end127.1
  %78 = phi %struct.ImageParameters* [ %.pre280, %if.then136.1 ], [ %74, %if.end127.1 ]
  %max_num_references138.1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %78, i64 0, i32 9
  %79 = load i32, i32* %max_num_references138.1, align 4, !tbaa !9
  %conv139.1 = sext i32 %79 to i64
  %mul140.1 = shl nsw i64 %conv139.1, 2
  %call141.1 = tail call noalias i8* @malloc(i64 %mul140.1) #8
  %80 = load i32**, i32*** @max_search_range, align 8, !tbaa !1
  %arrayidx143.1 = getelementptr inbounds i32*, i32** %80, i64 1
  %81 = bitcast i32** %arrayidx143.1 to i8**
  store i8* %call141.1, i8** %81, align 8, !tbaa !1
  %cmp144.1 = icmp eq i8* %call141.1, null
  br i1 %cmp144.1, label %if.then146.1, label %for.inc148.1

if.then146.1:                                     ; preds = %if.end137.1
  tail call void @no_mem_exit(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0)) #8
  br label %for.inc148.1

for.inc148.1:                                     ; preds = %if.then146.1, %if.end137.1
  %82 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %full_search = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %82, i64 0, i32 99
  %83 = load i32, i32* %full_search, align 4, !tbaa !14
  %cmp151 = icmp eq i32 %83, 2
  br i1 %cmp151, label %for.cond154.preheader, label %for.cond173.preheader

if.then10.1:                                      ; preds = %for.inc66
  tail call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #8
  %.pre276 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.cond12.preheader.1

for.cond12.preheader.1:                           ; preds = %if.then10.1, %for.inc66
  %84 = phi %struct.ImageParameters* [ %.pre276, %if.then10.1 ], [ %25, %for.inc66 ]
  %max_num_references13253.1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i64 0, i32 9
  %85 = load i32, i32* %max_num_references13253.1, align 4, !tbaa !9
  %cmp14254.1 = icmp sgt i32 %85, 0
  br i1 %cmp14254.1, label %for.body16.1.preheader, label %for.inc66.1

for.body16.1.preheader:                           ; preds = %for.cond12.preheader.1
  br label %for.body16.1

for.body16.1:                                     ; preds = %for.body16.1.preheader, %for.inc63.1
  %indvars.iv271.1 = phi i64 [ %indvars.iv.next272.1, %for.inc63.1 ], [ 0, %for.body16.1.preheader ]
  %call17.1 = tail call noalias i8* @malloc(i64 64) #8
  %86 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx19.1 = getelementptr inbounds i32****, i32***** %86, i64 1
  %87 = load i32****, i32***** %arrayidx19.1, align 8, !tbaa !1
  %arrayidx21.1 = getelementptr inbounds i32***, i32**** %87, i64 %indvars.iv271.1
  %88 = bitcast i32**** %arrayidx21.1 to i8**
  store i8* %call17.1, i8** %88, align 8, !tbaa !1
  %cmp22.1 = icmp eq i8* %call17.1, null
  br i1 %cmp22.1, label %if.then24.1, label %for.body29.1.preheader

if.then24.1:                                      ; preds = %for.body16.1
  tail call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #8
  br label %for.body29.1.preheader

for.body29.1.preheader:                           ; preds = %if.then24.1, %for.body16.1
  br label %for.body29.1

for.body29.1:                                     ; preds = %for.body29.1.preheader, %for.inc60.1
  %indvars.iv268.1 = phi i64 [ %indvars.iv.next269.1, %for.inc60.1 ], [ 1, %for.body29.1.preheader ]
  %call30.1 = tail call noalias i8* @malloc(i64 128) #8
  %89 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx32.1 = getelementptr inbounds i32****, i32***** %89, i64 1
  %90 = load i32****, i32***** %arrayidx32.1, align 8, !tbaa !1
  %arrayidx34.1 = getelementptr inbounds i32***, i32**** %90, i64 %indvars.iv271.1
  %91 = load i32***, i32**** %arrayidx34.1, align 8, !tbaa !1
  %arrayidx36.1 = getelementptr inbounds i32**, i32*** %91, i64 %indvars.iv268.1
  %92 = bitcast i32*** %arrayidx36.1 to i8**
  store i8* %call30.1, i8** %92, align 8, !tbaa !1
  %cmp37.1 = icmp eq i8* %call30.1, null
  br i1 %cmp37.1, label %if.then39.1, label %for.body44.1.preheader

if.then39.1:                                      ; preds = %for.body29.1
  tail call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #8
  br label %for.body44.1.preheader

for.body44.1.preheader:                           ; preds = %if.then39.1, %for.body29.1
  br label %for.body44.1

for.body44.1:                                     ; preds = %for.body44.1.preheader, %for.inc.1
  %indvars.iv266.1 = phi i64 [ %indvars.iv.next267.1, %for.inc.1 ], [ 0, %for.body44.1.preheader ]
  %call47.1 = tail call noalias i8* @malloc(i64 %mul46) #8
  %93 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx49.1 = getelementptr inbounds i32****, i32***** %93, i64 1
  %94 = load i32****, i32***** %arrayidx49.1, align 8, !tbaa !1
  %arrayidx51.1 = getelementptr inbounds i32***, i32**** %94, i64 %indvars.iv271.1
  %95 = load i32***, i32**** %arrayidx51.1, align 8, !tbaa !1
  %arrayidx53.1 = getelementptr inbounds i32**, i32*** %95, i64 %indvars.iv268.1
  %96 = load i32**, i32*** %arrayidx53.1, align 8, !tbaa !1
  %arrayidx55.1 = getelementptr inbounds i32*, i32** %96, i64 %indvars.iv266.1
  %97 = bitcast i32** %arrayidx55.1 to i8**
  store i8* %call47.1, i8** %97, align 8, !tbaa !1
  %cmp56.1 = icmp eq i8* %call47.1, null
  br i1 %cmp56.1, label %if.then58.1, label %for.inc.1

if.then58.1:                                      ; preds = %for.body44.1
  tail call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #8
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then58.1, %for.body44.1
  %indvars.iv.next267.1 = add nuw nsw i64 %indvars.iv266.1, 1
  %exitcond.1 = icmp eq i64 %indvars.iv.next267.1, 16
  br i1 %exitcond.1, label %for.inc60.1, label %for.body44.1

for.inc60.1:                                      ; preds = %for.inc.1
  %indvars.iv.next269.1 = add nuw nsw i64 %indvars.iv268.1, 1
  %exitcond270.1 = icmp eq i64 %indvars.iv.next269.1, 8
  br i1 %exitcond270.1, label %for.inc63.1, label %for.body29.1

for.inc63.1:                                      ; preds = %for.inc60.1
  %indvars.iv.next272.1 = add nuw i64 %indvars.iv271.1, 1
  %98 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references13.1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %98, i64 0, i32 9
  %99 = load i32, i32* %max_num_references13.1, align 4, !tbaa !9
  %100 = sext i32 %99 to i64
  %cmp14.1 = icmp slt i64 %indvars.iv.next272.1, %100
  br i1 %cmp14.1, label %for.body16.1, label %for.inc66.1.loopexit

for.inc66.1.loopexit:                             ; preds = %for.inc63.1
  br label %for.inc66.1

for.inc66.1:                                      ; preds = %for.inc66.1.loopexit, %for.cond12.preheader.1
  %call69 = tail call noalias i8* @malloc(i64 16) #8
  store i8* %call69, i8** bitcast (i32*** @search_setup_done to i8**), align 8, !tbaa !1
  %cmp70 = icmp eq i8* %call69, null
  br i1 %cmp70, label %if.then72, label %if.end73
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

declare void @no_mem_exit(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @ClearFastFullIntegerSearch() local_unnamed_addr #0 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.end31, %entry
  %indvars.iv89 = phi i64 [ 0, %entry ], [ %indvars.iv.next90, %for.end31 ]
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references82 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 9
  %1 = load i32, i32* %max_num_references82, align 4, !tbaa !9
  %cmp283 = icmp sgt i32 %1, 0
  br i1 %cmp283, label %for.cond4.preheader.preheader, label %for.end31

for.cond4.preheader.preheader:                    ; preds = %for.cond1.preheader
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.cond4.preheader.preheader, %for.end24
  %indvars.iv87 = phi i64 [ %indvars.iv.next88, %for.end24 ], [ 0, %for.cond4.preheader.preheader ]
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.cond7.preheader, %for.cond4.preheader
  %indvars.iv = phi i64 [ 1, %for.cond4.preheader ], [ %indvars.iv.next, %for.cond7.preheader ]
  %2 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx77 = getelementptr inbounds i32****, i32***** %2, i64 %indvars.iv89
  %3 = load i32****, i32***** %arrayidx77, align 8, !tbaa !1
  %arrayidx1178 = getelementptr inbounds i32***, i32**** %3, i64 %indvars.iv87
  %4 = load i32***, i32**** %arrayidx1178, align 8, !tbaa !1
  %arrayidx1379 = getelementptr inbounds i32**, i32*** %4, i64 %indvars.iv
  %5 = bitcast i32*** %arrayidx1379 to i8***
  %6 = load i8**, i8*** %5, align 8, !tbaa !1
  %7 = load i8*, i8** %6, align 8, !tbaa !1
  tail call void @free(i8* %7) #8
  %8 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32****, i32***** %8, i64 %indvars.iv89
  %9 = load i32****, i32***** %arrayidx, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds i32***, i32**** %9, i64 %indvars.iv87
  %10 = load i32***, i32**** %arrayidx11, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds i32**, i32*** %10, i64 %indvars.iv
  %11 = load i32**, i32*** %arrayidx13, align 8, !tbaa !1
  %arrayidx15.1 = getelementptr inbounds i32*, i32** %11, i64 1
  %12 = bitcast i32** %arrayidx15.1 to i8**
  %13 = load i8*, i8** %12, align 8, !tbaa !1
  tail call void @free(i8* %13) #8
  %14 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.1 = getelementptr inbounds i32****, i32***** %14, i64 %indvars.iv89
  %15 = load i32****, i32***** %arrayidx.1, align 8, !tbaa !1
  %arrayidx11.1 = getelementptr inbounds i32***, i32**** %15, i64 %indvars.iv87
  %16 = load i32***, i32**** %arrayidx11.1, align 8, !tbaa !1
  %arrayidx13.1 = getelementptr inbounds i32**, i32*** %16, i64 %indvars.iv
  %17 = load i32**, i32*** %arrayidx13.1, align 8, !tbaa !1
  %arrayidx15.2 = getelementptr inbounds i32*, i32** %17, i64 2
  %18 = bitcast i32** %arrayidx15.2 to i8**
  %19 = load i8*, i8** %18, align 8, !tbaa !1
  tail call void @free(i8* %19) #8
  %20 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.2 = getelementptr inbounds i32****, i32***** %20, i64 %indvars.iv89
  %21 = load i32****, i32***** %arrayidx.2, align 8, !tbaa !1
  %arrayidx11.2 = getelementptr inbounds i32***, i32**** %21, i64 %indvars.iv87
  %22 = load i32***, i32**** %arrayidx11.2, align 8, !tbaa !1
  %arrayidx13.2 = getelementptr inbounds i32**, i32*** %22, i64 %indvars.iv
  %23 = load i32**, i32*** %arrayidx13.2, align 8, !tbaa !1
  %arrayidx15.3 = getelementptr inbounds i32*, i32** %23, i64 3
  %24 = bitcast i32** %arrayidx15.3 to i8**
  %25 = load i8*, i8** %24, align 8, !tbaa !1
  tail call void @free(i8* %25) #8
  %26 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.3 = getelementptr inbounds i32****, i32***** %26, i64 %indvars.iv89
  %27 = load i32****, i32***** %arrayidx.3, align 8, !tbaa !1
  %arrayidx11.3 = getelementptr inbounds i32***, i32**** %27, i64 %indvars.iv87
  %28 = load i32***, i32**** %arrayidx11.3, align 8, !tbaa !1
  %arrayidx13.3 = getelementptr inbounds i32**, i32*** %28, i64 %indvars.iv
  %29 = load i32**, i32*** %arrayidx13.3, align 8, !tbaa !1
  %arrayidx15.4 = getelementptr inbounds i32*, i32** %29, i64 4
  %30 = bitcast i32** %arrayidx15.4 to i8**
  %31 = load i8*, i8** %30, align 8, !tbaa !1
  tail call void @free(i8* %31) #8
  %32 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.4 = getelementptr inbounds i32****, i32***** %32, i64 %indvars.iv89
  %33 = load i32****, i32***** %arrayidx.4, align 8, !tbaa !1
  %arrayidx11.4 = getelementptr inbounds i32***, i32**** %33, i64 %indvars.iv87
  %34 = load i32***, i32**** %arrayidx11.4, align 8, !tbaa !1
  %arrayidx13.4 = getelementptr inbounds i32**, i32*** %34, i64 %indvars.iv
  %35 = load i32**, i32*** %arrayidx13.4, align 8, !tbaa !1
  %arrayidx15.5 = getelementptr inbounds i32*, i32** %35, i64 5
  %36 = bitcast i32** %arrayidx15.5 to i8**
  %37 = load i8*, i8** %36, align 8, !tbaa !1
  tail call void @free(i8* %37) #8
  %38 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.5 = getelementptr inbounds i32****, i32***** %38, i64 %indvars.iv89
  %39 = load i32****, i32***** %arrayidx.5, align 8, !tbaa !1
  %arrayidx11.5 = getelementptr inbounds i32***, i32**** %39, i64 %indvars.iv87
  %40 = load i32***, i32**** %arrayidx11.5, align 8, !tbaa !1
  %arrayidx13.5 = getelementptr inbounds i32**, i32*** %40, i64 %indvars.iv
  %41 = load i32**, i32*** %arrayidx13.5, align 8, !tbaa !1
  %arrayidx15.6 = getelementptr inbounds i32*, i32** %41, i64 6
  %42 = bitcast i32** %arrayidx15.6 to i8**
  %43 = load i8*, i8** %42, align 8, !tbaa !1
  tail call void @free(i8* %43) #8
  %44 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.6 = getelementptr inbounds i32****, i32***** %44, i64 %indvars.iv89
  %45 = load i32****, i32***** %arrayidx.6, align 8, !tbaa !1
  %arrayidx11.6 = getelementptr inbounds i32***, i32**** %45, i64 %indvars.iv87
  %46 = load i32***, i32**** %arrayidx11.6, align 8, !tbaa !1
  %arrayidx13.6 = getelementptr inbounds i32**, i32*** %46, i64 %indvars.iv
  %47 = load i32**, i32*** %arrayidx13.6, align 8, !tbaa !1
  %arrayidx15.7 = getelementptr inbounds i32*, i32** %47, i64 7
  %48 = bitcast i32** %arrayidx15.7 to i8**
  %49 = load i8*, i8** %48, align 8, !tbaa !1
  tail call void @free(i8* %49) #8
  %50 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.7 = getelementptr inbounds i32****, i32***** %50, i64 %indvars.iv89
  %51 = load i32****, i32***** %arrayidx.7, align 8, !tbaa !1
  %arrayidx11.7 = getelementptr inbounds i32***, i32**** %51, i64 %indvars.iv87
  %52 = load i32***, i32**** %arrayidx11.7, align 8, !tbaa !1
  %arrayidx13.7 = getelementptr inbounds i32**, i32*** %52, i64 %indvars.iv
  %53 = load i32**, i32*** %arrayidx13.7, align 8, !tbaa !1
  %arrayidx15.8 = getelementptr inbounds i32*, i32** %53, i64 8
  %54 = bitcast i32** %arrayidx15.8 to i8**
  %55 = load i8*, i8** %54, align 8, !tbaa !1
  tail call void @free(i8* %55) #8
  %56 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.8 = getelementptr inbounds i32****, i32***** %56, i64 %indvars.iv89
  %57 = load i32****, i32***** %arrayidx.8, align 8, !tbaa !1
  %arrayidx11.8 = getelementptr inbounds i32***, i32**** %57, i64 %indvars.iv87
  %58 = load i32***, i32**** %arrayidx11.8, align 8, !tbaa !1
  %arrayidx13.8 = getelementptr inbounds i32**, i32*** %58, i64 %indvars.iv
  %59 = load i32**, i32*** %arrayidx13.8, align 8, !tbaa !1
  %arrayidx15.9 = getelementptr inbounds i32*, i32** %59, i64 9
  %60 = bitcast i32** %arrayidx15.9 to i8**
  %61 = load i8*, i8** %60, align 8, !tbaa !1
  tail call void @free(i8* %61) #8
  %62 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.9 = getelementptr inbounds i32****, i32***** %62, i64 %indvars.iv89
  %63 = load i32****, i32***** %arrayidx.9, align 8, !tbaa !1
  %arrayidx11.9 = getelementptr inbounds i32***, i32**** %63, i64 %indvars.iv87
  %64 = load i32***, i32**** %arrayidx11.9, align 8, !tbaa !1
  %arrayidx13.9 = getelementptr inbounds i32**, i32*** %64, i64 %indvars.iv
  %65 = load i32**, i32*** %arrayidx13.9, align 8, !tbaa !1
  %arrayidx15.10 = getelementptr inbounds i32*, i32** %65, i64 10
  %66 = bitcast i32** %arrayidx15.10 to i8**
  %67 = load i8*, i8** %66, align 8, !tbaa !1
  tail call void @free(i8* %67) #8
  %68 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.10 = getelementptr inbounds i32****, i32***** %68, i64 %indvars.iv89
  %69 = load i32****, i32***** %arrayidx.10, align 8, !tbaa !1
  %arrayidx11.10 = getelementptr inbounds i32***, i32**** %69, i64 %indvars.iv87
  %70 = load i32***, i32**** %arrayidx11.10, align 8, !tbaa !1
  %arrayidx13.10 = getelementptr inbounds i32**, i32*** %70, i64 %indvars.iv
  %71 = load i32**, i32*** %arrayidx13.10, align 8, !tbaa !1
  %arrayidx15.11 = getelementptr inbounds i32*, i32** %71, i64 11
  %72 = bitcast i32** %arrayidx15.11 to i8**
  %73 = load i8*, i8** %72, align 8, !tbaa !1
  tail call void @free(i8* %73) #8
  %74 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.11 = getelementptr inbounds i32****, i32***** %74, i64 %indvars.iv89
  %75 = load i32****, i32***** %arrayidx.11, align 8, !tbaa !1
  %arrayidx11.11 = getelementptr inbounds i32***, i32**** %75, i64 %indvars.iv87
  %76 = load i32***, i32**** %arrayidx11.11, align 8, !tbaa !1
  %arrayidx13.11 = getelementptr inbounds i32**, i32*** %76, i64 %indvars.iv
  %77 = load i32**, i32*** %arrayidx13.11, align 8, !tbaa !1
  %arrayidx15.12 = getelementptr inbounds i32*, i32** %77, i64 12
  %78 = bitcast i32** %arrayidx15.12 to i8**
  %79 = load i8*, i8** %78, align 8, !tbaa !1
  tail call void @free(i8* %79) #8
  %80 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.12 = getelementptr inbounds i32****, i32***** %80, i64 %indvars.iv89
  %81 = load i32****, i32***** %arrayidx.12, align 8, !tbaa !1
  %arrayidx11.12 = getelementptr inbounds i32***, i32**** %81, i64 %indvars.iv87
  %82 = load i32***, i32**** %arrayidx11.12, align 8, !tbaa !1
  %arrayidx13.12 = getelementptr inbounds i32**, i32*** %82, i64 %indvars.iv
  %83 = load i32**, i32*** %arrayidx13.12, align 8, !tbaa !1
  %arrayidx15.13 = getelementptr inbounds i32*, i32** %83, i64 13
  %84 = bitcast i32** %arrayidx15.13 to i8**
  %85 = load i8*, i8** %84, align 8, !tbaa !1
  tail call void @free(i8* %85) #8
  %86 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.13 = getelementptr inbounds i32****, i32***** %86, i64 %indvars.iv89
  %87 = load i32****, i32***** %arrayidx.13, align 8, !tbaa !1
  %arrayidx11.13 = getelementptr inbounds i32***, i32**** %87, i64 %indvars.iv87
  %88 = load i32***, i32**** %arrayidx11.13, align 8, !tbaa !1
  %arrayidx13.13 = getelementptr inbounds i32**, i32*** %88, i64 %indvars.iv
  %89 = load i32**, i32*** %arrayidx13.13, align 8, !tbaa !1
  %arrayidx15.14 = getelementptr inbounds i32*, i32** %89, i64 14
  %90 = bitcast i32** %arrayidx15.14 to i8**
  %91 = load i8*, i8** %90, align 8, !tbaa !1
  tail call void @free(i8* %91) #8
  %92 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.14 = getelementptr inbounds i32****, i32***** %92, i64 %indvars.iv89
  %93 = load i32****, i32***** %arrayidx.14, align 8, !tbaa !1
  %arrayidx11.14 = getelementptr inbounds i32***, i32**** %93, i64 %indvars.iv87
  %94 = load i32***, i32**** %arrayidx11.14, align 8, !tbaa !1
  %arrayidx13.14 = getelementptr inbounds i32**, i32*** %94, i64 %indvars.iv
  %95 = load i32**, i32*** %arrayidx13.14, align 8, !tbaa !1
  %arrayidx15.15 = getelementptr inbounds i32*, i32** %95, i64 15
  %96 = bitcast i32** %arrayidx15.15 to i8**
  %97 = load i8*, i8** %96, align 8, !tbaa !1
  tail call void @free(i8* %97) #8
  %98 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx.15 = getelementptr inbounds i32****, i32***** %98, i64 %indvars.iv89
  %99 = load i32****, i32***** %arrayidx.15, align 8, !tbaa !1
  %arrayidx11.15 = getelementptr inbounds i32***, i32**** %99, i64 %indvars.iv87
  %100 = load i32***, i32**** %arrayidx11.15, align 8, !tbaa !1
  %arrayidx13.15 = getelementptr inbounds i32**, i32*** %100, i64 %indvars.iv
  %101 = bitcast i32*** %arrayidx13.15 to i8**
  %102 = load i8*, i8** %101, align 8, !tbaa !1
  tail call void @free(i8* %102) #8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.end24, label %for.cond7.preheader

for.end24:                                        ; preds = %for.cond7.preheader
  %103 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds i32****, i32***** %103, i64 %indvars.iv89
  %104 = load i32****, i32***** %arrayidx26, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds i32***, i32**** %104, i64 %indvars.iv87
  %105 = bitcast i32**** %arrayidx28 to i8**
  %106 = load i8*, i8** %105, align 8, !tbaa !1
  tail call void @free(i8* %106) #8
  %indvars.iv.next88 = add nuw i64 %indvars.iv87, 1
  %107 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %107, i64 0, i32 9
  %108 = load i32, i32* %max_num_references, align 4, !tbaa !9
  %109 = sext i32 %108 to i64
  %cmp2 = icmp slt i64 %indvars.iv.next88, %109
  br i1 %cmp2, label %for.cond4.preheader, label %for.end31.loopexit

for.end31.loopexit:                               ; preds = %for.end24
  br label %for.end31

for.end31:                                        ; preds = %for.end31.loopexit, %for.cond1.preheader
  %110 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %arrayidx33 = getelementptr inbounds i32****, i32***** %110, i64 %indvars.iv89
  %111 = bitcast i32***** %arrayidx33 to i8**
  %112 = load i8*, i8** %111, align 8, !tbaa !1
  tail call void @free(i8* %112) #8
  %indvars.iv.next90 = add nuw nsw i64 %indvars.iv89, 1
  %exitcond91 = icmp eq i64 %indvars.iv.next90, 2
  br i1 %exitcond91, label %for.end36, label %for.cond1.preheader

for.end36:                                        ; preds = %for.end31
  %113 = load i8*, i8** bitcast (i32****** @BlockSAD to i8**), align 8, !tbaa !1
  tail call void @free(i8* %113) #8
  %114 = load i8**, i8*** bitcast (i32*** @search_setup_done to i8***), align 8, !tbaa !1
  %115 = load i8*, i8** %114, align 8, !tbaa !1
  tail call void @free(i8* %115) #8
  %116 = load i8**, i8*** bitcast (i32*** @search_center_x to i8***), align 8, !tbaa !1
  %117 = load i8*, i8** %116, align 8, !tbaa !1
  tail call void @free(i8* %117) #8
  %118 = load i8**, i8*** bitcast (i32*** @search_center_y to i8***), align 8, !tbaa !1
  %119 = load i8*, i8** %118, align 8, !tbaa !1
  tail call void @free(i8* %119) #8
  %120 = load i8**, i8*** bitcast (i32*** @pos_00 to i8***), align 8, !tbaa !1
  %121 = load i8*, i8** %120, align 8, !tbaa !1
  tail call void @free(i8* %121) #8
  %122 = load i8**, i8*** bitcast (i32*** @max_search_range to i8***), align 8, !tbaa !1
  %123 = load i8*, i8** %122, align 8, !tbaa !1
  tail call void @free(i8* %123) #8
  %124 = load i32**, i32*** @search_setup_done, align 8, !tbaa !1
  %arrayidx41.1 = getelementptr inbounds i32*, i32** %124, i64 1
  %125 = bitcast i32** %arrayidx41.1 to i8**
  %126 = load i8*, i8** %125, align 8, !tbaa !1
  tail call void @free(i8* %126) #8
  %127 = load i32**, i32*** @search_center_x, align 8, !tbaa !1
  %arrayidx43.1 = getelementptr inbounds i32*, i32** %127, i64 1
  %128 = bitcast i32** %arrayidx43.1 to i8**
  %129 = load i8*, i8** %128, align 8, !tbaa !1
  tail call void @free(i8* %129) #8
  %130 = load i32**, i32*** @search_center_y, align 8, !tbaa !1
  %arrayidx45.1 = getelementptr inbounds i32*, i32** %130, i64 1
  %131 = bitcast i32** %arrayidx45.1 to i8**
  %132 = load i8*, i8** %131, align 8, !tbaa !1
  tail call void @free(i8* %132) #8
  %133 = load i32**, i32*** @pos_00, align 8, !tbaa !1
  %arrayidx47.1 = getelementptr inbounds i32*, i32** %133, i64 1
  %134 = bitcast i32** %arrayidx47.1 to i8**
  %135 = load i8*, i8** %134, align 8, !tbaa !1
  tail call void @free(i8* %135) #8
  %136 = load i32**, i32*** @max_search_range, align 8, !tbaa !1
  %arrayidx49.1 = getelementptr inbounds i32*, i32** %136, i64 1
  %137 = bitcast i32** %arrayidx49.1 to i8**
  %138 = load i8*, i8** %137, align 8, !tbaa !1
  tail call void @free(i8* %138) #8
  %139 = load i8*, i8** bitcast (i32*** @search_setup_done to i8**), align 8, !tbaa !1
  tail call void @free(i8* %139) #8
  %140 = load i8*, i8** bitcast (i32*** @search_center_x to i8**), align 8, !tbaa !1
  tail call void @free(i8* %140) #8
  %141 = load i8*, i8** bitcast (i32*** @search_center_y to i8**), align 8, !tbaa !1
  tail call void @free(i8* %141) #8
  %142 = load i8*, i8** bitcast (i32*** @pos_00 to i8**), align 8, !tbaa !1
  tail call void @free(i8* %142) #8
  %143 = load i8*, i8** bitcast (i32*** @max_search_range to i8**), align 8, !tbaa !1
  tail call void @free(i8* %143) #8
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: norecurse nounwind uwtable
define void @ResetFastFullIntegerSearch() local_unnamed_addr #4 {
entry:
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references15 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 9
  %1 = load i32**, i32*** @search_setup_done, align 8
  %2 = load i32, i32* %max_num_references15, align 4, !tbaa !9
  %cmp216 = icmp sgt i32 %2, 0
  br i1 %cmp216, label %for.body3.lr.ph, label %for.inc6.1

for.body3.lr.ph:                                  ; preds = %entry
  %3 = load i32*, i32** %1, align 8, !tbaa !1
  br label %for.body3

for.body3:                                        ; preds = %for.body3.lr.ph, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body3.lr.ph ], [ %indvars.iv.next, %for.body3 ]
  %arrayidx5 = getelementptr inbounds i32, i32* %3, i64 %indvars.iv
  store i32 0, i32* %arrayidx5, align 4, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %4 = load i32, i32* %max_num_references15, align 4, !tbaa !9
  %5 = sext i32 %4 to i64
  %cmp2 = icmp slt i64 %indvars.iv.next, %5
  br i1 %cmp2, label %for.body3, label %for.inc6

for.inc6:                                         ; preds = %for.body3
  %cmp216.1 = icmp sgt i32 %4, 0
  br i1 %cmp216.1, label %for.body3.lr.ph.1, label %for.inc6.1

for.body3.lr.ph.1:                                ; preds = %for.inc6
  %arrayidx.1 = getelementptr inbounds i32*, i32** %1, i64 1
  %6 = load i32*, i32** %arrayidx.1, align 8, !tbaa !1
  br label %for.body3.1

for.body3.1:                                      ; preds = %for.body3.1, %for.body3.lr.ph.1
  %indvars.iv.1 = phi i64 [ 0, %for.body3.lr.ph.1 ], [ %indvars.iv.next.1, %for.body3.1 ]
  %arrayidx5.1 = getelementptr inbounds i32, i32* %6, i64 %indvars.iv.1
  store i32 0, i32* %arrayidx5.1, align 4, !tbaa !13
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %7 = load i32, i32* %max_num_references15, align 4, !tbaa !9
  %8 = sext i32 %7 to i64
  %cmp2.1 = icmp slt i64 %indvars.iv.next.1, %8
  br i1 %cmp2.1, label %for.body3.1, label %for.inc6.1.loopexit

for.inc6.1.loopexit:                              ; preds = %for.body3.1
  br label %for.inc6.1

for.inc6.1:                                       ; preds = %for.inc6.1.loopexit, %entry, %for.inc6
  ret void
}

; Function Attrs: norecurse nounwind uwtable
define void @SetupLargerBlocks(i32 %list, i32 %refindex, i32 %max_pos) local_unnamed_addr #4 {
entry:
  %0 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %idxprom = sext i32 %list to i64
  %arrayidx = getelementptr inbounds i32****, i32***** %0, i64 %idxprom
  %1 = load i32****, i32***** %arrayidx, align 8, !tbaa !1
  %idxprom1 = sext i32 %refindex to i64
  %arrayidx2 = getelementptr inbounds i32***, i32**** %1, i64 %idxprom1
  %2 = load i32***, i32**** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i32**, i32*** %2, i64 6
  %3 = load i32**, i32*** %arrayidx3, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds i32**, i32*** %2, i64 7
  %4 = load i32**, i32*** %arrayidx8, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i32*, i32** %4, i64 4
  %5 = load i32*, i32** %3, align 8, !tbaa !1
  %6 = load i32*, i32** %4, align 8, !tbaa !1
  %7 = load i32*, i32** %add.ptr, align 8, !tbaa !1
  %cmp871 = icmp sgt i32 %max_pos, 0
  br i1 %cmp871, label %for.body.preheader, label %for.end438

for.body.preheader:                               ; preds = %entry
  %wide.trip.count967 = zext i32 %max_pos to i64
  %min.iters.check = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check, label %for.body.preheader2175, label %min.iters.checked

min.iters.checked:                                ; preds = %for.body.preheader
  %8 = and i32 %max_pos, 7
  %n.mod.vf = zext i32 %8 to i64
  %n.vec = sub nsw i64 %wide.trip.count967, %n.mod.vf
  %cmp.zero = icmp eq i64 %n.vec, 0
  br i1 %cmp.zero, label %for.body.preheader2175, label %vector.memcheck

vector.memcheck:                                  ; preds = %min.iters.checked
  %scevgep = getelementptr i32, i32* %5, i64 %wide.trip.count967
  %scevgep1252 = getelementptr i32, i32* %6, i64 %wide.trip.count967
  %scevgep1254 = getelementptr i32, i32* %7, i64 %wide.trip.count967
  %bound0 = icmp ult i32* %5, %scevgep1252
  %bound1 = icmp ult i32* %6, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  %bound01256 = icmp ult i32* %5, %scevgep1254
  %bound11257 = icmp ult i32* %7, %scevgep
  %found.conflict1258 = and i1 %bound01256, %bound11257
  %conflict.rdx = or i1 %found.conflict, %found.conflict1258
  br i1 %conflict.rdx, label %for.body.preheader2175, label %vector.body.preheader

vector.body.preheader:                            ; preds = %vector.memcheck
  br label %vector.body

vector.body:                                      ; preds = %vector.body.preheader, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.body.preheader ]
  %9 = getelementptr inbounds i32, i32* %6, i64 %index
  %10 = bitcast i32* %9 to <4 x i32>*
  %wide.load = load <4 x i32>, <4 x i32>* %10, align 4, !tbaa !13, !alias.scope !15
  %11 = getelementptr i32, i32* %9, i64 4
  %12 = bitcast i32* %11 to <4 x i32>*
  %wide.load1260 = load <4 x i32>, <4 x i32>* %12, align 4, !tbaa !13, !alias.scope !15
  %13 = getelementptr inbounds i32, i32* %7, i64 %index
  %14 = bitcast i32* %13 to <4 x i32>*
  %wide.load1261 = load <4 x i32>, <4 x i32>* %14, align 4, !tbaa !13, !alias.scope !18
  %15 = getelementptr i32, i32* %13, i64 4
  %16 = bitcast i32* %15 to <4 x i32>*
  %wide.load1262 = load <4 x i32>, <4 x i32>* %16, align 4, !tbaa !13, !alias.scope !18
  %17 = add nsw <4 x i32> %wide.load1261, %wide.load
  %18 = add nsw <4 x i32> %wide.load1262, %wide.load1260
  %19 = getelementptr inbounds i32, i32* %5, i64 %index
  %20 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> %17, <4 x i32>* %20, align 4, !tbaa !13, !alias.scope !20, !noalias !22
  %21 = getelementptr i32, i32* %19, i64 4
  %22 = bitcast i32* %21 to <4 x i32>*
  store <4 x i32> %18, <4 x i32>* %22, align 4, !tbaa !13, !alias.scope !20, !noalias !22
  %index.next = add i64 %index, 8
  %23 = icmp eq i64 %index.next, %n.vec
  br i1 %23, label %middle.block, label %vector.body, !llvm.loop !23

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i32 %8, 0
  br i1 %cmp.n, label %for.end, label %for.body.preheader2175

for.body.preheader2175:                           ; preds = %middle.block, %vector.memcheck, %min.iters.checked, %for.body.preheader
  %indvars.iv965.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %min.iters.checked ], [ 0, %for.body.preheader ], [ %n.vec, %middle.block ]
  %24 = sub nsw i64 %wide.trip.count967, %indvars.iv965.ph
  %25 = add nsw i64 %wide.trip.count967, -1
  %26 = sub nsw i64 %25, %indvars.iv965.ph
  %xtraiter2245 = and i64 %24, 3
  %lcmp.mod2246 = icmp eq i64 %xtraiter2245, 0
  br i1 %lcmp.mod2246, label %for.body.prol.loopexit, label %for.body.prol.preheader

for.body.prol.preheader:                          ; preds = %for.body.preheader2175
  br label %for.body.prol

for.body.prol:                                    ; preds = %for.body.prol, %for.body.prol.preheader
  %indvars.iv965.prol = phi i64 [ %indvars.iv.next966.prol, %for.body.prol ], [ %indvars.iv965.ph, %for.body.prol.preheader ]
  %prol.iter2247 = phi i64 [ %prol.iter2247.sub, %for.body.prol ], [ %xtraiter2245, %for.body.prol.preheader ]
  %arrayidx10.prol = getelementptr inbounds i32, i32* %6, i64 %indvars.iv965.prol
  %27 = load i32, i32* %arrayidx10.prol, align 4, !tbaa !13
  %arrayidx12.prol = getelementptr inbounds i32, i32* %7, i64 %indvars.iv965.prol
  %28 = load i32, i32* %arrayidx12.prol, align 4, !tbaa !13
  %add.prol = add nsw i32 %28, %27
  %arrayidx14.prol = getelementptr inbounds i32, i32* %5, i64 %indvars.iv965.prol
  store i32 %add.prol, i32* %arrayidx14.prol, align 4, !tbaa !13
  %indvars.iv.next966.prol = add nuw nsw i64 %indvars.iv965.prol, 1
  %prol.iter2247.sub = add i64 %prol.iter2247, -1
  %prol.iter2247.cmp = icmp eq i64 %prol.iter2247.sub, 0
  br i1 %prol.iter2247.cmp, label %for.body.prol.loopexit.unr-lcssa, label %for.body.prol, !llvm.loop !26

for.body.prol.loopexit.unr-lcssa:                 ; preds = %for.body.prol
  br label %for.body.prol.loopexit

for.body.prol.loopexit:                           ; preds = %for.body.preheader2175, %for.body.prol.loopexit.unr-lcssa
  %indvars.iv965.unr = phi i64 [ %indvars.iv965.ph, %for.body.preheader2175 ], [ %indvars.iv.next966.prol, %for.body.prol.loopexit.unr-lcssa ]
  %29 = icmp ult i64 %26, 3
  br i1 %29, label %for.end.loopexit, label %for.body.preheader2175.new

for.body.preheader2175.new:                       ; preds = %for.body.prol.loopexit
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader2175.new
  %indvars.iv965 = phi i64 [ %indvars.iv965.unr, %for.body.preheader2175.new ], [ %indvars.iv.next966.3, %for.body ]
  %arrayidx10 = getelementptr inbounds i32, i32* %6, i64 %indvars.iv965
  %30 = load i32, i32* %arrayidx10, align 4, !tbaa !13
  %arrayidx12 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv965
  %31 = load i32, i32* %arrayidx12, align 4, !tbaa !13
  %add = add nsw i32 %31, %30
  %arrayidx14 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv965
  store i32 %add, i32* %arrayidx14, align 4, !tbaa !13
  %indvars.iv.next966 = add nuw nsw i64 %indvars.iv965, 1
  %arrayidx10.1 = getelementptr inbounds i32, i32* %6, i64 %indvars.iv.next966
  %32 = load i32, i32* %arrayidx10.1, align 4, !tbaa !13
  %arrayidx12.1 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv.next966
  %33 = load i32, i32* %arrayidx12.1, align 4, !tbaa !13
  %add.1 = add nsw i32 %33, %32
  %arrayidx14.1 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv.next966
  store i32 %add.1, i32* %arrayidx14.1, align 4, !tbaa !13
  %indvars.iv.next966.1 = add nsw i64 %indvars.iv965, 2
  %arrayidx10.2 = getelementptr inbounds i32, i32* %6, i64 %indvars.iv.next966.1
  %34 = load i32, i32* %arrayidx10.2, align 4, !tbaa !13
  %arrayidx12.2 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv.next966.1
  %35 = load i32, i32* %arrayidx12.2, align 4, !tbaa !13
  %add.2 = add nsw i32 %35, %34
  %arrayidx14.2 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv.next966.1
  store i32 %add.2, i32* %arrayidx14.2, align 4, !tbaa !13
  %indvars.iv.next966.2 = add nsw i64 %indvars.iv965, 3
  %arrayidx10.3 = getelementptr inbounds i32, i32* %6, i64 %indvars.iv.next966.2
  %36 = load i32, i32* %arrayidx10.3, align 4, !tbaa !13
  %arrayidx12.3 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv.next966.2
  %37 = load i32, i32* %arrayidx12.3, align 4, !tbaa !13
  %add.3 = add nsw i32 %37, %36
  %arrayidx14.3 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv.next966.2
  store i32 %add.3, i32* %arrayidx14.3, align 4, !tbaa !13
  %indvars.iv.next966.3 = add nsw i64 %indvars.iv965, 4
  %exitcond968.3 = icmp eq i64 %indvars.iv.next966.3, %wide.trip.count967
  br i1 %exitcond968.3, label %for.end.loopexit.unr-lcssa, label %for.body, !llvm.loop !28

for.end.loopexit.unr-lcssa:                       ; preds = %for.body
  br label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.body.prol.loopexit, %for.end.loopexit.unr-lcssa
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %middle.block
  %add.ptr15 = getelementptr inbounds i32*, i32** %3, i64 1
  %add.ptr16 = getelementptr inbounds i32*, i32** %4, i64 1
  %add.ptr17 = getelementptr inbounds i32*, i32** %4, i64 5
  %38 = load i32*, i32** %add.ptr15, align 8, !tbaa !1
  %39 = load i32*, i32** %add.ptr16, align 8, !tbaa !1
  %40 = load i32*, i32** %add.ptr17, align 8, !tbaa !1
  br i1 %cmp871, label %for.body20.preheader, label %for.end438

for.body20.preheader:                             ; preds = %for.end
  %wide.trip.count963 = zext i32 %max_pos to i64
  %min.iters.check1266 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1266, label %for.body20.preheader2174, label %min.iters.checked1267

min.iters.checked1267:                            ; preds = %for.body20.preheader
  %41 = and i32 %max_pos, 7
  %n.mod.vf1268 = zext i32 %41 to i64
  %n.vec1269 = sub nsw i64 %wide.trip.count967, %n.mod.vf1268
  %cmp.zero1270 = icmp eq i64 %n.vec1269, 0
  br i1 %cmp.zero1270, label %for.body20.preheader2174, label %vector.memcheck1286

vector.memcheck1286:                              ; preds = %min.iters.checked1267
  %scevgep1272 = getelementptr i32, i32* %38, i64 %wide.trip.count967
  %scevgep1274 = getelementptr i32, i32* %39, i64 %wide.trip.count967
  %scevgep1276 = getelementptr i32, i32* %40, i64 %wide.trip.count967
  %bound01278 = icmp ult i32* %38, %scevgep1274
  %bound11279 = icmp ult i32* %39, %scevgep1272
  %found.conflict1280 = and i1 %bound01278, %bound11279
  %bound01281 = icmp ult i32* %38, %scevgep1276
  %bound11282 = icmp ult i32* %40, %scevgep1272
  %found.conflict1283 = and i1 %bound01281, %bound11282
  %conflict.rdx1284 = or i1 %found.conflict1280, %found.conflict1283
  br i1 %conflict.rdx1284, label %for.body20.preheader2174, label %vector.body1263.preheader

vector.body1263.preheader:                        ; preds = %vector.memcheck1286
  br label %vector.body1263

vector.body1263:                                  ; preds = %vector.body1263.preheader, %vector.body1263
  %index1288 = phi i64 [ %index.next1289, %vector.body1263 ], [ 0, %vector.body1263.preheader ]
  %42 = getelementptr inbounds i32, i32* %39, i64 %index1288
  %43 = bitcast i32* %42 to <4 x i32>*
  %wide.load1296 = load <4 x i32>, <4 x i32>* %43, align 4, !tbaa !13, !alias.scope !29
  %44 = getelementptr i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  %wide.load1297 = load <4 x i32>, <4 x i32>* %45, align 4, !tbaa !13, !alias.scope !29
  %46 = getelementptr inbounds i32, i32* %40, i64 %index1288
  %47 = bitcast i32* %46 to <4 x i32>*
  %wide.load1298 = load <4 x i32>, <4 x i32>* %47, align 4, !tbaa !13, !alias.scope !32
  %48 = getelementptr i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  %wide.load1299 = load <4 x i32>, <4 x i32>* %49, align 4, !tbaa !13, !alias.scope !32
  %50 = add nsw <4 x i32> %wide.load1298, %wide.load1296
  %51 = add nsw <4 x i32> %wide.load1299, %wide.load1297
  %52 = getelementptr inbounds i32, i32* %38, i64 %index1288
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> %50, <4 x i32>* %53, align 4, !tbaa !13, !alias.scope !34, !noalias !36
  %54 = getelementptr i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> %51, <4 x i32>* %55, align 4, !tbaa !13, !alias.scope !34, !noalias !36
  %index.next1289 = add i64 %index1288, 8
  %56 = icmp eq i64 %index.next1289, %n.vec1269
  br i1 %56, label %middle.block1264, label %vector.body1263, !llvm.loop !37

middle.block1264:                                 ; preds = %vector.body1263
  %cmp.n1291 = icmp eq i32 %41, 0
  br i1 %cmp.n1291, label %for.end30, label %for.body20.preheader2174

for.body20.preheader2174:                         ; preds = %middle.block1264, %vector.memcheck1286, %min.iters.checked1267, %for.body20.preheader
  %indvars.iv961.ph = phi i64 [ 0, %vector.memcheck1286 ], [ 0, %min.iters.checked1267 ], [ 0, %for.body20.preheader ], [ %n.vec1269, %middle.block1264 ]
  %57 = sub nsw i64 %wide.trip.count967, %indvars.iv961.ph
  %58 = add nsw i64 %wide.trip.count967, -1
  %59 = sub nsw i64 %58, %indvars.iv961.ph
  %xtraiter2242 = and i64 %57, 3
  %lcmp.mod2243 = icmp eq i64 %xtraiter2242, 0
  br i1 %lcmp.mod2243, label %for.body20.prol.loopexit, label %for.body20.prol.preheader

for.body20.prol.preheader:                        ; preds = %for.body20.preheader2174
  br label %for.body20.prol

for.body20.prol:                                  ; preds = %for.body20.prol, %for.body20.prol.preheader
  %indvars.iv961.prol = phi i64 [ %indvars.iv.next962.prol, %for.body20.prol ], [ %indvars.iv961.ph, %for.body20.prol.preheader ]
  %prol.iter2244 = phi i64 [ %prol.iter2244.sub, %for.body20.prol ], [ %xtraiter2242, %for.body20.prol.preheader ]
  %arrayidx22.prol = getelementptr inbounds i32, i32* %39, i64 %indvars.iv961.prol
  %60 = load i32, i32* %arrayidx22.prol, align 4, !tbaa !13
  %arrayidx24.prol = getelementptr inbounds i32, i32* %40, i64 %indvars.iv961.prol
  %61 = load i32, i32* %arrayidx24.prol, align 4, !tbaa !13
  %add25.prol = add nsw i32 %61, %60
  %arrayidx27.prol = getelementptr inbounds i32, i32* %38, i64 %indvars.iv961.prol
  store i32 %add25.prol, i32* %arrayidx27.prol, align 4, !tbaa !13
  %indvars.iv.next962.prol = add nuw nsw i64 %indvars.iv961.prol, 1
  %prol.iter2244.sub = add i64 %prol.iter2244, -1
  %prol.iter2244.cmp = icmp eq i64 %prol.iter2244.sub, 0
  br i1 %prol.iter2244.cmp, label %for.body20.prol.loopexit.unr-lcssa, label %for.body20.prol, !llvm.loop !38

for.body20.prol.loopexit.unr-lcssa:               ; preds = %for.body20.prol
  br label %for.body20.prol.loopexit

for.body20.prol.loopexit:                         ; preds = %for.body20.preheader2174, %for.body20.prol.loopexit.unr-lcssa
  %indvars.iv961.unr = phi i64 [ %indvars.iv961.ph, %for.body20.preheader2174 ], [ %indvars.iv.next962.prol, %for.body20.prol.loopexit.unr-lcssa ]
  %62 = icmp ult i64 %59, 3
  br i1 %62, label %for.end30.loopexit, label %for.body20.preheader2174.new

for.body20.preheader2174.new:                     ; preds = %for.body20.prol.loopexit
  br label %for.body20

for.body20:                                       ; preds = %for.body20, %for.body20.preheader2174.new
  %indvars.iv961 = phi i64 [ %indvars.iv961.unr, %for.body20.preheader2174.new ], [ %indvars.iv.next962.3, %for.body20 ]
  %arrayidx22 = getelementptr inbounds i32, i32* %39, i64 %indvars.iv961
  %63 = load i32, i32* %arrayidx22, align 4, !tbaa !13
  %arrayidx24 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv961
  %64 = load i32, i32* %arrayidx24, align 4, !tbaa !13
  %add25 = add nsw i32 %64, %63
  %arrayidx27 = getelementptr inbounds i32, i32* %38, i64 %indvars.iv961
  store i32 %add25, i32* %arrayidx27, align 4, !tbaa !13
  %indvars.iv.next962 = add nuw nsw i64 %indvars.iv961, 1
  %arrayidx22.1 = getelementptr inbounds i32, i32* %39, i64 %indvars.iv.next962
  %65 = load i32, i32* %arrayidx22.1, align 4, !tbaa !13
  %arrayidx24.1 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv.next962
  %66 = load i32, i32* %arrayidx24.1, align 4, !tbaa !13
  %add25.1 = add nsw i32 %66, %65
  %arrayidx27.1 = getelementptr inbounds i32, i32* %38, i64 %indvars.iv.next962
  store i32 %add25.1, i32* %arrayidx27.1, align 4, !tbaa !13
  %indvars.iv.next962.1 = add nsw i64 %indvars.iv961, 2
  %arrayidx22.2 = getelementptr inbounds i32, i32* %39, i64 %indvars.iv.next962.1
  %67 = load i32, i32* %arrayidx22.2, align 4, !tbaa !13
  %arrayidx24.2 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv.next962.1
  %68 = load i32, i32* %arrayidx24.2, align 4, !tbaa !13
  %add25.2 = add nsw i32 %68, %67
  %arrayidx27.2 = getelementptr inbounds i32, i32* %38, i64 %indvars.iv.next962.1
  store i32 %add25.2, i32* %arrayidx27.2, align 4, !tbaa !13
  %indvars.iv.next962.2 = add nsw i64 %indvars.iv961, 3
  %arrayidx22.3 = getelementptr inbounds i32, i32* %39, i64 %indvars.iv.next962.2
  %69 = load i32, i32* %arrayidx22.3, align 4, !tbaa !13
  %arrayidx24.3 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv.next962.2
  %70 = load i32, i32* %arrayidx24.3, align 4, !tbaa !13
  %add25.3 = add nsw i32 %70, %69
  %arrayidx27.3 = getelementptr inbounds i32, i32* %38, i64 %indvars.iv.next962.2
  store i32 %add25.3, i32* %arrayidx27.3, align 4, !tbaa !13
  %indvars.iv.next962.3 = add nsw i64 %indvars.iv961, 4
  %exitcond964.3 = icmp eq i64 %indvars.iv.next962.3, %wide.trip.count963
  br i1 %exitcond964.3, label %for.end30.loopexit.unr-lcssa, label %for.body20, !llvm.loop !39

for.end30.loopexit.unr-lcssa:                     ; preds = %for.body20
  br label %for.end30.loopexit

for.end30.loopexit:                               ; preds = %for.body20.prol.loopexit, %for.end30.loopexit.unr-lcssa
  br label %for.end30

for.end30:                                        ; preds = %for.end30.loopexit, %middle.block1264
  %add.ptr31 = getelementptr inbounds i32*, i32** %3, i64 2
  %add.ptr32 = getelementptr inbounds i32*, i32** %4, i64 2
  %add.ptr33 = getelementptr inbounds i32*, i32** %4, i64 6
  %71 = load i32*, i32** %add.ptr31, align 8, !tbaa !1
  %72 = load i32*, i32** %add.ptr32, align 8, !tbaa !1
  %73 = load i32*, i32** %add.ptr33, align 8, !tbaa !1
  br i1 %cmp871, label %for.body36.preheader, label %for.end438

for.body36.preheader:                             ; preds = %for.end30
  %wide.trip.count959 = zext i32 %max_pos to i64
  %min.iters.check1303 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1303, label %for.body36.preheader2173, label %min.iters.checked1304

min.iters.checked1304:                            ; preds = %for.body36.preheader
  %74 = and i32 %max_pos, 7
  %n.mod.vf1305 = zext i32 %74 to i64
  %n.vec1306 = sub nsw i64 %wide.trip.count967, %n.mod.vf1305
  %cmp.zero1307 = icmp eq i64 %n.vec1306, 0
  br i1 %cmp.zero1307, label %for.body36.preheader2173, label %vector.memcheck1323

vector.memcheck1323:                              ; preds = %min.iters.checked1304
  %scevgep1309 = getelementptr i32, i32* %71, i64 %wide.trip.count967
  %scevgep1311 = getelementptr i32, i32* %72, i64 %wide.trip.count967
  %scevgep1313 = getelementptr i32, i32* %73, i64 %wide.trip.count967
  %bound01315 = icmp ult i32* %71, %scevgep1311
  %bound11316 = icmp ult i32* %72, %scevgep1309
  %found.conflict1317 = and i1 %bound01315, %bound11316
  %bound01318 = icmp ult i32* %71, %scevgep1313
  %bound11319 = icmp ult i32* %73, %scevgep1309
  %found.conflict1320 = and i1 %bound01318, %bound11319
  %conflict.rdx1321 = or i1 %found.conflict1317, %found.conflict1320
  br i1 %conflict.rdx1321, label %for.body36.preheader2173, label %vector.body1300.preheader

vector.body1300.preheader:                        ; preds = %vector.memcheck1323
  br label %vector.body1300

vector.body1300:                                  ; preds = %vector.body1300.preheader, %vector.body1300
  %index1325 = phi i64 [ %index.next1326, %vector.body1300 ], [ 0, %vector.body1300.preheader ]
  %75 = getelementptr inbounds i32, i32* %72, i64 %index1325
  %76 = bitcast i32* %75 to <4 x i32>*
  %wide.load1333 = load <4 x i32>, <4 x i32>* %76, align 4, !tbaa !13, !alias.scope !40
  %77 = getelementptr i32, i32* %75, i64 4
  %78 = bitcast i32* %77 to <4 x i32>*
  %wide.load1334 = load <4 x i32>, <4 x i32>* %78, align 4, !tbaa !13, !alias.scope !40
  %79 = getelementptr inbounds i32, i32* %73, i64 %index1325
  %80 = bitcast i32* %79 to <4 x i32>*
  %wide.load1335 = load <4 x i32>, <4 x i32>* %80, align 4, !tbaa !13, !alias.scope !43
  %81 = getelementptr i32, i32* %79, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  %wide.load1336 = load <4 x i32>, <4 x i32>* %82, align 4, !tbaa !13, !alias.scope !43
  %83 = add nsw <4 x i32> %wide.load1335, %wide.load1333
  %84 = add nsw <4 x i32> %wide.load1336, %wide.load1334
  %85 = getelementptr inbounds i32, i32* %71, i64 %index1325
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %86, align 4, !tbaa !13, !alias.scope !45, !noalias !47
  %87 = getelementptr i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %88, align 4, !tbaa !13, !alias.scope !45, !noalias !47
  %index.next1326 = add i64 %index1325, 8
  %89 = icmp eq i64 %index.next1326, %n.vec1306
  br i1 %89, label %middle.block1301, label %vector.body1300, !llvm.loop !48

middle.block1301:                                 ; preds = %vector.body1300
  %cmp.n1328 = icmp eq i32 %74, 0
  br i1 %cmp.n1328, label %for.end46, label %for.body36.preheader2173

for.body36.preheader2173:                         ; preds = %middle.block1301, %vector.memcheck1323, %min.iters.checked1304, %for.body36.preheader
  %indvars.iv957.ph = phi i64 [ 0, %vector.memcheck1323 ], [ 0, %min.iters.checked1304 ], [ 0, %for.body36.preheader ], [ %n.vec1306, %middle.block1301 ]
  %90 = sub nsw i64 %wide.trip.count967, %indvars.iv957.ph
  %91 = add nsw i64 %wide.trip.count967, -1
  %92 = sub nsw i64 %91, %indvars.iv957.ph
  %xtraiter2239 = and i64 %90, 3
  %lcmp.mod2240 = icmp eq i64 %xtraiter2239, 0
  br i1 %lcmp.mod2240, label %for.body36.prol.loopexit, label %for.body36.prol.preheader

for.body36.prol.preheader:                        ; preds = %for.body36.preheader2173
  br label %for.body36.prol

for.body36.prol:                                  ; preds = %for.body36.prol, %for.body36.prol.preheader
  %indvars.iv957.prol = phi i64 [ %indvars.iv.next958.prol, %for.body36.prol ], [ %indvars.iv957.ph, %for.body36.prol.preheader ]
  %prol.iter2241 = phi i64 [ %prol.iter2241.sub, %for.body36.prol ], [ %xtraiter2239, %for.body36.prol.preheader ]
  %arrayidx38.prol = getelementptr inbounds i32, i32* %72, i64 %indvars.iv957.prol
  %93 = load i32, i32* %arrayidx38.prol, align 4, !tbaa !13
  %arrayidx40.prol = getelementptr inbounds i32, i32* %73, i64 %indvars.iv957.prol
  %94 = load i32, i32* %arrayidx40.prol, align 4, !tbaa !13
  %add41.prol = add nsw i32 %94, %93
  %arrayidx43.prol = getelementptr inbounds i32, i32* %71, i64 %indvars.iv957.prol
  store i32 %add41.prol, i32* %arrayidx43.prol, align 4, !tbaa !13
  %indvars.iv.next958.prol = add nuw nsw i64 %indvars.iv957.prol, 1
  %prol.iter2241.sub = add i64 %prol.iter2241, -1
  %prol.iter2241.cmp = icmp eq i64 %prol.iter2241.sub, 0
  br i1 %prol.iter2241.cmp, label %for.body36.prol.loopexit.unr-lcssa, label %for.body36.prol, !llvm.loop !49

for.body36.prol.loopexit.unr-lcssa:               ; preds = %for.body36.prol
  br label %for.body36.prol.loopexit

for.body36.prol.loopexit:                         ; preds = %for.body36.preheader2173, %for.body36.prol.loopexit.unr-lcssa
  %indvars.iv957.unr = phi i64 [ %indvars.iv957.ph, %for.body36.preheader2173 ], [ %indvars.iv.next958.prol, %for.body36.prol.loopexit.unr-lcssa ]
  %95 = icmp ult i64 %92, 3
  br i1 %95, label %for.end46.loopexit, label %for.body36.preheader2173.new

for.body36.preheader2173.new:                     ; preds = %for.body36.prol.loopexit
  br label %for.body36

for.body36:                                       ; preds = %for.body36, %for.body36.preheader2173.new
  %indvars.iv957 = phi i64 [ %indvars.iv957.unr, %for.body36.preheader2173.new ], [ %indvars.iv.next958.3, %for.body36 ]
  %arrayidx38 = getelementptr inbounds i32, i32* %72, i64 %indvars.iv957
  %96 = load i32, i32* %arrayidx38, align 4, !tbaa !13
  %arrayidx40 = getelementptr inbounds i32, i32* %73, i64 %indvars.iv957
  %97 = load i32, i32* %arrayidx40, align 4, !tbaa !13
  %add41 = add nsw i32 %97, %96
  %arrayidx43 = getelementptr inbounds i32, i32* %71, i64 %indvars.iv957
  store i32 %add41, i32* %arrayidx43, align 4, !tbaa !13
  %indvars.iv.next958 = add nuw nsw i64 %indvars.iv957, 1
  %arrayidx38.1 = getelementptr inbounds i32, i32* %72, i64 %indvars.iv.next958
  %98 = load i32, i32* %arrayidx38.1, align 4, !tbaa !13
  %arrayidx40.1 = getelementptr inbounds i32, i32* %73, i64 %indvars.iv.next958
  %99 = load i32, i32* %arrayidx40.1, align 4, !tbaa !13
  %add41.1 = add nsw i32 %99, %98
  %arrayidx43.1 = getelementptr inbounds i32, i32* %71, i64 %indvars.iv.next958
  store i32 %add41.1, i32* %arrayidx43.1, align 4, !tbaa !13
  %indvars.iv.next958.1 = add nsw i64 %indvars.iv957, 2
  %arrayidx38.2 = getelementptr inbounds i32, i32* %72, i64 %indvars.iv.next958.1
  %100 = load i32, i32* %arrayidx38.2, align 4, !tbaa !13
  %arrayidx40.2 = getelementptr inbounds i32, i32* %73, i64 %indvars.iv.next958.1
  %101 = load i32, i32* %arrayidx40.2, align 4, !tbaa !13
  %add41.2 = add nsw i32 %101, %100
  %arrayidx43.2 = getelementptr inbounds i32, i32* %71, i64 %indvars.iv.next958.1
  store i32 %add41.2, i32* %arrayidx43.2, align 4, !tbaa !13
  %indvars.iv.next958.2 = add nsw i64 %indvars.iv957, 3
  %arrayidx38.3 = getelementptr inbounds i32, i32* %72, i64 %indvars.iv.next958.2
  %102 = load i32, i32* %arrayidx38.3, align 4, !tbaa !13
  %arrayidx40.3 = getelementptr inbounds i32, i32* %73, i64 %indvars.iv.next958.2
  %103 = load i32, i32* %arrayidx40.3, align 4, !tbaa !13
  %add41.3 = add nsw i32 %103, %102
  %arrayidx43.3 = getelementptr inbounds i32, i32* %71, i64 %indvars.iv.next958.2
  store i32 %add41.3, i32* %arrayidx43.3, align 4, !tbaa !13
  %indvars.iv.next958.3 = add nsw i64 %indvars.iv957, 4
  %exitcond960.3 = icmp eq i64 %indvars.iv.next958.3, %wide.trip.count959
  br i1 %exitcond960.3, label %for.end46.loopexit.unr-lcssa, label %for.body36, !llvm.loop !50

for.end46.loopexit.unr-lcssa:                     ; preds = %for.body36
  br label %for.end46.loopexit

for.end46.loopexit:                               ; preds = %for.body36.prol.loopexit, %for.end46.loopexit.unr-lcssa
  br label %for.end46

for.end46:                                        ; preds = %for.end46.loopexit, %middle.block1301
  %add.ptr47 = getelementptr inbounds i32*, i32** %3, i64 3
  %add.ptr48 = getelementptr inbounds i32*, i32** %4, i64 3
  %add.ptr49 = getelementptr inbounds i32*, i32** %4, i64 7
  %104 = load i32*, i32** %add.ptr47, align 8, !tbaa !1
  %105 = load i32*, i32** %add.ptr48, align 8, !tbaa !1
  %106 = load i32*, i32** %add.ptr49, align 8, !tbaa !1
  br i1 %cmp871, label %for.body52.preheader, label %for.end438

for.body52.preheader:                             ; preds = %for.end46
  %wide.trip.count955 = zext i32 %max_pos to i64
  %min.iters.check1340 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1340, label %for.body52.preheader2172, label %min.iters.checked1341

min.iters.checked1341:                            ; preds = %for.body52.preheader
  %107 = and i32 %max_pos, 7
  %n.mod.vf1342 = zext i32 %107 to i64
  %n.vec1343 = sub nsw i64 %wide.trip.count967, %n.mod.vf1342
  %cmp.zero1344 = icmp eq i64 %n.vec1343, 0
  br i1 %cmp.zero1344, label %for.body52.preheader2172, label %vector.memcheck1360

vector.memcheck1360:                              ; preds = %min.iters.checked1341
  %scevgep1346 = getelementptr i32, i32* %104, i64 %wide.trip.count967
  %scevgep1348 = getelementptr i32, i32* %105, i64 %wide.trip.count967
  %scevgep1350 = getelementptr i32, i32* %106, i64 %wide.trip.count967
  %bound01352 = icmp ult i32* %104, %scevgep1348
  %bound11353 = icmp ult i32* %105, %scevgep1346
  %found.conflict1354 = and i1 %bound01352, %bound11353
  %bound01355 = icmp ult i32* %104, %scevgep1350
  %bound11356 = icmp ult i32* %106, %scevgep1346
  %found.conflict1357 = and i1 %bound01355, %bound11356
  %conflict.rdx1358 = or i1 %found.conflict1354, %found.conflict1357
  br i1 %conflict.rdx1358, label %for.body52.preheader2172, label %vector.body1337.preheader

vector.body1337.preheader:                        ; preds = %vector.memcheck1360
  br label %vector.body1337

vector.body1337:                                  ; preds = %vector.body1337.preheader, %vector.body1337
  %index1362 = phi i64 [ %index.next1363, %vector.body1337 ], [ 0, %vector.body1337.preheader ]
  %108 = getelementptr inbounds i32, i32* %105, i64 %index1362
  %109 = bitcast i32* %108 to <4 x i32>*
  %wide.load1370 = load <4 x i32>, <4 x i32>* %109, align 4, !tbaa !13, !alias.scope !51
  %110 = getelementptr i32, i32* %108, i64 4
  %111 = bitcast i32* %110 to <4 x i32>*
  %wide.load1371 = load <4 x i32>, <4 x i32>* %111, align 4, !tbaa !13, !alias.scope !51
  %112 = getelementptr inbounds i32, i32* %106, i64 %index1362
  %113 = bitcast i32* %112 to <4 x i32>*
  %wide.load1372 = load <4 x i32>, <4 x i32>* %113, align 4, !tbaa !13, !alias.scope !54
  %114 = getelementptr i32, i32* %112, i64 4
  %115 = bitcast i32* %114 to <4 x i32>*
  %wide.load1373 = load <4 x i32>, <4 x i32>* %115, align 4, !tbaa !13, !alias.scope !54
  %116 = add nsw <4 x i32> %wide.load1372, %wide.load1370
  %117 = add nsw <4 x i32> %wide.load1373, %wide.load1371
  %118 = getelementptr inbounds i32, i32* %104, i64 %index1362
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %116, <4 x i32>* %119, align 4, !tbaa !13, !alias.scope !56, !noalias !58
  %120 = getelementptr i32, i32* %118, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %117, <4 x i32>* %121, align 4, !tbaa !13, !alias.scope !56, !noalias !58
  %index.next1363 = add i64 %index1362, 8
  %122 = icmp eq i64 %index.next1363, %n.vec1343
  br i1 %122, label %middle.block1338, label %vector.body1337, !llvm.loop !59

middle.block1338:                                 ; preds = %vector.body1337
  %cmp.n1365 = icmp eq i32 %107, 0
  br i1 %cmp.n1365, label %for.end62, label %for.body52.preheader2172

for.body52.preheader2172:                         ; preds = %middle.block1338, %vector.memcheck1360, %min.iters.checked1341, %for.body52.preheader
  %indvars.iv953.ph = phi i64 [ 0, %vector.memcheck1360 ], [ 0, %min.iters.checked1341 ], [ 0, %for.body52.preheader ], [ %n.vec1343, %middle.block1338 ]
  %123 = sub nsw i64 %wide.trip.count967, %indvars.iv953.ph
  %124 = add nsw i64 %wide.trip.count967, -1
  %125 = sub nsw i64 %124, %indvars.iv953.ph
  %xtraiter2236 = and i64 %123, 3
  %lcmp.mod2237 = icmp eq i64 %xtraiter2236, 0
  br i1 %lcmp.mod2237, label %for.body52.prol.loopexit, label %for.body52.prol.preheader

for.body52.prol.preheader:                        ; preds = %for.body52.preheader2172
  br label %for.body52.prol

for.body52.prol:                                  ; preds = %for.body52.prol, %for.body52.prol.preheader
  %indvars.iv953.prol = phi i64 [ %indvars.iv.next954.prol, %for.body52.prol ], [ %indvars.iv953.ph, %for.body52.prol.preheader ]
  %prol.iter2238 = phi i64 [ %prol.iter2238.sub, %for.body52.prol ], [ %xtraiter2236, %for.body52.prol.preheader ]
  %arrayidx54.prol = getelementptr inbounds i32, i32* %105, i64 %indvars.iv953.prol
  %126 = load i32, i32* %arrayidx54.prol, align 4, !tbaa !13
  %arrayidx56.prol = getelementptr inbounds i32, i32* %106, i64 %indvars.iv953.prol
  %127 = load i32, i32* %arrayidx56.prol, align 4, !tbaa !13
  %add57.prol = add nsw i32 %127, %126
  %arrayidx59.prol = getelementptr inbounds i32, i32* %104, i64 %indvars.iv953.prol
  store i32 %add57.prol, i32* %arrayidx59.prol, align 4, !tbaa !13
  %indvars.iv.next954.prol = add nuw nsw i64 %indvars.iv953.prol, 1
  %prol.iter2238.sub = add i64 %prol.iter2238, -1
  %prol.iter2238.cmp = icmp eq i64 %prol.iter2238.sub, 0
  br i1 %prol.iter2238.cmp, label %for.body52.prol.loopexit.unr-lcssa, label %for.body52.prol, !llvm.loop !60

for.body52.prol.loopexit.unr-lcssa:               ; preds = %for.body52.prol
  br label %for.body52.prol.loopexit

for.body52.prol.loopexit:                         ; preds = %for.body52.preheader2172, %for.body52.prol.loopexit.unr-lcssa
  %indvars.iv953.unr = phi i64 [ %indvars.iv953.ph, %for.body52.preheader2172 ], [ %indvars.iv.next954.prol, %for.body52.prol.loopexit.unr-lcssa ]
  %128 = icmp ult i64 %125, 3
  br i1 %128, label %for.end62.loopexit, label %for.body52.preheader2172.new

for.body52.preheader2172.new:                     ; preds = %for.body52.prol.loopexit
  br label %for.body52

for.body52:                                       ; preds = %for.body52, %for.body52.preheader2172.new
  %indvars.iv953 = phi i64 [ %indvars.iv953.unr, %for.body52.preheader2172.new ], [ %indvars.iv.next954.3, %for.body52 ]
  %arrayidx54 = getelementptr inbounds i32, i32* %105, i64 %indvars.iv953
  %129 = load i32, i32* %arrayidx54, align 4, !tbaa !13
  %arrayidx56 = getelementptr inbounds i32, i32* %106, i64 %indvars.iv953
  %130 = load i32, i32* %arrayidx56, align 4, !tbaa !13
  %add57 = add nsw i32 %130, %129
  %arrayidx59 = getelementptr inbounds i32, i32* %104, i64 %indvars.iv953
  store i32 %add57, i32* %arrayidx59, align 4, !tbaa !13
  %indvars.iv.next954 = add nuw nsw i64 %indvars.iv953, 1
  %arrayidx54.1 = getelementptr inbounds i32, i32* %105, i64 %indvars.iv.next954
  %131 = load i32, i32* %arrayidx54.1, align 4, !tbaa !13
  %arrayidx56.1 = getelementptr inbounds i32, i32* %106, i64 %indvars.iv.next954
  %132 = load i32, i32* %arrayidx56.1, align 4, !tbaa !13
  %add57.1 = add nsw i32 %132, %131
  %arrayidx59.1 = getelementptr inbounds i32, i32* %104, i64 %indvars.iv.next954
  store i32 %add57.1, i32* %arrayidx59.1, align 4, !tbaa !13
  %indvars.iv.next954.1 = add nsw i64 %indvars.iv953, 2
  %arrayidx54.2 = getelementptr inbounds i32, i32* %105, i64 %indvars.iv.next954.1
  %133 = load i32, i32* %arrayidx54.2, align 4, !tbaa !13
  %arrayidx56.2 = getelementptr inbounds i32, i32* %106, i64 %indvars.iv.next954.1
  %134 = load i32, i32* %arrayidx56.2, align 4, !tbaa !13
  %add57.2 = add nsw i32 %134, %133
  %arrayidx59.2 = getelementptr inbounds i32, i32* %104, i64 %indvars.iv.next954.1
  store i32 %add57.2, i32* %arrayidx59.2, align 4, !tbaa !13
  %indvars.iv.next954.2 = add nsw i64 %indvars.iv953, 3
  %arrayidx54.3 = getelementptr inbounds i32, i32* %105, i64 %indvars.iv.next954.2
  %135 = load i32, i32* %arrayidx54.3, align 4, !tbaa !13
  %arrayidx56.3 = getelementptr inbounds i32, i32* %106, i64 %indvars.iv.next954.2
  %136 = load i32, i32* %arrayidx56.3, align 4, !tbaa !13
  %add57.3 = add nsw i32 %136, %135
  %arrayidx59.3 = getelementptr inbounds i32, i32* %104, i64 %indvars.iv.next954.2
  store i32 %add57.3, i32* %arrayidx59.3, align 4, !tbaa !13
  %indvars.iv.next954.3 = add nsw i64 %indvars.iv953, 4
  %exitcond956.3 = icmp eq i64 %indvars.iv.next954.3, %wide.trip.count955
  br i1 %exitcond956.3, label %for.end62.loopexit.unr-lcssa, label %for.body52, !llvm.loop !61

for.end62.loopexit.unr-lcssa:                     ; preds = %for.body52
  br label %for.end62.loopexit

for.end62.loopexit:                               ; preds = %for.body52.prol.loopexit, %for.end62.loopexit.unr-lcssa
  br label %for.end62

for.end62:                                        ; preds = %for.end62.loopexit, %middle.block1338
  %add.ptr63 = getelementptr inbounds i32*, i32** %3, i64 8
  %add.ptr64 = getelementptr inbounds i32*, i32** %4, i64 8
  %add.ptr65 = getelementptr inbounds i32*, i32** %4, i64 12
  %137 = load i32*, i32** %add.ptr63, align 8, !tbaa !1
  %138 = load i32*, i32** %add.ptr64, align 8, !tbaa !1
  %139 = load i32*, i32** %add.ptr65, align 8, !tbaa !1
  br i1 %cmp871, label %for.body68.preheader, label %for.end438

for.body68.preheader:                             ; preds = %for.end62
  %wide.trip.count951 = zext i32 %max_pos to i64
  %min.iters.check1377 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1377, label %for.body68.preheader2171, label %min.iters.checked1378

min.iters.checked1378:                            ; preds = %for.body68.preheader
  %140 = and i32 %max_pos, 7
  %n.mod.vf1379 = zext i32 %140 to i64
  %n.vec1380 = sub nsw i64 %wide.trip.count967, %n.mod.vf1379
  %cmp.zero1381 = icmp eq i64 %n.vec1380, 0
  br i1 %cmp.zero1381, label %for.body68.preheader2171, label %vector.memcheck1397

vector.memcheck1397:                              ; preds = %min.iters.checked1378
  %scevgep1383 = getelementptr i32, i32* %137, i64 %wide.trip.count967
  %scevgep1385 = getelementptr i32, i32* %138, i64 %wide.trip.count967
  %scevgep1387 = getelementptr i32, i32* %139, i64 %wide.trip.count967
  %bound01389 = icmp ult i32* %137, %scevgep1385
  %bound11390 = icmp ult i32* %138, %scevgep1383
  %found.conflict1391 = and i1 %bound01389, %bound11390
  %bound01392 = icmp ult i32* %137, %scevgep1387
  %bound11393 = icmp ult i32* %139, %scevgep1383
  %found.conflict1394 = and i1 %bound01392, %bound11393
  %conflict.rdx1395 = or i1 %found.conflict1391, %found.conflict1394
  br i1 %conflict.rdx1395, label %for.body68.preheader2171, label %vector.body1374.preheader

vector.body1374.preheader:                        ; preds = %vector.memcheck1397
  br label %vector.body1374

vector.body1374:                                  ; preds = %vector.body1374.preheader, %vector.body1374
  %index1399 = phi i64 [ %index.next1400, %vector.body1374 ], [ 0, %vector.body1374.preheader ]
  %141 = getelementptr inbounds i32, i32* %138, i64 %index1399
  %142 = bitcast i32* %141 to <4 x i32>*
  %wide.load1407 = load <4 x i32>, <4 x i32>* %142, align 4, !tbaa !13, !alias.scope !62
  %143 = getelementptr i32, i32* %141, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %wide.load1408 = load <4 x i32>, <4 x i32>* %144, align 4, !tbaa !13, !alias.scope !62
  %145 = getelementptr inbounds i32, i32* %139, i64 %index1399
  %146 = bitcast i32* %145 to <4 x i32>*
  %wide.load1409 = load <4 x i32>, <4 x i32>* %146, align 4, !tbaa !13, !alias.scope !65
  %147 = getelementptr i32, i32* %145, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  %wide.load1410 = load <4 x i32>, <4 x i32>* %148, align 4, !tbaa !13, !alias.scope !65
  %149 = add nsw <4 x i32> %wide.load1409, %wide.load1407
  %150 = add nsw <4 x i32> %wide.load1410, %wide.load1408
  %151 = getelementptr inbounds i32, i32* %137, i64 %index1399
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %152, align 4, !tbaa !13, !alias.scope !67, !noalias !69
  %153 = getelementptr i32, i32* %151, i64 4
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %150, <4 x i32>* %154, align 4, !tbaa !13, !alias.scope !67, !noalias !69
  %index.next1400 = add i64 %index1399, 8
  %155 = icmp eq i64 %index.next1400, %n.vec1380
  br i1 %155, label %middle.block1375, label %vector.body1374, !llvm.loop !70

middle.block1375:                                 ; preds = %vector.body1374
  %cmp.n1402 = icmp eq i32 %140, 0
  br i1 %cmp.n1402, label %for.end78, label %for.body68.preheader2171

for.body68.preheader2171:                         ; preds = %middle.block1375, %vector.memcheck1397, %min.iters.checked1378, %for.body68.preheader
  %indvars.iv949.ph = phi i64 [ 0, %vector.memcheck1397 ], [ 0, %min.iters.checked1378 ], [ 0, %for.body68.preheader ], [ %n.vec1380, %middle.block1375 ]
  %156 = sub nsw i64 %wide.trip.count967, %indvars.iv949.ph
  %157 = add nsw i64 %wide.trip.count967, -1
  %158 = sub nsw i64 %157, %indvars.iv949.ph
  %xtraiter2233 = and i64 %156, 3
  %lcmp.mod2234 = icmp eq i64 %xtraiter2233, 0
  br i1 %lcmp.mod2234, label %for.body68.prol.loopexit, label %for.body68.prol.preheader

for.body68.prol.preheader:                        ; preds = %for.body68.preheader2171
  br label %for.body68.prol

for.body68.prol:                                  ; preds = %for.body68.prol, %for.body68.prol.preheader
  %indvars.iv949.prol = phi i64 [ %indvars.iv.next950.prol, %for.body68.prol ], [ %indvars.iv949.ph, %for.body68.prol.preheader ]
  %prol.iter2235 = phi i64 [ %prol.iter2235.sub, %for.body68.prol ], [ %xtraiter2233, %for.body68.prol.preheader ]
  %arrayidx70.prol = getelementptr inbounds i32, i32* %138, i64 %indvars.iv949.prol
  %159 = load i32, i32* %arrayidx70.prol, align 4, !tbaa !13
  %arrayidx72.prol = getelementptr inbounds i32, i32* %139, i64 %indvars.iv949.prol
  %160 = load i32, i32* %arrayidx72.prol, align 4, !tbaa !13
  %add73.prol = add nsw i32 %160, %159
  %arrayidx75.prol = getelementptr inbounds i32, i32* %137, i64 %indvars.iv949.prol
  store i32 %add73.prol, i32* %arrayidx75.prol, align 4, !tbaa !13
  %indvars.iv.next950.prol = add nuw nsw i64 %indvars.iv949.prol, 1
  %prol.iter2235.sub = add i64 %prol.iter2235, -1
  %prol.iter2235.cmp = icmp eq i64 %prol.iter2235.sub, 0
  br i1 %prol.iter2235.cmp, label %for.body68.prol.loopexit.unr-lcssa, label %for.body68.prol, !llvm.loop !71

for.body68.prol.loopexit.unr-lcssa:               ; preds = %for.body68.prol
  br label %for.body68.prol.loopexit

for.body68.prol.loopexit:                         ; preds = %for.body68.preheader2171, %for.body68.prol.loopexit.unr-lcssa
  %indvars.iv949.unr = phi i64 [ %indvars.iv949.ph, %for.body68.preheader2171 ], [ %indvars.iv.next950.prol, %for.body68.prol.loopexit.unr-lcssa ]
  %161 = icmp ult i64 %158, 3
  br i1 %161, label %for.end78.loopexit, label %for.body68.preheader2171.new

for.body68.preheader2171.new:                     ; preds = %for.body68.prol.loopexit
  br label %for.body68

for.body68:                                       ; preds = %for.body68, %for.body68.preheader2171.new
  %indvars.iv949 = phi i64 [ %indvars.iv949.unr, %for.body68.preheader2171.new ], [ %indvars.iv.next950.3, %for.body68 ]
  %arrayidx70 = getelementptr inbounds i32, i32* %138, i64 %indvars.iv949
  %162 = load i32, i32* %arrayidx70, align 4, !tbaa !13
  %arrayidx72 = getelementptr inbounds i32, i32* %139, i64 %indvars.iv949
  %163 = load i32, i32* %arrayidx72, align 4, !tbaa !13
  %add73 = add nsw i32 %163, %162
  %arrayidx75 = getelementptr inbounds i32, i32* %137, i64 %indvars.iv949
  store i32 %add73, i32* %arrayidx75, align 4, !tbaa !13
  %indvars.iv.next950 = add nuw nsw i64 %indvars.iv949, 1
  %arrayidx70.1 = getelementptr inbounds i32, i32* %138, i64 %indvars.iv.next950
  %164 = load i32, i32* %arrayidx70.1, align 4, !tbaa !13
  %arrayidx72.1 = getelementptr inbounds i32, i32* %139, i64 %indvars.iv.next950
  %165 = load i32, i32* %arrayidx72.1, align 4, !tbaa !13
  %add73.1 = add nsw i32 %165, %164
  %arrayidx75.1 = getelementptr inbounds i32, i32* %137, i64 %indvars.iv.next950
  store i32 %add73.1, i32* %arrayidx75.1, align 4, !tbaa !13
  %indvars.iv.next950.1 = add nsw i64 %indvars.iv949, 2
  %arrayidx70.2 = getelementptr inbounds i32, i32* %138, i64 %indvars.iv.next950.1
  %166 = load i32, i32* %arrayidx70.2, align 4, !tbaa !13
  %arrayidx72.2 = getelementptr inbounds i32, i32* %139, i64 %indvars.iv.next950.1
  %167 = load i32, i32* %arrayidx72.2, align 4, !tbaa !13
  %add73.2 = add nsw i32 %167, %166
  %arrayidx75.2 = getelementptr inbounds i32, i32* %137, i64 %indvars.iv.next950.1
  store i32 %add73.2, i32* %arrayidx75.2, align 4, !tbaa !13
  %indvars.iv.next950.2 = add nsw i64 %indvars.iv949, 3
  %arrayidx70.3 = getelementptr inbounds i32, i32* %138, i64 %indvars.iv.next950.2
  %168 = load i32, i32* %arrayidx70.3, align 4, !tbaa !13
  %arrayidx72.3 = getelementptr inbounds i32, i32* %139, i64 %indvars.iv.next950.2
  %169 = load i32, i32* %arrayidx72.3, align 4, !tbaa !13
  %add73.3 = add nsw i32 %169, %168
  %arrayidx75.3 = getelementptr inbounds i32, i32* %137, i64 %indvars.iv.next950.2
  store i32 %add73.3, i32* %arrayidx75.3, align 4, !tbaa !13
  %indvars.iv.next950.3 = add nsw i64 %indvars.iv949, 4
  %exitcond952.3 = icmp eq i64 %indvars.iv.next950.3, %wide.trip.count951
  br i1 %exitcond952.3, label %for.end78.loopexit.unr-lcssa, label %for.body68, !llvm.loop !72

for.end78.loopexit.unr-lcssa:                     ; preds = %for.body68
  br label %for.end78.loopexit

for.end78.loopexit:                               ; preds = %for.body68.prol.loopexit, %for.end78.loopexit.unr-lcssa
  br label %for.end78

for.end78:                                        ; preds = %for.end78.loopexit, %middle.block1375
  %add.ptr79 = getelementptr inbounds i32*, i32** %3, i64 9
  %add.ptr80 = getelementptr inbounds i32*, i32** %4, i64 9
  %add.ptr81 = getelementptr inbounds i32*, i32** %4, i64 13
  %170 = load i32*, i32** %add.ptr79, align 8, !tbaa !1
  %171 = load i32*, i32** %add.ptr80, align 8, !tbaa !1
  %172 = load i32*, i32** %add.ptr81, align 8, !tbaa !1
  br i1 %cmp871, label %for.body84.preheader, label %for.end438

for.body84.preheader:                             ; preds = %for.end78
  %wide.trip.count947 = zext i32 %max_pos to i64
  %min.iters.check1414 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1414, label %for.body84.preheader2170, label %min.iters.checked1415

min.iters.checked1415:                            ; preds = %for.body84.preheader
  %173 = and i32 %max_pos, 7
  %n.mod.vf1416 = zext i32 %173 to i64
  %n.vec1417 = sub nsw i64 %wide.trip.count967, %n.mod.vf1416
  %cmp.zero1418 = icmp eq i64 %n.vec1417, 0
  br i1 %cmp.zero1418, label %for.body84.preheader2170, label %vector.memcheck1434

vector.memcheck1434:                              ; preds = %min.iters.checked1415
  %scevgep1420 = getelementptr i32, i32* %170, i64 %wide.trip.count967
  %scevgep1422 = getelementptr i32, i32* %171, i64 %wide.trip.count967
  %scevgep1424 = getelementptr i32, i32* %172, i64 %wide.trip.count967
  %bound01426 = icmp ult i32* %170, %scevgep1422
  %bound11427 = icmp ult i32* %171, %scevgep1420
  %found.conflict1428 = and i1 %bound01426, %bound11427
  %bound01429 = icmp ult i32* %170, %scevgep1424
  %bound11430 = icmp ult i32* %172, %scevgep1420
  %found.conflict1431 = and i1 %bound01429, %bound11430
  %conflict.rdx1432 = or i1 %found.conflict1428, %found.conflict1431
  br i1 %conflict.rdx1432, label %for.body84.preheader2170, label %vector.body1411.preheader

vector.body1411.preheader:                        ; preds = %vector.memcheck1434
  br label %vector.body1411

vector.body1411:                                  ; preds = %vector.body1411.preheader, %vector.body1411
  %index1436 = phi i64 [ %index.next1437, %vector.body1411 ], [ 0, %vector.body1411.preheader ]
  %174 = getelementptr inbounds i32, i32* %171, i64 %index1436
  %175 = bitcast i32* %174 to <4 x i32>*
  %wide.load1444 = load <4 x i32>, <4 x i32>* %175, align 4, !tbaa !13, !alias.scope !73
  %176 = getelementptr i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  %wide.load1445 = load <4 x i32>, <4 x i32>* %177, align 4, !tbaa !13, !alias.scope !73
  %178 = getelementptr inbounds i32, i32* %172, i64 %index1436
  %179 = bitcast i32* %178 to <4 x i32>*
  %wide.load1446 = load <4 x i32>, <4 x i32>* %179, align 4, !tbaa !13, !alias.scope !76
  %180 = getelementptr i32, i32* %178, i64 4
  %181 = bitcast i32* %180 to <4 x i32>*
  %wide.load1447 = load <4 x i32>, <4 x i32>* %181, align 4, !tbaa !13, !alias.scope !76
  %182 = add nsw <4 x i32> %wide.load1446, %wide.load1444
  %183 = add nsw <4 x i32> %wide.load1447, %wide.load1445
  %184 = getelementptr inbounds i32, i32* %170, i64 %index1436
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %182, <4 x i32>* %185, align 4, !tbaa !13, !alias.scope !78, !noalias !80
  %186 = getelementptr i32, i32* %184, i64 4
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %183, <4 x i32>* %187, align 4, !tbaa !13, !alias.scope !78, !noalias !80
  %index.next1437 = add i64 %index1436, 8
  %188 = icmp eq i64 %index.next1437, %n.vec1417
  br i1 %188, label %middle.block1412, label %vector.body1411, !llvm.loop !81

middle.block1412:                                 ; preds = %vector.body1411
  %cmp.n1439 = icmp eq i32 %173, 0
  br i1 %cmp.n1439, label %for.end94, label %for.body84.preheader2170

for.body84.preheader2170:                         ; preds = %middle.block1412, %vector.memcheck1434, %min.iters.checked1415, %for.body84.preheader
  %indvars.iv945.ph = phi i64 [ 0, %vector.memcheck1434 ], [ 0, %min.iters.checked1415 ], [ 0, %for.body84.preheader ], [ %n.vec1417, %middle.block1412 ]
  %189 = sub nsw i64 %wide.trip.count967, %indvars.iv945.ph
  %190 = add nsw i64 %wide.trip.count967, -1
  %191 = sub nsw i64 %190, %indvars.iv945.ph
  %xtraiter2230 = and i64 %189, 3
  %lcmp.mod2231 = icmp eq i64 %xtraiter2230, 0
  br i1 %lcmp.mod2231, label %for.body84.prol.loopexit, label %for.body84.prol.preheader

for.body84.prol.preheader:                        ; preds = %for.body84.preheader2170
  br label %for.body84.prol

for.body84.prol:                                  ; preds = %for.body84.prol, %for.body84.prol.preheader
  %indvars.iv945.prol = phi i64 [ %indvars.iv.next946.prol, %for.body84.prol ], [ %indvars.iv945.ph, %for.body84.prol.preheader ]
  %prol.iter2232 = phi i64 [ %prol.iter2232.sub, %for.body84.prol ], [ %xtraiter2230, %for.body84.prol.preheader ]
  %arrayidx86.prol = getelementptr inbounds i32, i32* %171, i64 %indvars.iv945.prol
  %192 = load i32, i32* %arrayidx86.prol, align 4, !tbaa !13
  %arrayidx88.prol = getelementptr inbounds i32, i32* %172, i64 %indvars.iv945.prol
  %193 = load i32, i32* %arrayidx88.prol, align 4, !tbaa !13
  %add89.prol = add nsw i32 %193, %192
  %arrayidx91.prol = getelementptr inbounds i32, i32* %170, i64 %indvars.iv945.prol
  store i32 %add89.prol, i32* %arrayidx91.prol, align 4, !tbaa !13
  %indvars.iv.next946.prol = add nuw nsw i64 %indvars.iv945.prol, 1
  %prol.iter2232.sub = add i64 %prol.iter2232, -1
  %prol.iter2232.cmp = icmp eq i64 %prol.iter2232.sub, 0
  br i1 %prol.iter2232.cmp, label %for.body84.prol.loopexit.unr-lcssa, label %for.body84.prol, !llvm.loop !82

for.body84.prol.loopexit.unr-lcssa:               ; preds = %for.body84.prol
  br label %for.body84.prol.loopexit

for.body84.prol.loopexit:                         ; preds = %for.body84.preheader2170, %for.body84.prol.loopexit.unr-lcssa
  %indvars.iv945.unr = phi i64 [ %indvars.iv945.ph, %for.body84.preheader2170 ], [ %indvars.iv.next946.prol, %for.body84.prol.loopexit.unr-lcssa ]
  %194 = icmp ult i64 %191, 3
  br i1 %194, label %for.end94.loopexit, label %for.body84.preheader2170.new

for.body84.preheader2170.new:                     ; preds = %for.body84.prol.loopexit
  br label %for.body84

for.body84:                                       ; preds = %for.body84, %for.body84.preheader2170.new
  %indvars.iv945 = phi i64 [ %indvars.iv945.unr, %for.body84.preheader2170.new ], [ %indvars.iv.next946.3, %for.body84 ]
  %arrayidx86 = getelementptr inbounds i32, i32* %171, i64 %indvars.iv945
  %195 = load i32, i32* %arrayidx86, align 4, !tbaa !13
  %arrayidx88 = getelementptr inbounds i32, i32* %172, i64 %indvars.iv945
  %196 = load i32, i32* %arrayidx88, align 4, !tbaa !13
  %add89 = add nsw i32 %196, %195
  %arrayidx91 = getelementptr inbounds i32, i32* %170, i64 %indvars.iv945
  store i32 %add89, i32* %arrayidx91, align 4, !tbaa !13
  %indvars.iv.next946 = add nuw nsw i64 %indvars.iv945, 1
  %arrayidx86.1 = getelementptr inbounds i32, i32* %171, i64 %indvars.iv.next946
  %197 = load i32, i32* %arrayidx86.1, align 4, !tbaa !13
  %arrayidx88.1 = getelementptr inbounds i32, i32* %172, i64 %indvars.iv.next946
  %198 = load i32, i32* %arrayidx88.1, align 4, !tbaa !13
  %add89.1 = add nsw i32 %198, %197
  %arrayidx91.1 = getelementptr inbounds i32, i32* %170, i64 %indvars.iv.next946
  store i32 %add89.1, i32* %arrayidx91.1, align 4, !tbaa !13
  %indvars.iv.next946.1 = add nsw i64 %indvars.iv945, 2
  %arrayidx86.2 = getelementptr inbounds i32, i32* %171, i64 %indvars.iv.next946.1
  %199 = load i32, i32* %arrayidx86.2, align 4, !tbaa !13
  %arrayidx88.2 = getelementptr inbounds i32, i32* %172, i64 %indvars.iv.next946.1
  %200 = load i32, i32* %arrayidx88.2, align 4, !tbaa !13
  %add89.2 = add nsw i32 %200, %199
  %arrayidx91.2 = getelementptr inbounds i32, i32* %170, i64 %indvars.iv.next946.1
  store i32 %add89.2, i32* %arrayidx91.2, align 4, !tbaa !13
  %indvars.iv.next946.2 = add nsw i64 %indvars.iv945, 3
  %arrayidx86.3 = getelementptr inbounds i32, i32* %171, i64 %indvars.iv.next946.2
  %201 = load i32, i32* %arrayidx86.3, align 4, !tbaa !13
  %arrayidx88.3 = getelementptr inbounds i32, i32* %172, i64 %indvars.iv.next946.2
  %202 = load i32, i32* %arrayidx88.3, align 4, !tbaa !13
  %add89.3 = add nsw i32 %202, %201
  %arrayidx91.3 = getelementptr inbounds i32, i32* %170, i64 %indvars.iv.next946.2
  store i32 %add89.3, i32* %arrayidx91.3, align 4, !tbaa !13
  %indvars.iv.next946.3 = add nsw i64 %indvars.iv945, 4
  %exitcond948.3 = icmp eq i64 %indvars.iv.next946.3, %wide.trip.count947
  br i1 %exitcond948.3, label %for.end94.loopexit.unr-lcssa, label %for.body84, !llvm.loop !83

for.end94.loopexit.unr-lcssa:                     ; preds = %for.body84
  br label %for.end94.loopexit

for.end94.loopexit:                               ; preds = %for.body84.prol.loopexit, %for.end94.loopexit.unr-lcssa
  br label %for.end94

for.end94:                                        ; preds = %for.end94.loopexit, %middle.block1412
  %add.ptr95 = getelementptr inbounds i32*, i32** %3, i64 10
  %add.ptr96 = getelementptr inbounds i32*, i32** %4, i64 10
  %add.ptr97 = getelementptr inbounds i32*, i32** %4, i64 14
  %203 = load i32*, i32** %add.ptr95, align 8, !tbaa !1
  %204 = load i32*, i32** %add.ptr96, align 8, !tbaa !1
  %205 = load i32*, i32** %add.ptr97, align 8, !tbaa !1
  br i1 %cmp871, label %for.body100.preheader, label %for.end438

for.body100.preheader:                            ; preds = %for.end94
  %wide.trip.count943 = zext i32 %max_pos to i64
  %min.iters.check1451 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1451, label %for.body100.preheader2169, label %min.iters.checked1452

min.iters.checked1452:                            ; preds = %for.body100.preheader
  %206 = and i32 %max_pos, 7
  %n.mod.vf1453 = zext i32 %206 to i64
  %n.vec1454 = sub nsw i64 %wide.trip.count967, %n.mod.vf1453
  %cmp.zero1455 = icmp eq i64 %n.vec1454, 0
  br i1 %cmp.zero1455, label %for.body100.preheader2169, label %vector.memcheck1471

vector.memcheck1471:                              ; preds = %min.iters.checked1452
  %scevgep1457 = getelementptr i32, i32* %203, i64 %wide.trip.count967
  %scevgep1459 = getelementptr i32, i32* %204, i64 %wide.trip.count967
  %scevgep1461 = getelementptr i32, i32* %205, i64 %wide.trip.count967
  %bound01463 = icmp ult i32* %203, %scevgep1459
  %bound11464 = icmp ult i32* %204, %scevgep1457
  %found.conflict1465 = and i1 %bound01463, %bound11464
  %bound01466 = icmp ult i32* %203, %scevgep1461
  %bound11467 = icmp ult i32* %205, %scevgep1457
  %found.conflict1468 = and i1 %bound01466, %bound11467
  %conflict.rdx1469 = or i1 %found.conflict1465, %found.conflict1468
  br i1 %conflict.rdx1469, label %for.body100.preheader2169, label %vector.body1448.preheader

vector.body1448.preheader:                        ; preds = %vector.memcheck1471
  br label %vector.body1448

vector.body1448:                                  ; preds = %vector.body1448.preheader, %vector.body1448
  %index1473 = phi i64 [ %index.next1474, %vector.body1448 ], [ 0, %vector.body1448.preheader ]
  %207 = getelementptr inbounds i32, i32* %204, i64 %index1473
  %208 = bitcast i32* %207 to <4 x i32>*
  %wide.load1481 = load <4 x i32>, <4 x i32>* %208, align 4, !tbaa !13, !alias.scope !84
  %209 = getelementptr i32, i32* %207, i64 4
  %210 = bitcast i32* %209 to <4 x i32>*
  %wide.load1482 = load <4 x i32>, <4 x i32>* %210, align 4, !tbaa !13, !alias.scope !84
  %211 = getelementptr inbounds i32, i32* %205, i64 %index1473
  %212 = bitcast i32* %211 to <4 x i32>*
  %wide.load1483 = load <4 x i32>, <4 x i32>* %212, align 4, !tbaa !13, !alias.scope !87
  %213 = getelementptr i32, i32* %211, i64 4
  %214 = bitcast i32* %213 to <4 x i32>*
  %wide.load1484 = load <4 x i32>, <4 x i32>* %214, align 4, !tbaa !13, !alias.scope !87
  %215 = add nsw <4 x i32> %wide.load1483, %wide.load1481
  %216 = add nsw <4 x i32> %wide.load1484, %wide.load1482
  %217 = getelementptr inbounds i32, i32* %203, i64 %index1473
  %218 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %215, <4 x i32>* %218, align 4, !tbaa !13, !alias.scope !89, !noalias !91
  %219 = getelementptr i32, i32* %217, i64 4
  %220 = bitcast i32* %219 to <4 x i32>*
  store <4 x i32> %216, <4 x i32>* %220, align 4, !tbaa !13, !alias.scope !89, !noalias !91
  %index.next1474 = add i64 %index1473, 8
  %221 = icmp eq i64 %index.next1474, %n.vec1454
  br i1 %221, label %middle.block1449, label %vector.body1448, !llvm.loop !92

middle.block1449:                                 ; preds = %vector.body1448
  %cmp.n1476 = icmp eq i32 %206, 0
  br i1 %cmp.n1476, label %for.end110, label %for.body100.preheader2169

for.body100.preheader2169:                        ; preds = %middle.block1449, %vector.memcheck1471, %min.iters.checked1452, %for.body100.preheader
  %indvars.iv941.ph = phi i64 [ 0, %vector.memcheck1471 ], [ 0, %min.iters.checked1452 ], [ 0, %for.body100.preheader ], [ %n.vec1454, %middle.block1449 ]
  %222 = sub nsw i64 %wide.trip.count967, %indvars.iv941.ph
  %223 = add nsw i64 %wide.trip.count967, -1
  %224 = sub nsw i64 %223, %indvars.iv941.ph
  %xtraiter2227 = and i64 %222, 3
  %lcmp.mod2228 = icmp eq i64 %xtraiter2227, 0
  br i1 %lcmp.mod2228, label %for.body100.prol.loopexit, label %for.body100.prol.preheader

for.body100.prol.preheader:                       ; preds = %for.body100.preheader2169
  br label %for.body100.prol

for.body100.prol:                                 ; preds = %for.body100.prol, %for.body100.prol.preheader
  %indvars.iv941.prol = phi i64 [ %indvars.iv.next942.prol, %for.body100.prol ], [ %indvars.iv941.ph, %for.body100.prol.preheader ]
  %prol.iter2229 = phi i64 [ %prol.iter2229.sub, %for.body100.prol ], [ %xtraiter2227, %for.body100.prol.preheader ]
  %arrayidx102.prol = getelementptr inbounds i32, i32* %204, i64 %indvars.iv941.prol
  %225 = load i32, i32* %arrayidx102.prol, align 4, !tbaa !13
  %arrayidx104.prol = getelementptr inbounds i32, i32* %205, i64 %indvars.iv941.prol
  %226 = load i32, i32* %arrayidx104.prol, align 4, !tbaa !13
  %add105.prol = add nsw i32 %226, %225
  %arrayidx107.prol = getelementptr inbounds i32, i32* %203, i64 %indvars.iv941.prol
  store i32 %add105.prol, i32* %arrayidx107.prol, align 4, !tbaa !13
  %indvars.iv.next942.prol = add nuw nsw i64 %indvars.iv941.prol, 1
  %prol.iter2229.sub = add i64 %prol.iter2229, -1
  %prol.iter2229.cmp = icmp eq i64 %prol.iter2229.sub, 0
  br i1 %prol.iter2229.cmp, label %for.body100.prol.loopexit.unr-lcssa, label %for.body100.prol, !llvm.loop !93

for.body100.prol.loopexit.unr-lcssa:              ; preds = %for.body100.prol
  br label %for.body100.prol.loopexit

for.body100.prol.loopexit:                        ; preds = %for.body100.preheader2169, %for.body100.prol.loopexit.unr-lcssa
  %indvars.iv941.unr = phi i64 [ %indvars.iv941.ph, %for.body100.preheader2169 ], [ %indvars.iv.next942.prol, %for.body100.prol.loopexit.unr-lcssa ]
  %227 = icmp ult i64 %224, 3
  br i1 %227, label %for.end110.loopexit, label %for.body100.preheader2169.new

for.body100.preheader2169.new:                    ; preds = %for.body100.prol.loopexit
  br label %for.body100

for.body100:                                      ; preds = %for.body100, %for.body100.preheader2169.new
  %indvars.iv941 = phi i64 [ %indvars.iv941.unr, %for.body100.preheader2169.new ], [ %indvars.iv.next942.3, %for.body100 ]
  %arrayidx102 = getelementptr inbounds i32, i32* %204, i64 %indvars.iv941
  %228 = load i32, i32* %arrayidx102, align 4, !tbaa !13
  %arrayidx104 = getelementptr inbounds i32, i32* %205, i64 %indvars.iv941
  %229 = load i32, i32* %arrayidx104, align 4, !tbaa !13
  %add105 = add nsw i32 %229, %228
  %arrayidx107 = getelementptr inbounds i32, i32* %203, i64 %indvars.iv941
  store i32 %add105, i32* %arrayidx107, align 4, !tbaa !13
  %indvars.iv.next942 = add nuw nsw i64 %indvars.iv941, 1
  %arrayidx102.1 = getelementptr inbounds i32, i32* %204, i64 %indvars.iv.next942
  %230 = load i32, i32* %arrayidx102.1, align 4, !tbaa !13
  %arrayidx104.1 = getelementptr inbounds i32, i32* %205, i64 %indvars.iv.next942
  %231 = load i32, i32* %arrayidx104.1, align 4, !tbaa !13
  %add105.1 = add nsw i32 %231, %230
  %arrayidx107.1 = getelementptr inbounds i32, i32* %203, i64 %indvars.iv.next942
  store i32 %add105.1, i32* %arrayidx107.1, align 4, !tbaa !13
  %indvars.iv.next942.1 = add nsw i64 %indvars.iv941, 2
  %arrayidx102.2 = getelementptr inbounds i32, i32* %204, i64 %indvars.iv.next942.1
  %232 = load i32, i32* %arrayidx102.2, align 4, !tbaa !13
  %arrayidx104.2 = getelementptr inbounds i32, i32* %205, i64 %indvars.iv.next942.1
  %233 = load i32, i32* %arrayidx104.2, align 4, !tbaa !13
  %add105.2 = add nsw i32 %233, %232
  %arrayidx107.2 = getelementptr inbounds i32, i32* %203, i64 %indvars.iv.next942.1
  store i32 %add105.2, i32* %arrayidx107.2, align 4, !tbaa !13
  %indvars.iv.next942.2 = add nsw i64 %indvars.iv941, 3
  %arrayidx102.3 = getelementptr inbounds i32, i32* %204, i64 %indvars.iv.next942.2
  %234 = load i32, i32* %arrayidx102.3, align 4, !tbaa !13
  %arrayidx104.3 = getelementptr inbounds i32, i32* %205, i64 %indvars.iv.next942.2
  %235 = load i32, i32* %arrayidx104.3, align 4, !tbaa !13
  %add105.3 = add nsw i32 %235, %234
  %arrayidx107.3 = getelementptr inbounds i32, i32* %203, i64 %indvars.iv.next942.2
  store i32 %add105.3, i32* %arrayidx107.3, align 4, !tbaa !13
  %indvars.iv.next942.3 = add nsw i64 %indvars.iv941, 4
  %exitcond944.3 = icmp eq i64 %indvars.iv.next942.3, %wide.trip.count943
  br i1 %exitcond944.3, label %for.end110.loopexit.unr-lcssa, label %for.body100, !llvm.loop !94

for.end110.loopexit.unr-lcssa:                    ; preds = %for.body100
  br label %for.end110.loopexit

for.end110.loopexit:                              ; preds = %for.body100.prol.loopexit, %for.end110.loopexit.unr-lcssa
  br label %for.end110

for.end110:                                       ; preds = %for.end110.loopexit, %middle.block1449
  %add.ptr111 = getelementptr inbounds i32*, i32** %3, i64 11
  %add.ptr112 = getelementptr inbounds i32*, i32** %4, i64 11
  %add.ptr113 = getelementptr inbounds i32*, i32** %4, i64 15
  %236 = load i32*, i32** %add.ptr111, align 8, !tbaa !1
  %237 = load i32*, i32** %add.ptr112, align 8, !tbaa !1
  %238 = load i32*, i32** %add.ptr113, align 8, !tbaa !1
  br i1 %cmp871, label %for.body116.preheader, label %for.end438

for.body116.preheader:                            ; preds = %for.end110
  %wide.trip.count939 = zext i32 %max_pos to i64
  %min.iters.check1488 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1488, label %for.body116.preheader2168, label %min.iters.checked1489

min.iters.checked1489:                            ; preds = %for.body116.preheader
  %239 = and i32 %max_pos, 7
  %n.mod.vf1490 = zext i32 %239 to i64
  %n.vec1491 = sub nsw i64 %wide.trip.count967, %n.mod.vf1490
  %cmp.zero1492 = icmp eq i64 %n.vec1491, 0
  br i1 %cmp.zero1492, label %for.body116.preheader2168, label %vector.memcheck1508

vector.memcheck1508:                              ; preds = %min.iters.checked1489
  %scevgep1494 = getelementptr i32, i32* %236, i64 %wide.trip.count967
  %scevgep1496 = getelementptr i32, i32* %237, i64 %wide.trip.count967
  %scevgep1498 = getelementptr i32, i32* %238, i64 %wide.trip.count967
  %bound01500 = icmp ult i32* %236, %scevgep1496
  %bound11501 = icmp ult i32* %237, %scevgep1494
  %found.conflict1502 = and i1 %bound01500, %bound11501
  %bound01503 = icmp ult i32* %236, %scevgep1498
  %bound11504 = icmp ult i32* %238, %scevgep1494
  %found.conflict1505 = and i1 %bound01503, %bound11504
  %conflict.rdx1506 = or i1 %found.conflict1502, %found.conflict1505
  br i1 %conflict.rdx1506, label %for.body116.preheader2168, label %vector.body1485.preheader

vector.body1485.preheader:                        ; preds = %vector.memcheck1508
  br label %vector.body1485

vector.body1485:                                  ; preds = %vector.body1485.preheader, %vector.body1485
  %index1510 = phi i64 [ %index.next1511, %vector.body1485 ], [ 0, %vector.body1485.preheader ]
  %240 = getelementptr inbounds i32, i32* %237, i64 %index1510
  %241 = bitcast i32* %240 to <4 x i32>*
  %wide.load1518 = load <4 x i32>, <4 x i32>* %241, align 4, !tbaa !13, !alias.scope !95
  %242 = getelementptr i32, i32* %240, i64 4
  %243 = bitcast i32* %242 to <4 x i32>*
  %wide.load1519 = load <4 x i32>, <4 x i32>* %243, align 4, !tbaa !13, !alias.scope !95
  %244 = getelementptr inbounds i32, i32* %238, i64 %index1510
  %245 = bitcast i32* %244 to <4 x i32>*
  %wide.load1520 = load <4 x i32>, <4 x i32>* %245, align 4, !tbaa !13, !alias.scope !98
  %246 = getelementptr i32, i32* %244, i64 4
  %247 = bitcast i32* %246 to <4 x i32>*
  %wide.load1521 = load <4 x i32>, <4 x i32>* %247, align 4, !tbaa !13, !alias.scope !98
  %248 = add nsw <4 x i32> %wide.load1520, %wide.load1518
  %249 = add nsw <4 x i32> %wide.load1521, %wide.load1519
  %250 = getelementptr inbounds i32, i32* %236, i64 %index1510
  %251 = bitcast i32* %250 to <4 x i32>*
  store <4 x i32> %248, <4 x i32>* %251, align 4, !tbaa !13, !alias.scope !100, !noalias !102
  %252 = getelementptr i32, i32* %250, i64 4
  %253 = bitcast i32* %252 to <4 x i32>*
  store <4 x i32> %249, <4 x i32>* %253, align 4, !tbaa !13, !alias.scope !100, !noalias !102
  %index.next1511 = add i64 %index1510, 8
  %254 = icmp eq i64 %index.next1511, %n.vec1491
  br i1 %254, label %middle.block1486, label %vector.body1485, !llvm.loop !103

middle.block1486:                                 ; preds = %vector.body1485
  %cmp.n1513 = icmp eq i32 %239, 0
  br i1 %cmp.n1513, label %for.end126, label %for.body116.preheader2168

for.body116.preheader2168:                        ; preds = %middle.block1486, %vector.memcheck1508, %min.iters.checked1489, %for.body116.preheader
  %indvars.iv937.ph = phi i64 [ 0, %vector.memcheck1508 ], [ 0, %min.iters.checked1489 ], [ 0, %for.body116.preheader ], [ %n.vec1491, %middle.block1486 ]
  %255 = sub nsw i64 %wide.trip.count967, %indvars.iv937.ph
  %256 = add nsw i64 %wide.trip.count967, -1
  %257 = sub nsw i64 %256, %indvars.iv937.ph
  %xtraiter2224 = and i64 %255, 3
  %lcmp.mod2225 = icmp eq i64 %xtraiter2224, 0
  br i1 %lcmp.mod2225, label %for.body116.prol.loopexit, label %for.body116.prol.preheader

for.body116.prol.preheader:                       ; preds = %for.body116.preheader2168
  br label %for.body116.prol

for.body116.prol:                                 ; preds = %for.body116.prol, %for.body116.prol.preheader
  %indvars.iv937.prol = phi i64 [ %indvars.iv.next938.prol, %for.body116.prol ], [ %indvars.iv937.ph, %for.body116.prol.preheader ]
  %prol.iter2226 = phi i64 [ %prol.iter2226.sub, %for.body116.prol ], [ %xtraiter2224, %for.body116.prol.preheader ]
  %arrayidx118.prol = getelementptr inbounds i32, i32* %237, i64 %indvars.iv937.prol
  %258 = load i32, i32* %arrayidx118.prol, align 4, !tbaa !13
  %arrayidx120.prol = getelementptr inbounds i32, i32* %238, i64 %indvars.iv937.prol
  %259 = load i32, i32* %arrayidx120.prol, align 4, !tbaa !13
  %add121.prol = add nsw i32 %259, %258
  %arrayidx123.prol = getelementptr inbounds i32, i32* %236, i64 %indvars.iv937.prol
  store i32 %add121.prol, i32* %arrayidx123.prol, align 4, !tbaa !13
  %indvars.iv.next938.prol = add nuw nsw i64 %indvars.iv937.prol, 1
  %prol.iter2226.sub = add i64 %prol.iter2226, -1
  %prol.iter2226.cmp = icmp eq i64 %prol.iter2226.sub, 0
  br i1 %prol.iter2226.cmp, label %for.body116.prol.loopexit.unr-lcssa, label %for.body116.prol, !llvm.loop !104

for.body116.prol.loopexit.unr-lcssa:              ; preds = %for.body116.prol
  br label %for.body116.prol.loopexit

for.body116.prol.loopexit:                        ; preds = %for.body116.preheader2168, %for.body116.prol.loopexit.unr-lcssa
  %indvars.iv937.unr = phi i64 [ %indvars.iv937.ph, %for.body116.preheader2168 ], [ %indvars.iv.next938.prol, %for.body116.prol.loopexit.unr-lcssa ]
  %260 = icmp ult i64 %257, 3
  br i1 %260, label %for.end126.loopexit, label %for.body116.preheader2168.new

for.body116.preheader2168.new:                    ; preds = %for.body116.prol.loopexit
  br label %for.body116

for.body116:                                      ; preds = %for.body116, %for.body116.preheader2168.new
  %indvars.iv937 = phi i64 [ %indvars.iv937.unr, %for.body116.preheader2168.new ], [ %indvars.iv.next938.3, %for.body116 ]
  %arrayidx118 = getelementptr inbounds i32, i32* %237, i64 %indvars.iv937
  %261 = load i32, i32* %arrayidx118, align 4, !tbaa !13
  %arrayidx120 = getelementptr inbounds i32, i32* %238, i64 %indvars.iv937
  %262 = load i32, i32* %arrayidx120, align 4, !tbaa !13
  %add121 = add nsw i32 %262, %261
  %arrayidx123 = getelementptr inbounds i32, i32* %236, i64 %indvars.iv937
  store i32 %add121, i32* %arrayidx123, align 4, !tbaa !13
  %indvars.iv.next938 = add nuw nsw i64 %indvars.iv937, 1
  %arrayidx118.1 = getelementptr inbounds i32, i32* %237, i64 %indvars.iv.next938
  %263 = load i32, i32* %arrayidx118.1, align 4, !tbaa !13
  %arrayidx120.1 = getelementptr inbounds i32, i32* %238, i64 %indvars.iv.next938
  %264 = load i32, i32* %arrayidx120.1, align 4, !tbaa !13
  %add121.1 = add nsw i32 %264, %263
  %arrayidx123.1 = getelementptr inbounds i32, i32* %236, i64 %indvars.iv.next938
  store i32 %add121.1, i32* %arrayidx123.1, align 4, !tbaa !13
  %indvars.iv.next938.1 = add nsw i64 %indvars.iv937, 2
  %arrayidx118.2 = getelementptr inbounds i32, i32* %237, i64 %indvars.iv.next938.1
  %265 = load i32, i32* %arrayidx118.2, align 4, !tbaa !13
  %arrayidx120.2 = getelementptr inbounds i32, i32* %238, i64 %indvars.iv.next938.1
  %266 = load i32, i32* %arrayidx120.2, align 4, !tbaa !13
  %add121.2 = add nsw i32 %266, %265
  %arrayidx123.2 = getelementptr inbounds i32, i32* %236, i64 %indvars.iv.next938.1
  store i32 %add121.2, i32* %arrayidx123.2, align 4, !tbaa !13
  %indvars.iv.next938.2 = add nsw i64 %indvars.iv937, 3
  %arrayidx118.3 = getelementptr inbounds i32, i32* %237, i64 %indvars.iv.next938.2
  %267 = load i32, i32* %arrayidx118.3, align 4, !tbaa !13
  %arrayidx120.3 = getelementptr inbounds i32, i32* %238, i64 %indvars.iv.next938.2
  %268 = load i32, i32* %arrayidx120.3, align 4, !tbaa !13
  %add121.3 = add nsw i32 %268, %267
  %arrayidx123.3 = getelementptr inbounds i32, i32* %236, i64 %indvars.iv.next938.2
  store i32 %add121.3, i32* %arrayidx123.3, align 4, !tbaa !13
  %indvars.iv.next938.3 = add nsw i64 %indvars.iv937, 4
  %exitcond940.3 = icmp eq i64 %indvars.iv.next938.3, %wide.trip.count939
  br i1 %exitcond940.3, label %for.end126.loopexit.unr-lcssa, label %for.body116, !llvm.loop !105

for.end126.loopexit.unr-lcssa:                    ; preds = %for.body116
  br label %for.end126.loopexit

for.end126.loopexit:                              ; preds = %for.body116.prol.loopexit, %for.end126.loopexit.unr-lcssa
  br label %for.end126

for.end126:                                       ; preds = %for.end126.loopexit, %middle.block1486
  %arrayidx131 = getelementptr inbounds i32**, i32*** %2, i64 5
  %269 = load i32**, i32*** %arrayidx131, align 8, !tbaa !1
  %270 = load i32*, i32** %269, align 8, !tbaa !1
  br i1 %cmp871, label %for.body140.preheader, label %for.end438

for.body140.preheader:                            ; preds = %for.end126
  %wide.trip.count935 = zext i32 %max_pos to i64
  %min.iters.check1525 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1525, label %for.body140.preheader2167, label %min.iters.checked1526

min.iters.checked1526:                            ; preds = %for.body140.preheader
  %271 = and i32 %max_pos, 7
  %n.mod.vf1527 = zext i32 %271 to i64
  %n.vec1528 = sub nsw i64 %wide.trip.count967, %n.mod.vf1527
  %cmp.zero1529 = icmp eq i64 %n.vec1528, 0
  br i1 %cmp.zero1529, label %for.body140.preheader2167, label %vector.memcheck1545

vector.memcheck1545:                              ; preds = %min.iters.checked1526
  %scevgep1531 = getelementptr i32, i32* %270, i64 %wide.trip.count967
  %scevgep1533 = getelementptr i32, i32* %6, i64 %wide.trip.count967
  %scevgep1535 = getelementptr i32, i32* %39, i64 %wide.trip.count967
  %bound01537 = icmp ult i32* %270, %scevgep1533
  %bound11538 = icmp ult i32* %6, %scevgep1531
  %found.conflict1539 = and i1 %bound01537, %bound11538
  %bound01540 = icmp ult i32* %270, %scevgep1535
  %bound11541 = icmp ult i32* %39, %scevgep1531
  %found.conflict1542 = and i1 %bound01540, %bound11541
  %conflict.rdx1543 = or i1 %found.conflict1539, %found.conflict1542
  br i1 %conflict.rdx1543, label %for.body140.preheader2167, label %vector.body1522.preheader

vector.body1522.preheader:                        ; preds = %vector.memcheck1545
  br label %vector.body1522

vector.body1522:                                  ; preds = %vector.body1522.preheader, %vector.body1522
  %index1547 = phi i64 [ %index.next1548, %vector.body1522 ], [ 0, %vector.body1522.preheader ]
  %272 = getelementptr inbounds i32, i32* %6, i64 %index1547
  %273 = bitcast i32* %272 to <4 x i32>*
  %wide.load1555 = load <4 x i32>, <4 x i32>* %273, align 4, !tbaa !13, !alias.scope !106
  %274 = getelementptr i32, i32* %272, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  %wide.load1556 = load <4 x i32>, <4 x i32>* %275, align 4, !tbaa !13, !alias.scope !106
  %276 = getelementptr inbounds i32, i32* %39, i64 %index1547
  %277 = bitcast i32* %276 to <4 x i32>*
  %wide.load1557 = load <4 x i32>, <4 x i32>* %277, align 4, !tbaa !13, !alias.scope !109
  %278 = getelementptr i32, i32* %276, i64 4
  %279 = bitcast i32* %278 to <4 x i32>*
  %wide.load1558 = load <4 x i32>, <4 x i32>* %279, align 4, !tbaa !13, !alias.scope !109
  %280 = add nsw <4 x i32> %wide.load1557, %wide.load1555
  %281 = add nsw <4 x i32> %wide.load1558, %wide.load1556
  %282 = getelementptr inbounds i32, i32* %270, i64 %index1547
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %280, <4 x i32>* %283, align 4, !tbaa !13, !alias.scope !111, !noalias !113
  %284 = getelementptr i32, i32* %282, i64 4
  %285 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> %281, <4 x i32>* %285, align 4, !tbaa !13, !alias.scope !111, !noalias !113
  %index.next1548 = add i64 %index1547, 8
  %286 = icmp eq i64 %index.next1548, %n.vec1528
  br i1 %286, label %middle.block1523, label %vector.body1522, !llvm.loop !114

middle.block1523:                                 ; preds = %vector.body1522
  %cmp.n1550 = icmp eq i32 %271, 0
  br i1 %cmp.n1550, label %for.end150, label %for.body140.preheader2167

for.body140.preheader2167:                        ; preds = %middle.block1523, %vector.memcheck1545, %min.iters.checked1526, %for.body140.preheader
  %indvars.iv933.ph = phi i64 [ 0, %vector.memcheck1545 ], [ 0, %min.iters.checked1526 ], [ 0, %for.body140.preheader ], [ %n.vec1528, %middle.block1523 ]
  %287 = sub nsw i64 %wide.trip.count967, %indvars.iv933.ph
  %288 = add nsw i64 %wide.trip.count967, -1
  %289 = sub nsw i64 %288, %indvars.iv933.ph
  %xtraiter2221 = and i64 %287, 3
  %lcmp.mod2222 = icmp eq i64 %xtraiter2221, 0
  br i1 %lcmp.mod2222, label %for.body140.prol.loopexit, label %for.body140.prol.preheader

for.body140.prol.preheader:                       ; preds = %for.body140.preheader2167
  br label %for.body140.prol

for.body140.prol:                                 ; preds = %for.body140.prol, %for.body140.prol.preheader
  %indvars.iv933.prol = phi i64 [ %indvars.iv.next934.prol, %for.body140.prol ], [ %indvars.iv933.ph, %for.body140.prol.preheader ]
  %prol.iter2223 = phi i64 [ %prol.iter2223.sub, %for.body140.prol ], [ %xtraiter2221, %for.body140.prol.preheader ]
  %arrayidx142.prol = getelementptr inbounds i32, i32* %6, i64 %indvars.iv933.prol
  %290 = load i32, i32* %arrayidx142.prol, align 4, !tbaa !13
  %arrayidx144.prol = getelementptr inbounds i32, i32* %39, i64 %indvars.iv933.prol
  %291 = load i32, i32* %arrayidx144.prol, align 4, !tbaa !13
  %add145.prol = add nsw i32 %291, %290
  %arrayidx147.prol = getelementptr inbounds i32, i32* %270, i64 %indvars.iv933.prol
  store i32 %add145.prol, i32* %arrayidx147.prol, align 4, !tbaa !13
  %indvars.iv.next934.prol = add nuw nsw i64 %indvars.iv933.prol, 1
  %prol.iter2223.sub = add i64 %prol.iter2223, -1
  %prol.iter2223.cmp = icmp eq i64 %prol.iter2223.sub, 0
  br i1 %prol.iter2223.cmp, label %for.body140.prol.loopexit.unr-lcssa, label %for.body140.prol, !llvm.loop !115

for.body140.prol.loopexit.unr-lcssa:              ; preds = %for.body140.prol
  br label %for.body140.prol.loopexit

for.body140.prol.loopexit:                        ; preds = %for.body140.preheader2167, %for.body140.prol.loopexit.unr-lcssa
  %indvars.iv933.unr = phi i64 [ %indvars.iv933.ph, %for.body140.preheader2167 ], [ %indvars.iv.next934.prol, %for.body140.prol.loopexit.unr-lcssa ]
  %292 = icmp ult i64 %289, 3
  br i1 %292, label %for.end150.loopexit, label %for.body140.preheader2167.new

for.body140.preheader2167.new:                    ; preds = %for.body140.prol.loopexit
  br label %for.body140

for.body140:                                      ; preds = %for.body140, %for.body140.preheader2167.new
  %indvars.iv933 = phi i64 [ %indvars.iv933.unr, %for.body140.preheader2167.new ], [ %indvars.iv.next934.3, %for.body140 ]
  %arrayidx142 = getelementptr inbounds i32, i32* %6, i64 %indvars.iv933
  %293 = load i32, i32* %arrayidx142, align 4, !tbaa !13
  %arrayidx144 = getelementptr inbounds i32, i32* %39, i64 %indvars.iv933
  %294 = load i32, i32* %arrayidx144, align 4, !tbaa !13
  %add145 = add nsw i32 %294, %293
  %arrayidx147 = getelementptr inbounds i32, i32* %270, i64 %indvars.iv933
  store i32 %add145, i32* %arrayidx147, align 4, !tbaa !13
  %indvars.iv.next934 = add nuw nsw i64 %indvars.iv933, 1
  %arrayidx142.1 = getelementptr inbounds i32, i32* %6, i64 %indvars.iv.next934
  %295 = load i32, i32* %arrayidx142.1, align 4, !tbaa !13
  %arrayidx144.1 = getelementptr inbounds i32, i32* %39, i64 %indvars.iv.next934
  %296 = load i32, i32* %arrayidx144.1, align 4, !tbaa !13
  %add145.1 = add nsw i32 %296, %295
  %arrayidx147.1 = getelementptr inbounds i32, i32* %270, i64 %indvars.iv.next934
  store i32 %add145.1, i32* %arrayidx147.1, align 4, !tbaa !13
  %indvars.iv.next934.1 = add nsw i64 %indvars.iv933, 2
  %arrayidx142.2 = getelementptr inbounds i32, i32* %6, i64 %indvars.iv.next934.1
  %297 = load i32, i32* %arrayidx142.2, align 4, !tbaa !13
  %arrayidx144.2 = getelementptr inbounds i32, i32* %39, i64 %indvars.iv.next934.1
  %298 = load i32, i32* %arrayidx144.2, align 4, !tbaa !13
  %add145.2 = add nsw i32 %298, %297
  %arrayidx147.2 = getelementptr inbounds i32, i32* %270, i64 %indvars.iv.next934.1
  store i32 %add145.2, i32* %arrayidx147.2, align 4, !tbaa !13
  %indvars.iv.next934.2 = add nsw i64 %indvars.iv933, 3
  %arrayidx142.3 = getelementptr inbounds i32, i32* %6, i64 %indvars.iv.next934.2
  %299 = load i32, i32* %arrayidx142.3, align 4, !tbaa !13
  %arrayidx144.3 = getelementptr inbounds i32, i32* %39, i64 %indvars.iv.next934.2
  %300 = load i32, i32* %arrayidx144.3, align 4, !tbaa !13
  %add145.3 = add nsw i32 %300, %299
  %arrayidx147.3 = getelementptr inbounds i32, i32* %270, i64 %indvars.iv.next934.2
  store i32 %add145.3, i32* %arrayidx147.3, align 4, !tbaa !13
  %indvars.iv.next934.3 = add nsw i64 %indvars.iv933, 4
  %exitcond936.3 = icmp eq i64 %indvars.iv.next934.3, %wide.trip.count935
  br i1 %exitcond936.3, label %for.end150.loopexit.unr-lcssa, label %for.body140, !llvm.loop !116

for.end150.loopexit.unr-lcssa:                    ; preds = %for.body140
  br label %for.end150.loopexit

for.end150.loopexit:                              ; preds = %for.body140.prol.loopexit, %for.end150.loopexit.unr-lcssa
  br label %for.end150

for.end150:                                       ; preds = %for.end150.loopexit, %middle.block1523
  %add.ptr151 = getelementptr inbounds i32*, i32** %269, i64 2
  %301 = load i32*, i32** %add.ptr151, align 8, !tbaa !1
  br i1 %cmp871, label %for.body156.preheader, label %for.end438

for.body156.preheader:                            ; preds = %for.end150
  %wide.trip.count931 = zext i32 %max_pos to i64
  %min.iters.check1562 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1562, label %for.body156.preheader2166, label %min.iters.checked1563

min.iters.checked1563:                            ; preds = %for.body156.preheader
  %302 = and i32 %max_pos, 7
  %n.mod.vf1564 = zext i32 %302 to i64
  %n.vec1565 = sub nsw i64 %wide.trip.count967, %n.mod.vf1564
  %cmp.zero1566 = icmp eq i64 %n.vec1565, 0
  br i1 %cmp.zero1566, label %for.body156.preheader2166, label %vector.memcheck1582

vector.memcheck1582:                              ; preds = %min.iters.checked1563
  %scevgep1568 = getelementptr i32, i32* %301, i64 %wide.trip.count967
  %scevgep1570 = getelementptr i32, i32* %72, i64 %wide.trip.count967
  %scevgep1572 = getelementptr i32, i32* %105, i64 %wide.trip.count967
  %bound01574 = icmp ult i32* %301, %scevgep1570
  %bound11575 = icmp ult i32* %72, %scevgep1568
  %found.conflict1576 = and i1 %bound01574, %bound11575
  %bound01577 = icmp ult i32* %301, %scevgep1572
  %bound11578 = icmp ult i32* %105, %scevgep1568
  %found.conflict1579 = and i1 %bound01577, %bound11578
  %conflict.rdx1580 = or i1 %found.conflict1576, %found.conflict1579
  br i1 %conflict.rdx1580, label %for.body156.preheader2166, label %vector.body1559.preheader

vector.body1559.preheader:                        ; preds = %vector.memcheck1582
  br label %vector.body1559

vector.body1559:                                  ; preds = %vector.body1559.preheader, %vector.body1559
  %index1584 = phi i64 [ %index.next1585, %vector.body1559 ], [ 0, %vector.body1559.preheader ]
  %303 = getelementptr inbounds i32, i32* %72, i64 %index1584
  %304 = bitcast i32* %303 to <4 x i32>*
  %wide.load1592 = load <4 x i32>, <4 x i32>* %304, align 4, !tbaa !13, !alias.scope !117
  %305 = getelementptr i32, i32* %303, i64 4
  %306 = bitcast i32* %305 to <4 x i32>*
  %wide.load1593 = load <4 x i32>, <4 x i32>* %306, align 4, !tbaa !13, !alias.scope !117
  %307 = getelementptr inbounds i32, i32* %105, i64 %index1584
  %308 = bitcast i32* %307 to <4 x i32>*
  %wide.load1594 = load <4 x i32>, <4 x i32>* %308, align 4, !tbaa !13, !alias.scope !120
  %309 = getelementptr i32, i32* %307, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %wide.load1595 = load <4 x i32>, <4 x i32>* %310, align 4, !tbaa !13, !alias.scope !120
  %311 = add nsw <4 x i32> %wide.load1594, %wide.load1592
  %312 = add nsw <4 x i32> %wide.load1595, %wide.load1593
  %313 = getelementptr inbounds i32, i32* %301, i64 %index1584
  %314 = bitcast i32* %313 to <4 x i32>*
  store <4 x i32> %311, <4 x i32>* %314, align 4, !tbaa !13, !alias.scope !122, !noalias !124
  %315 = getelementptr i32, i32* %313, i64 4
  %316 = bitcast i32* %315 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %316, align 4, !tbaa !13, !alias.scope !122, !noalias !124
  %index.next1585 = add i64 %index1584, 8
  %317 = icmp eq i64 %index.next1585, %n.vec1565
  br i1 %317, label %middle.block1560, label %vector.body1559, !llvm.loop !125

middle.block1560:                                 ; preds = %vector.body1559
  %cmp.n1587 = icmp eq i32 %302, 0
  br i1 %cmp.n1587, label %for.end166, label %for.body156.preheader2166

for.body156.preheader2166:                        ; preds = %middle.block1560, %vector.memcheck1582, %min.iters.checked1563, %for.body156.preheader
  %indvars.iv929.ph = phi i64 [ 0, %vector.memcheck1582 ], [ 0, %min.iters.checked1563 ], [ 0, %for.body156.preheader ], [ %n.vec1565, %middle.block1560 ]
  %318 = sub nsw i64 %wide.trip.count967, %indvars.iv929.ph
  %319 = add nsw i64 %wide.trip.count967, -1
  %320 = sub nsw i64 %319, %indvars.iv929.ph
  %xtraiter2218 = and i64 %318, 3
  %lcmp.mod2219 = icmp eq i64 %xtraiter2218, 0
  br i1 %lcmp.mod2219, label %for.body156.prol.loopexit, label %for.body156.prol.preheader

for.body156.prol.preheader:                       ; preds = %for.body156.preheader2166
  br label %for.body156.prol

for.body156.prol:                                 ; preds = %for.body156.prol, %for.body156.prol.preheader
  %indvars.iv929.prol = phi i64 [ %indvars.iv.next930.prol, %for.body156.prol ], [ %indvars.iv929.ph, %for.body156.prol.preheader ]
  %prol.iter2220 = phi i64 [ %prol.iter2220.sub, %for.body156.prol ], [ %xtraiter2218, %for.body156.prol.preheader ]
  %arrayidx158.prol = getelementptr inbounds i32, i32* %72, i64 %indvars.iv929.prol
  %321 = load i32, i32* %arrayidx158.prol, align 4, !tbaa !13
  %arrayidx160.prol = getelementptr inbounds i32, i32* %105, i64 %indvars.iv929.prol
  %322 = load i32, i32* %arrayidx160.prol, align 4, !tbaa !13
  %add161.prol = add nsw i32 %322, %321
  %arrayidx163.prol = getelementptr inbounds i32, i32* %301, i64 %indvars.iv929.prol
  store i32 %add161.prol, i32* %arrayidx163.prol, align 4, !tbaa !13
  %indvars.iv.next930.prol = add nuw nsw i64 %indvars.iv929.prol, 1
  %prol.iter2220.sub = add i64 %prol.iter2220, -1
  %prol.iter2220.cmp = icmp eq i64 %prol.iter2220.sub, 0
  br i1 %prol.iter2220.cmp, label %for.body156.prol.loopexit.unr-lcssa, label %for.body156.prol, !llvm.loop !126

for.body156.prol.loopexit.unr-lcssa:              ; preds = %for.body156.prol
  br label %for.body156.prol.loopexit

for.body156.prol.loopexit:                        ; preds = %for.body156.preheader2166, %for.body156.prol.loopexit.unr-lcssa
  %indvars.iv929.unr = phi i64 [ %indvars.iv929.ph, %for.body156.preheader2166 ], [ %indvars.iv.next930.prol, %for.body156.prol.loopexit.unr-lcssa ]
  %323 = icmp ult i64 %320, 3
  br i1 %323, label %for.end166.loopexit, label %for.body156.preheader2166.new

for.body156.preheader2166.new:                    ; preds = %for.body156.prol.loopexit
  br label %for.body156

for.body156:                                      ; preds = %for.body156, %for.body156.preheader2166.new
  %indvars.iv929 = phi i64 [ %indvars.iv929.unr, %for.body156.preheader2166.new ], [ %indvars.iv.next930.3, %for.body156 ]
  %arrayidx158 = getelementptr inbounds i32, i32* %72, i64 %indvars.iv929
  %324 = load i32, i32* %arrayidx158, align 4, !tbaa !13
  %arrayidx160 = getelementptr inbounds i32, i32* %105, i64 %indvars.iv929
  %325 = load i32, i32* %arrayidx160, align 4, !tbaa !13
  %add161 = add nsw i32 %325, %324
  %arrayidx163 = getelementptr inbounds i32, i32* %301, i64 %indvars.iv929
  store i32 %add161, i32* %arrayidx163, align 4, !tbaa !13
  %indvars.iv.next930 = add nuw nsw i64 %indvars.iv929, 1
  %arrayidx158.1 = getelementptr inbounds i32, i32* %72, i64 %indvars.iv.next930
  %326 = load i32, i32* %arrayidx158.1, align 4, !tbaa !13
  %arrayidx160.1 = getelementptr inbounds i32, i32* %105, i64 %indvars.iv.next930
  %327 = load i32, i32* %arrayidx160.1, align 4, !tbaa !13
  %add161.1 = add nsw i32 %327, %326
  %arrayidx163.1 = getelementptr inbounds i32, i32* %301, i64 %indvars.iv.next930
  store i32 %add161.1, i32* %arrayidx163.1, align 4, !tbaa !13
  %indvars.iv.next930.1 = add nsw i64 %indvars.iv929, 2
  %arrayidx158.2 = getelementptr inbounds i32, i32* %72, i64 %indvars.iv.next930.1
  %328 = load i32, i32* %arrayidx158.2, align 4, !tbaa !13
  %arrayidx160.2 = getelementptr inbounds i32, i32* %105, i64 %indvars.iv.next930.1
  %329 = load i32, i32* %arrayidx160.2, align 4, !tbaa !13
  %add161.2 = add nsw i32 %329, %328
  %arrayidx163.2 = getelementptr inbounds i32, i32* %301, i64 %indvars.iv.next930.1
  store i32 %add161.2, i32* %arrayidx163.2, align 4, !tbaa !13
  %indvars.iv.next930.2 = add nsw i64 %indvars.iv929, 3
  %arrayidx158.3 = getelementptr inbounds i32, i32* %72, i64 %indvars.iv.next930.2
  %330 = load i32, i32* %arrayidx158.3, align 4, !tbaa !13
  %arrayidx160.3 = getelementptr inbounds i32, i32* %105, i64 %indvars.iv.next930.2
  %331 = load i32, i32* %arrayidx160.3, align 4, !tbaa !13
  %add161.3 = add nsw i32 %331, %330
  %arrayidx163.3 = getelementptr inbounds i32, i32* %301, i64 %indvars.iv.next930.2
  store i32 %add161.3, i32* %arrayidx163.3, align 4, !tbaa !13
  %indvars.iv.next930.3 = add nsw i64 %indvars.iv929, 4
  %exitcond932.3 = icmp eq i64 %indvars.iv.next930.3, %wide.trip.count931
  br i1 %exitcond932.3, label %for.end166.loopexit.unr-lcssa, label %for.body156, !llvm.loop !127

for.end166.loopexit.unr-lcssa:                    ; preds = %for.body156
  br label %for.end166.loopexit

for.end166.loopexit:                              ; preds = %for.body156.prol.loopexit, %for.end166.loopexit.unr-lcssa
  br label %for.end166

for.end166:                                       ; preds = %for.end166.loopexit, %middle.block1560
  %add.ptr167 = getelementptr inbounds i32*, i32** %269, i64 4
  %332 = load i32*, i32** %add.ptr167, align 8, !tbaa !1
  br i1 %cmp871, label %for.body172.preheader, label %for.end438

for.body172.preheader:                            ; preds = %for.end166
  %wide.trip.count927 = zext i32 %max_pos to i64
  %min.iters.check1599 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1599, label %for.body172.preheader2165, label %min.iters.checked1600

min.iters.checked1600:                            ; preds = %for.body172.preheader
  %333 = and i32 %max_pos, 7
  %n.mod.vf1601 = zext i32 %333 to i64
  %n.vec1602 = sub nsw i64 %wide.trip.count967, %n.mod.vf1601
  %cmp.zero1603 = icmp eq i64 %n.vec1602, 0
  br i1 %cmp.zero1603, label %for.body172.preheader2165, label %vector.memcheck1619

vector.memcheck1619:                              ; preds = %min.iters.checked1600
  %scevgep1605 = getelementptr i32, i32* %332, i64 %wide.trip.count967
  %scevgep1607 = getelementptr i32, i32* %7, i64 %wide.trip.count967
  %scevgep1609 = getelementptr i32, i32* %40, i64 %wide.trip.count967
  %bound01611 = icmp ult i32* %332, %scevgep1607
  %bound11612 = icmp ult i32* %7, %scevgep1605
  %found.conflict1613 = and i1 %bound01611, %bound11612
  %bound01614 = icmp ult i32* %332, %scevgep1609
  %bound11615 = icmp ult i32* %40, %scevgep1605
  %found.conflict1616 = and i1 %bound01614, %bound11615
  %conflict.rdx1617 = or i1 %found.conflict1613, %found.conflict1616
  br i1 %conflict.rdx1617, label %for.body172.preheader2165, label %vector.body1596.preheader

vector.body1596.preheader:                        ; preds = %vector.memcheck1619
  br label %vector.body1596

vector.body1596:                                  ; preds = %vector.body1596.preheader, %vector.body1596
  %index1621 = phi i64 [ %index.next1622, %vector.body1596 ], [ 0, %vector.body1596.preheader ]
  %334 = getelementptr inbounds i32, i32* %7, i64 %index1621
  %335 = bitcast i32* %334 to <4 x i32>*
  %wide.load1629 = load <4 x i32>, <4 x i32>* %335, align 4, !tbaa !13, !alias.scope !128
  %336 = getelementptr i32, i32* %334, i64 4
  %337 = bitcast i32* %336 to <4 x i32>*
  %wide.load1630 = load <4 x i32>, <4 x i32>* %337, align 4, !tbaa !13, !alias.scope !128
  %338 = getelementptr inbounds i32, i32* %40, i64 %index1621
  %339 = bitcast i32* %338 to <4 x i32>*
  %wide.load1631 = load <4 x i32>, <4 x i32>* %339, align 4, !tbaa !13, !alias.scope !131
  %340 = getelementptr i32, i32* %338, i64 4
  %341 = bitcast i32* %340 to <4 x i32>*
  %wide.load1632 = load <4 x i32>, <4 x i32>* %341, align 4, !tbaa !13, !alias.scope !131
  %342 = add nsw <4 x i32> %wide.load1631, %wide.load1629
  %343 = add nsw <4 x i32> %wide.load1632, %wide.load1630
  %344 = getelementptr inbounds i32, i32* %332, i64 %index1621
  %345 = bitcast i32* %344 to <4 x i32>*
  store <4 x i32> %342, <4 x i32>* %345, align 4, !tbaa !13, !alias.scope !133, !noalias !135
  %346 = getelementptr i32, i32* %344, i64 4
  %347 = bitcast i32* %346 to <4 x i32>*
  store <4 x i32> %343, <4 x i32>* %347, align 4, !tbaa !13, !alias.scope !133, !noalias !135
  %index.next1622 = add i64 %index1621, 8
  %348 = icmp eq i64 %index.next1622, %n.vec1602
  br i1 %348, label %middle.block1597, label %vector.body1596, !llvm.loop !136

middle.block1597:                                 ; preds = %vector.body1596
  %cmp.n1624 = icmp eq i32 %333, 0
  br i1 %cmp.n1624, label %for.end182, label %for.body172.preheader2165

for.body172.preheader2165:                        ; preds = %middle.block1597, %vector.memcheck1619, %min.iters.checked1600, %for.body172.preheader
  %indvars.iv925.ph = phi i64 [ 0, %vector.memcheck1619 ], [ 0, %min.iters.checked1600 ], [ 0, %for.body172.preheader ], [ %n.vec1602, %middle.block1597 ]
  %349 = sub nsw i64 %wide.trip.count967, %indvars.iv925.ph
  %350 = add nsw i64 %wide.trip.count967, -1
  %351 = sub nsw i64 %350, %indvars.iv925.ph
  %xtraiter2215 = and i64 %349, 3
  %lcmp.mod2216 = icmp eq i64 %xtraiter2215, 0
  br i1 %lcmp.mod2216, label %for.body172.prol.loopexit, label %for.body172.prol.preheader

for.body172.prol.preheader:                       ; preds = %for.body172.preheader2165
  br label %for.body172.prol

for.body172.prol:                                 ; preds = %for.body172.prol, %for.body172.prol.preheader
  %indvars.iv925.prol = phi i64 [ %indvars.iv.next926.prol, %for.body172.prol ], [ %indvars.iv925.ph, %for.body172.prol.preheader ]
  %prol.iter2217 = phi i64 [ %prol.iter2217.sub, %for.body172.prol ], [ %xtraiter2215, %for.body172.prol.preheader ]
  %arrayidx174.prol = getelementptr inbounds i32, i32* %7, i64 %indvars.iv925.prol
  %352 = load i32, i32* %arrayidx174.prol, align 4, !tbaa !13
  %arrayidx176.prol = getelementptr inbounds i32, i32* %40, i64 %indvars.iv925.prol
  %353 = load i32, i32* %arrayidx176.prol, align 4, !tbaa !13
  %add177.prol = add nsw i32 %353, %352
  %arrayidx179.prol = getelementptr inbounds i32, i32* %332, i64 %indvars.iv925.prol
  store i32 %add177.prol, i32* %arrayidx179.prol, align 4, !tbaa !13
  %indvars.iv.next926.prol = add nuw nsw i64 %indvars.iv925.prol, 1
  %prol.iter2217.sub = add i64 %prol.iter2217, -1
  %prol.iter2217.cmp = icmp eq i64 %prol.iter2217.sub, 0
  br i1 %prol.iter2217.cmp, label %for.body172.prol.loopexit.unr-lcssa, label %for.body172.prol, !llvm.loop !137

for.body172.prol.loopexit.unr-lcssa:              ; preds = %for.body172.prol
  br label %for.body172.prol.loopexit

for.body172.prol.loopexit:                        ; preds = %for.body172.preheader2165, %for.body172.prol.loopexit.unr-lcssa
  %indvars.iv925.unr = phi i64 [ %indvars.iv925.ph, %for.body172.preheader2165 ], [ %indvars.iv.next926.prol, %for.body172.prol.loopexit.unr-lcssa ]
  %354 = icmp ult i64 %351, 3
  br i1 %354, label %for.end182.loopexit, label %for.body172.preheader2165.new

for.body172.preheader2165.new:                    ; preds = %for.body172.prol.loopexit
  br label %for.body172

for.body172:                                      ; preds = %for.body172, %for.body172.preheader2165.new
  %indvars.iv925 = phi i64 [ %indvars.iv925.unr, %for.body172.preheader2165.new ], [ %indvars.iv.next926.3, %for.body172 ]
  %arrayidx174 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv925
  %355 = load i32, i32* %arrayidx174, align 4, !tbaa !13
  %arrayidx176 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv925
  %356 = load i32, i32* %arrayidx176, align 4, !tbaa !13
  %add177 = add nsw i32 %356, %355
  %arrayidx179 = getelementptr inbounds i32, i32* %332, i64 %indvars.iv925
  store i32 %add177, i32* %arrayidx179, align 4, !tbaa !13
  %indvars.iv.next926 = add nuw nsw i64 %indvars.iv925, 1
  %arrayidx174.1 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv.next926
  %357 = load i32, i32* %arrayidx174.1, align 4, !tbaa !13
  %arrayidx176.1 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv.next926
  %358 = load i32, i32* %arrayidx176.1, align 4, !tbaa !13
  %add177.1 = add nsw i32 %358, %357
  %arrayidx179.1 = getelementptr inbounds i32, i32* %332, i64 %indvars.iv.next926
  store i32 %add177.1, i32* %arrayidx179.1, align 4, !tbaa !13
  %indvars.iv.next926.1 = add nsw i64 %indvars.iv925, 2
  %arrayidx174.2 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv.next926.1
  %359 = load i32, i32* %arrayidx174.2, align 4, !tbaa !13
  %arrayidx176.2 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv.next926.1
  %360 = load i32, i32* %arrayidx176.2, align 4, !tbaa !13
  %add177.2 = add nsw i32 %360, %359
  %arrayidx179.2 = getelementptr inbounds i32, i32* %332, i64 %indvars.iv.next926.1
  store i32 %add177.2, i32* %arrayidx179.2, align 4, !tbaa !13
  %indvars.iv.next926.2 = add nsw i64 %indvars.iv925, 3
  %arrayidx174.3 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv.next926.2
  %361 = load i32, i32* %arrayidx174.3, align 4, !tbaa !13
  %arrayidx176.3 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv.next926.2
  %362 = load i32, i32* %arrayidx176.3, align 4, !tbaa !13
  %add177.3 = add nsw i32 %362, %361
  %arrayidx179.3 = getelementptr inbounds i32, i32* %332, i64 %indvars.iv.next926.2
  store i32 %add177.3, i32* %arrayidx179.3, align 4, !tbaa !13
  %indvars.iv.next926.3 = add nsw i64 %indvars.iv925, 4
  %exitcond928.3 = icmp eq i64 %indvars.iv.next926.3, %wide.trip.count927
  br i1 %exitcond928.3, label %for.end182.loopexit.unr-lcssa, label %for.body172, !llvm.loop !138

for.end182.loopexit.unr-lcssa:                    ; preds = %for.body172
  br label %for.end182.loopexit

for.end182.loopexit:                              ; preds = %for.body172.prol.loopexit, %for.end182.loopexit.unr-lcssa
  br label %for.end182

for.end182:                                       ; preds = %for.end182.loopexit, %middle.block1597
  %add.ptr183 = getelementptr inbounds i32*, i32** %269, i64 6
  %363 = load i32*, i32** %add.ptr183, align 8, !tbaa !1
  br i1 %cmp871, label %for.body188.preheader, label %for.end438

for.body188.preheader:                            ; preds = %for.end182
  %wide.trip.count923 = zext i32 %max_pos to i64
  %min.iters.check1636 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1636, label %for.body188.preheader2164, label %min.iters.checked1637

min.iters.checked1637:                            ; preds = %for.body188.preheader
  %364 = and i32 %max_pos, 7
  %n.mod.vf1638 = zext i32 %364 to i64
  %n.vec1639 = sub nsw i64 %wide.trip.count967, %n.mod.vf1638
  %cmp.zero1640 = icmp eq i64 %n.vec1639, 0
  br i1 %cmp.zero1640, label %for.body188.preheader2164, label %vector.memcheck1656

vector.memcheck1656:                              ; preds = %min.iters.checked1637
  %scevgep1642 = getelementptr i32, i32* %363, i64 %wide.trip.count967
  %scevgep1644 = getelementptr i32, i32* %73, i64 %wide.trip.count967
  %scevgep1646 = getelementptr i32, i32* %106, i64 %wide.trip.count967
  %bound01648 = icmp ult i32* %363, %scevgep1644
  %bound11649 = icmp ult i32* %73, %scevgep1642
  %found.conflict1650 = and i1 %bound01648, %bound11649
  %bound01651 = icmp ult i32* %363, %scevgep1646
  %bound11652 = icmp ult i32* %106, %scevgep1642
  %found.conflict1653 = and i1 %bound01651, %bound11652
  %conflict.rdx1654 = or i1 %found.conflict1650, %found.conflict1653
  br i1 %conflict.rdx1654, label %for.body188.preheader2164, label %vector.body1633.preheader

vector.body1633.preheader:                        ; preds = %vector.memcheck1656
  br label %vector.body1633

vector.body1633:                                  ; preds = %vector.body1633.preheader, %vector.body1633
  %index1658 = phi i64 [ %index.next1659, %vector.body1633 ], [ 0, %vector.body1633.preheader ]
  %365 = getelementptr inbounds i32, i32* %73, i64 %index1658
  %366 = bitcast i32* %365 to <4 x i32>*
  %wide.load1666 = load <4 x i32>, <4 x i32>* %366, align 4, !tbaa !13, !alias.scope !139
  %367 = getelementptr i32, i32* %365, i64 4
  %368 = bitcast i32* %367 to <4 x i32>*
  %wide.load1667 = load <4 x i32>, <4 x i32>* %368, align 4, !tbaa !13, !alias.scope !139
  %369 = getelementptr inbounds i32, i32* %106, i64 %index1658
  %370 = bitcast i32* %369 to <4 x i32>*
  %wide.load1668 = load <4 x i32>, <4 x i32>* %370, align 4, !tbaa !13, !alias.scope !142
  %371 = getelementptr i32, i32* %369, i64 4
  %372 = bitcast i32* %371 to <4 x i32>*
  %wide.load1669 = load <4 x i32>, <4 x i32>* %372, align 4, !tbaa !13, !alias.scope !142
  %373 = add nsw <4 x i32> %wide.load1668, %wide.load1666
  %374 = add nsw <4 x i32> %wide.load1669, %wide.load1667
  %375 = getelementptr inbounds i32, i32* %363, i64 %index1658
  %376 = bitcast i32* %375 to <4 x i32>*
  store <4 x i32> %373, <4 x i32>* %376, align 4, !tbaa !13, !alias.scope !144, !noalias !146
  %377 = getelementptr i32, i32* %375, i64 4
  %378 = bitcast i32* %377 to <4 x i32>*
  store <4 x i32> %374, <4 x i32>* %378, align 4, !tbaa !13, !alias.scope !144, !noalias !146
  %index.next1659 = add i64 %index1658, 8
  %379 = icmp eq i64 %index.next1659, %n.vec1639
  br i1 %379, label %middle.block1634, label %vector.body1633, !llvm.loop !147

middle.block1634:                                 ; preds = %vector.body1633
  %cmp.n1661 = icmp eq i32 %364, 0
  br i1 %cmp.n1661, label %for.end198, label %for.body188.preheader2164

for.body188.preheader2164:                        ; preds = %middle.block1634, %vector.memcheck1656, %min.iters.checked1637, %for.body188.preheader
  %indvars.iv921.ph = phi i64 [ 0, %vector.memcheck1656 ], [ 0, %min.iters.checked1637 ], [ 0, %for.body188.preheader ], [ %n.vec1639, %middle.block1634 ]
  %380 = sub nsw i64 %wide.trip.count967, %indvars.iv921.ph
  %381 = add nsw i64 %wide.trip.count967, -1
  %382 = sub nsw i64 %381, %indvars.iv921.ph
  %xtraiter2212 = and i64 %380, 3
  %lcmp.mod2213 = icmp eq i64 %xtraiter2212, 0
  br i1 %lcmp.mod2213, label %for.body188.prol.loopexit, label %for.body188.prol.preheader

for.body188.prol.preheader:                       ; preds = %for.body188.preheader2164
  br label %for.body188.prol

for.body188.prol:                                 ; preds = %for.body188.prol, %for.body188.prol.preheader
  %indvars.iv921.prol = phi i64 [ %indvars.iv.next922.prol, %for.body188.prol ], [ %indvars.iv921.ph, %for.body188.prol.preheader ]
  %prol.iter2214 = phi i64 [ %prol.iter2214.sub, %for.body188.prol ], [ %xtraiter2212, %for.body188.prol.preheader ]
  %arrayidx190.prol = getelementptr inbounds i32, i32* %73, i64 %indvars.iv921.prol
  %383 = load i32, i32* %arrayidx190.prol, align 4, !tbaa !13
  %arrayidx192.prol = getelementptr inbounds i32, i32* %106, i64 %indvars.iv921.prol
  %384 = load i32, i32* %arrayidx192.prol, align 4, !tbaa !13
  %add193.prol = add nsw i32 %384, %383
  %arrayidx195.prol = getelementptr inbounds i32, i32* %363, i64 %indvars.iv921.prol
  store i32 %add193.prol, i32* %arrayidx195.prol, align 4, !tbaa !13
  %indvars.iv.next922.prol = add nuw nsw i64 %indvars.iv921.prol, 1
  %prol.iter2214.sub = add i64 %prol.iter2214, -1
  %prol.iter2214.cmp = icmp eq i64 %prol.iter2214.sub, 0
  br i1 %prol.iter2214.cmp, label %for.body188.prol.loopexit.unr-lcssa, label %for.body188.prol, !llvm.loop !148

for.body188.prol.loopexit.unr-lcssa:              ; preds = %for.body188.prol
  br label %for.body188.prol.loopexit

for.body188.prol.loopexit:                        ; preds = %for.body188.preheader2164, %for.body188.prol.loopexit.unr-lcssa
  %indvars.iv921.unr = phi i64 [ %indvars.iv921.ph, %for.body188.preheader2164 ], [ %indvars.iv.next922.prol, %for.body188.prol.loopexit.unr-lcssa ]
  %385 = icmp ult i64 %382, 3
  br i1 %385, label %for.end198.loopexit, label %for.body188.preheader2164.new

for.body188.preheader2164.new:                    ; preds = %for.body188.prol.loopexit
  br label %for.body188

for.body188:                                      ; preds = %for.body188, %for.body188.preheader2164.new
  %indvars.iv921 = phi i64 [ %indvars.iv921.unr, %for.body188.preheader2164.new ], [ %indvars.iv.next922.3, %for.body188 ]
  %arrayidx190 = getelementptr inbounds i32, i32* %73, i64 %indvars.iv921
  %386 = load i32, i32* %arrayidx190, align 4, !tbaa !13
  %arrayidx192 = getelementptr inbounds i32, i32* %106, i64 %indvars.iv921
  %387 = load i32, i32* %arrayidx192, align 4, !tbaa !13
  %add193 = add nsw i32 %387, %386
  %arrayidx195 = getelementptr inbounds i32, i32* %363, i64 %indvars.iv921
  store i32 %add193, i32* %arrayidx195, align 4, !tbaa !13
  %indvars.iv.next922 = add nuw nsw i64 %indvars.iv921, 1
  %arrayidx190.1 = getelementptr inbounds i32, i32* %73, i64 %indvars.iv.next922
  %388 = load i32, i32* %arrayidx190.1, align 4, !tbaa !13
  %arrayidx192.1 = getelementptr inbounds i32, i32* %106, i64 %indvars.iv.next922
  %389 = load i32, i32* %arrayidx192.1, align 4, !tbaa !13
  %add193.1 = add nsw i32 %389, %388
  %arrayidx195.1 = getelementptr inbounds i32, i32* %363, i64 %indvars.iv.next922
  store i32 %add193.1, i32* %arrayidx195.1, align 4, !tbaa !13
  %indvars.iv.next922.1 = add nsw i64 %indvars.iv921, 2
  %arrayidx190.2 = getelementptr inbounds i32, i32* %73, i64 %indvars.iv.next922.1
  %390 = load i32, i32* %arrayidx190.2, align 4, !tbaa !13
  %arrayidx192.2 = getelementptr inbounds i32, i32* %106, i64 %indvars.iv.next922.1
  %391 = load i32, i32* %arrayidx192.2, align 4, !tbaa !13
  %add193.2 = add nsw i32 %391, %390
  %arrayidx195.2 = getelementptr inbounds i32, i32* %363, i64 %indvars.iv.next922.1
  store i32 %add193.2, i32* %arrayidx195.2, align 4, !tbaa !13
  %indvars.iv.next922.2 = add nsw i64 %indvars.iv921, 3
  %arrayidx190.3 = getelementptr inbounds i32, i32* %73, i64 %indvars.iv.next922.2
  %392 = load i32, i32* %arrayidx190.3, align 4, !tbaa !13
  %arrayidx192.3 = getelementptr inbounds i32, i32* %106, i64 %indvars.iv.next922.2
  %393 = load i32, i32* %arrayidx192.3, align 4, !tbaa !13
  %add193.3 = add nsw i32 %393, %392
  %arrayidx195.3 = getelementptr inbounds i32, i32* %363, i64 %indvars.iv.next922.2
  store i32 %add193.3, i32* %arrayidx195.3, align 4, !tbaa !13
  %indvars.iv.next922.3 = add nsw i64 %indvars.iv921, 4
  %exitcond924.3 = icmp eq i64 %indvars.iv.next922.3, %wide.trip.count923
  br i1 %exitcond924.3, label %for.end198.loopexit.unr-lcssa, label %for.body188, !llvm.loop !149

for.end198.loopexit.unr-lcssa:                    ; preds = %for.body188
  br label %for.end198.loopexit

for.end198.loopexit:                              ; preds = %for.body188.prol.loopexit, %for.end198.loopexit.unr-lcssa
  br label %for.end198

for.end198:                                       ; preds = %for.end198.loopexit, %middle.block1634
  %add.ptr199 = getelementptr inbounds i32*, i32** %269, i64 8
  %394 = load i32*, i32** %add.ptr199, align 8, !tbaa !1
  br i1 %cmp871, label %for.body204.preheader, label %for.end438

for.body204.preheader:                            ; preds = %for.end198
  %wide.trip.count919 = zext i32 %max_pos to i64
  %min.iters.check1673 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1673, label %for.body204.preheader2163, label %min.iters.checked1674

min.iters.checked1674:                            ; preds = %for.body204.preheader
  %395 = and i32 %max_pos, 7
  %n.mod.vf1675 = zext i32 %395 to i64
  %n.vec1676 = sub nsw i64 %wide.trip.count967, %n.mod.vf1675
  %cmp.zero1677 = icmp eq i64 %n.vec1676, 0
  br i1 %cmp.zero1677, label %for.body204.preheader2163, label %vector.memcheck1693

vector.memcheck1693:                              ; preds = %min.iters.checked1674
  %scevgep1679 = getelementptr i32, i32* %394, i64 %wide.trip.count967
  %scevgep1681 = getelementptr i32, i32* %138, i64 %wide.trip.count967
  %scevgep1683 = getelementptr i32, i32* %171, i64 %wide.trip.count967
  %bound01685 = icmp ult i32* %394, %scevgep1681
  %bound11686 = icmp ult i32* %138, %scevgep1679
  %found.conflict1687 = and i1 %bound01685, %bound11686
  %bound01688 = icmp ult i32* %394, %scevgep1683
  %bound11689 = icmp ult i32* %171, %scevgep1679
  %found.conflict1690 = and i1 %bound01688, %bound11689
  %conflict.rdx1691 = or i1 %found.conflict1687, %found.conflict1690
  br i1 %conflict.rdx1691, label %for.body204.preheader2163, label %vector.body1670.preheader

vector.body1670.preheader:                        ; preds = %vector.memcheck1693
  br label %vector.body1670

vector.body1670:                                  ; preds = %vector.body1670.preheader, %vector.body1670
  %index1695 = phi i64 [ %index.next1696, %vector.body1670 ], [ 0, %vector.body1670.preheader ]
  %396 = getelementptr inbounds i32, i32* %138, i64 %index1695
  %397 = bitcast i32* %396 to <4 x i32>*
  %wide.load1703 = load <4 x i32>, <4 x i32>* %397, align 4, !tbaa !13, !alias.scope !150
  %398 = getelementptr i32, i32* %396, i64 4
  %399 = bitcast i32* %398 to <4 x i32>*
  %wide.load1704 = load <4 x i32>, <4 x i32>* %399, align 4, !tbaa !13, !alias.scope !150
  %400 = getelementptr inbounds i32, i32* %171, i64 %index1695
  %401 = bitcast i32* %400 to <4 x i32>*
  %wide.load1705 = load <4 x i32>, <4 x i32>* %401, align 4, !tbaa !13, !alias.scope !153
  %402 = getelementptr i32, i32* %400, i64 4
  %403 = bitcast i32* %402 to <4 x i32>*
  %wide.load1706 = load <4 x i32>, <4 x i32>* %403, align 4, !tbaa !13, !alias.scope !153
  %404 = add nsw <4 x i32> %wide.load1705, %wide.load1703
  %405 = add nsw <4 x i32> %wide.load1706, %wide.load1704
  %406 = getelementptr inbounds i32, i32* %394, i64 %index1695
  %407 = bitcast i32* %406 to <4 x i32>*
  store <4 x i32> %404, <4 x i32>* %407, align 4, !tbaa !13, !alias.scope !155, !noalias !157
  %408 = getelementptr i32, i32* %406, i64 4
  %409 = bitcast i32* %408 to <4 x i32>*
  store <4 x i32> %405, <4 x i32>* %409, align 4, !tbaa !13, !alias.scope !155, !noalias !157
  %index.next1696 = add i64 %index1695, 8
  %410 = icmp eq i64 %index.next1696, %n.vec1676
  br i1 %410, label %middle.block1671, label %vector.body1670, !llvm.loop !158

middle.block1671:                                 ; preds = %vector.body1670
  %cmp.n1698 = icmp eq i32 %395, 0
  br i1 %cmp.n1698, label %for.end214, label %for.body204.preheader2163

for.body204.preheader2163:                        ; preds = %middle.block1671, %vector.memcheck1693, %min.iters.checked1674, %for.body204.preheader
  %indvars.iv917.ph = phi i64 [ 0, %vector.memcheck1693 ], [ 0, %min.iters.checked1674 ], [ 0, %for.body204.preheader ], [ %n.vec1676, %middle.block1671 ]
  %411 = sub nsw i64 %wide.trip.count967, %indvars.iv917.ph
  %412 = add nsw i64 %wide.trip.count967, -1
  %413 = sub nsw i64 %412, %indvars.iv917.ph
  %xtraiter2209 = and i64 %411, 3
  %lcmp.mod2210 = icmp eq i64 %xtraiter2209, 0
  br i1 %lcmp.mod2210, label %for.body204.prol.loopexit, label %for.body204.prol.preheader

for.body204.prol.preheader:                       ; preds = %for.body204.preheader2163
  br label %for.body204.prol

for.body204.prol:                                 ; preds = %for.body204.prol, %for.body204.prol.preheader
  %indvars.iv917.prol = phi i64 [ %indvars.iv.next918.prol, %for.body204.prol ], [ %indvars.iv917.ph, %for.body204.prol.preheader ]
  %prol.iter2211 = phi i64 [ %prol.iter2211.sub, %for.body204.prol ], [ %xtraiter2209, %for.body204.prol.preheader ]
  %arrayidx206.prol = getelementptr inbounds i32, i32* %138, i64 %indvars.iv917.prol
  %414 = load i32, i32* %arrayidx206.prol, align 4, !tbaa !13
  %arrayidx208.prol = getelementptr inbounds i32, i32* %171, i64 %indvars.iv917.prol
  %415 = load i32, i32* %arrayidx208.prol, align 4, !tbaa !13
  %add209.prol = add nsw i32 %415, %414
  %arrayidx211.prol = getelementptr inbounds i32, i32* %394, i64 %indvars.iv917.prol
  store i32 %add209.prol, i32* %arrayidx211.prol, align 4, !tbaa !13
  %indvars.iv.next918.prol = add nuw nsw i64 %indvars.iv917.prol, 1
  %prol.iter2211.sub = add i64 %prol.iter2211, -1
  %prol.iter2211.cmp = icmp eq i64 %prol.iter2211.sub, 0
  br i1 %prol.iter2211.cmp, label %for.body204.prol.loopexit.unr-lcssa, label %for.body204.prol, !llvm.loop !159

for.body204.prol.loopexit.unr-lcssa:              ; preds = %for.body204.prol
  br label %for.body204.prol.loopexit

for.body204.prol.loopexit:                        ; preds = %for.body204.preheader2163, %for.body204.prol.loopexit.unr-lcssa
  %indvars.iv917.unr = phi i64 [ %indvars.iv917.ph, %for.body204.preheader2163 ], [ %indvars.iv.next918.prol, %for.body204.prol.loopexit.unr-lcssa ]
  %416 = icmp ult i64 %413, 3
  br i1 %416, label %for.end214.loopexit, label %for.body204.preheader2163.new

for.body204.preheader2163.new:                    ; preds = %for.body204.prol.loopexit
  br label %for.body204

for.body204:                                      ; preds = %for.body204, %for.body204.preheader2163.new
  %indvars.iv917 = phi i64 [ %indvars.iv917.unr, %for.body204.preheader2163.new ], [ %indvars.iv.next918.3, %for.body204 ]
  %arrayidx206 = getelementptr inbounds i32, i32* %138, i64 %indvars.iv917
  %417 = load i32, i32* %arrayidx206, align 4, !tbaa !13
  %arrayidx208 = getelementptr inbounds i32, i32* %171, i64 %indvars.iv917
  %418 = load i32, i32* %arrayidx208, align 4, !tbaa !13
  %add209 = add nsw i32 %418, %417
  %arrayidx211 = getelementptr inbounds i32, i32* %394, i64 %indvars.iv917
  store i32 %add209, i32* %arrayidx211, align 4, !tbaa !13
  %indvars.iv.next918 = add nuw nsw i64 %indvars.iv917, 1
  %arrayidx206.1 = getelementptr inbounds i32, i32* %138, i64 %indvars.iv.next918
  %419 = load i32, i32* %arrayidx206.1, align 4, !tbaa !13
  %arrayidx208.1 = getelementptr inbounds i32, i32* %171, i64 %indvars.iv.next918
  %420 = load i32, i32* %arrayidx208.1, align 4, !tbaa !13
  %add209.1 = add nsw i32 %420, %419
  %arrayidx211.1 = getelementptr inbounds i32, i32* %394, i64 %indvars.iv.next918
  store i32 %add209.1, i32* %arrayidx211.1, align 4, !tbaa !13
  %indvars.iv.next918.1 = add nsw i64 %indvars.iv917, 2
  %arrayidx206.2 = getelementptr inbounds i32, i32* %138, i64 %indvars.iv.next918.1
  %421 = load i32, i32* %arrayidx206.2, align 4, !tbaa !13
  %arrayidx208.2 = getelementptr inbounds i32, i32* %171, i64 %indvars.iv.next918.1
  %422 = load i32, i32* %arrayidx208.2, align 4, !tbaa !13
  %add209.2 = add nsw i32 %422, %421
  %arrayidx211.2 = getelementptr inbounds i32, i32* %394, i64 %indvars.iv.next918.1
  store i32 %add209.2, i32* %arrayidx211.2, align 4, !tbaa !13
  %indvars.iv.next918.2 = add nsw i64 %indvars.iv917, 3
  %arrayidx206.3 = getelementptr inbounds i32, i32* %138, i64 %indvars.iv.next918.2
  %423 = load i32, i32* %arrayidx206.3, align 4, !tbaa !13
  %arrayidx208.3 = getelementptr inbounds i32, i32* %171, i64 %indvars.iv.next918.2
  %424 = load i32, i32* %arrayidx208.3, align 4, !tbaa !13
  %add209.3 = add nsw i32 %424, %423
  %arrayidx211.3 = getelementptr inbounds i32, i32* %394, i64 %indvars.iv.next918.2
  store i32 %add209.3, i32* %arrayidx211.3, align 4, !tbaa !13
  %indvars.iv.next918.3 = add nsw i64 %indvars.iv917, 4
  %exitcond920.3 = icmp eq i64 %indvars.iv.next918.3, %wide.trip.count919
  br i1 %exitcond920.3, label %for.end214.loopexit.unr-lcssa, label %for.body204, !llvm.loop !160

for.end214.loopexit.unr-lcssa:                    ; preds = %for.body204
  br label %for.end214.loopexit

for.end214.loopexit:                              ; preds = %for.body204.prol.loopexit, %for.end214.loopexit.unr-lcssa
  br label %for.end214

for.end214:                                       ; preds = %for.end214.loopexit, %middle.block1671
  %add.ptr215 = getelementptr inbounds i32*, i32** %269, i64 10
  %425 = load i32*, i32** %add.ptr215, align 8, !tbaa !1
  br i1 %cmp871, label %for.body220.preheader, label %for.end438

for.body220.preheader:                            ; preds = %for.end214
  %wide.trip.count915 = zext i32 %max_pos to i64
  %min.iters.check1710 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1710, label %for.body220.preheader2162, label %min.iters.checked1711

min.iters.checked1711:                            ; preds = %for.body220.preheader
  %426 = and i32 %max_pos, 7
  %n.mod.vf1712 = zext i32 %426 to i64
  %n.vec1713 = sub nsw i64 %wide.trip.count967, %n.mod.vf1712
  %cmp.zero1714 = icmp eq i64 %n.vec1713, 0
  br i1 %cmp.zero1714, label %for.body220.preheader2162, label %vector.memcheck1730

vector.memcheck1730:                              ; preds = %min.iters.checked1711
  %scevgep1716 = getelementptr i32, i32* %425, i64 %wide.trip.count967
  %scevgep1718 = getelementptr i32, i32* %204, i64 %wide.trip.count967
  %scevgep1720 = getelementptr i32, i32* %237, i64 %wide.trip.count967
  %bound01722 = icmp ult i32* %425, %scevgep1718
  %bound11723 = icmp ult i32* %204, %scevgep1716
  %found.conflict1724 = and i1 %bound01722, %bound11723
  %bound01725 = icmp ult i32* %425, %scevgep1720
  %bound11726 = icmp ult i32* %237, %scevgep1716
  %found.conflict1727 = and i1 %bound01725, %bound11726
  %conflict.rdx1728 = or i1 %found.conflict1724, %found.conflict1727
  br i1 %conflict.rdx1728, label %for.body220.preheader2162, label %vector.body1707.preheader

vector.body1707.preheader:                        ; preds = %vector.memcheck1730
  br label %vector.body1707

vector.body1707:                                  ; preds = %vector.body1707.preheader, %vector.body1707
  %index1732 = phi i64 [ %index.next1733, %vector.body1707 ], [ 0, %vector.body1707.preheader ]
  %427 = getelementptr inbounds i32, i32* %204, i64 %index1732
  %428 = bitcast i32* %427 to <4 x i32>*
  %wide.load1740 = load <4 x i32>, <4 x i32>* %428, align 4, !tbaa !13, !alias.scope !161
  %429 = getelementptr i32, i32* %427, i64 4
  %430 = bitcast i32* %429 to <4 x i32>*
  %wide.load1741 = load <4 x i32>, <4 x i32>* %430, align 4, !tbaa !13, !alias.scope !161
  %431 = getelementptr inbounds i32, i32* %237, i64 %index1732
  %432 = bitcast i32* %431 to <4 x i32>*
  %wide.load1742 = load <4 x i32>, <4 x i32>* %432, align 4, !tbaa !13, !alias.scope !164
  %433 = getelementptr i32, i32* %431, i64 4
  %434 = bitcast i32* %433 to <4 x i32>*
  %wide.load1743 = load <4 x i32>, <4 x i32>* %434, align 4, !tbaa !13, !alias.scope !164
  %435 = add nsw <4 x i32> %wide.load1742, %wide.load1740
  %436 = add nsw <4 x i32> %wide.load1743, %wide.load1741
  %437 = getelementptr inbounds i32, i32* %425, i64 %index1732
  %438 = bitcast i32* %437 to <4 x i32>*
  store <4 x i32> %435, <4 x i32>* %438, align 4, !tbaa !13, !alias.scope !166, !noalias !168
  %439 = getelementptr i32, i32* %437, i64 4
  %440 = bitcast i32* %439 to <4 x i32>*
  store <4 x i32> %436, <4 x i32>* %440, align 4, !tbaa !13, !alias.scope !166, !noalias !168
  %index.next1733 = add i64 %index1732, 8
  %441 = icmp eq i64 %index.next1733, %n.vec1713
  br i1 %441, label %middle.block1708, label %vector.body1707, !llvm.loop !169

middle.block1708:                                 ; preds = %vector.body1707
  %cmp.n1735 = icmp eq i32 %426, 0
  br i1 %cmp.n1735, label %for.end230, label %for.body220.preheader2162

for.body220.preheader2162:                        ; preds = %middle.block1708, %vector.memcheck1730, %min.iters.checked1711, %for.body220.preheader
  %indvars.iv913.ph = phi i64 [ 0, %vector.memcheck1730 ], [ 0, %min.iters.checked1711 ], [ 0, %for.body220.preheader ], [ %n.vec1713, %middle.block1708 ]
  %442 = sub nsw i64 %wide.trip.count967, %indvars.iv913.ph
  %443 = add nsw i64 %wide.trip.count967, -1
  %444 = sub nsw i64 %443, %indvars.iv913.ph
  %xtraiter2206 = and i64 %442, 3
  %lcmp.mod2207 = icmp eq i64 %xtraiter2206, 0
  br i1 %lcmp.mod2207, label %for.body220.prol.loopexit, label %for.body220.prol.preheader

for.body220.prol.preheader:                       ; preds = %for.body220.preheader2162
  br label %for.body220.prol

for.body220.prol:                                 ; preds = %for.body220.prol, %for.body220.prol.preheader
  %indvars.iv913.prol = phi i64 [ %indvars.iv.next914.prol, %for.body220.prol ], [ %indvars.iv913.ph, %for.body220.prol.preheader ]
  %prol.iter2208 = phi i64 [ %prol.iter2208.sub, %for.body220.prol ], [ %xtraiter2206, %for.body220.prol.preheader ]
  %arrayidx222.prol = getelementptr inbounds i32, i32* %204, i64 %indvars.iv913.prol
  %445 = load i32, i32* %arrayidx222.prol, align 4, !tbaa !13
  %arrayidx224.prol = getelementptr inbounds i32, i32* %237, i64 %indvars.iv913.prol
  %446 = load i32, i32* %arrayidx224.prol, align 4, !tbaa !13
  %add225.prol = add nsw i32 %446, %445
  %arrayidx227.prol = getelementptr inbounds i32, i32* %425, i64 %indvars.iv913.prol
  store i32 %add225.prol, i32* %arrayidx227.prol, align 4, !tbaa !13
  %indvars.iv.next914.prol = add nuw nsw i64 %indvars.iv913.prol, 1
  %prol.iter2208.sub = add i64 %prol.iter2208, -1
  %prol.iter2208.cmp = icmp eq i64 %prol.iter2208.sub, 0
  br i1 %prol.iter2208.cmp, label %for.body220.prol.loopexit.unr-lcssa, label %for.body220.prol, !llvm.loop !170

for.body220.prol.loopexit.unr-lcssa:              ; preds = %for.body220.prol
  br label %for.body220.prol.loopexit

for.body220.prol.loopexit:                        ; preds = %for.body220.preheader2162, %for.body220.prol.loopexit.unr-lcssa
  %indvars.iv913.unr = phi i64 [ %indvars.iv913.ph, %for.body220.preheader2162 ], [ %indvars.iv.next914.prol, %for.body220.prol.loopexit.unr-lcssa ]
  %447 = icmp ult i64 %444, 3
  br i1 %447, label %for.end230.loopexit, label %for.body220.preheader2162.new

for.body220.preheader2162.new:                    ; preds = %for.body220.prol.loopexit
  br label %for.body220

for.body220:                                      ; preds = %for.body220, %for.body220.preheader2162.new
  %indvars.iv913 = phi i64 [ %indvars.iv913.unr, %for.body220.preheader2162.new ], [ %indvars.iv.next914.3, %for.body220 ]
  %arrayidx222 = getelementptr inbounds i32, i32* %204, i64 %indvars.iv913
  %448 = load i32, i32* %arrayidx222, align 4, !tbaa !13
  %arrayidx224 = getelementptr inbounds i32, i32* %237, i64 %indvars.iv913
  %449 = load i32, i32* %arrayidx224, align 4, !tbaa !13
  %add225 = add nsw i32 %449, %448
  %arrayidx227 = getelementptr inbounds i32, i32* %425, i64 %indvars.iv913
  store i32 %add225, i32* %arrayidx227, align 4, !tbaa !13
  %indvars.iv.next914 = add nuw nsw i64 %indvars.iv913, 1
  %arrayidx222.1 = getelementptr inbounds i32, i32* %204, i64 %indvars.iv.next914
  %450 = load i32, i32* %arrayidx222.1, align 4, !tbaa !13
  %arrayidx224.1 = getelementptr inbounds i32, i32* %237, i64 %indvars.iv.next914
  %451 = load i32, i32* %arrayidx224.1, align 4, !tbaa !13
  %add225.1 = add nsw i32 %451, %450
  %arrayidx227.1 = getelementptr inbounds i32, i32* %425, i64 %indvars.iv.next914
  store i32 %add225.1, i32* %arrayidx227.1, align 4, !tbaa !13
  %indvars.iv.next914.1 = add nsw i64 %indvars.iv913, 2
  %arrayidx222.2 = getelementptr inbounds i32, i32* %204, i64 %indvars.iv.next914.1
  %452 = load i32, i32* %arrayidx222.2, align 4, !tbaa !13
  %arrayidx224.2 = getelementptr inbounds i32, i32* %237, i64 %indvars.iv.next914.1
  %453 = load i32, i32* %arrayidx224.2, align 4, !tbaa !13
  %add225.2 = add nsw i32 %453, %452
  %arrayidx227.2 = getelementptr inbounds i32, i32* %425, i64 %indvars.iv.next914.1
  store i32 %add225.2, i32* %arrayidx227.2, align 4, !tbaa !13
  %indvars.iv.next914.2 = add nsw i64 %indvars.iv913, 3
  %arrayidx222.3 = getelementptr inbounds i32, i32* %204, i64 %indvars.iv.next914.2
  %454 = load i32, i32* %arrayidx222.3, align 4, !tbaa !13
  %arrayidx224.3 = getelementptr inbounds i32, i32* %237, i64 %indvars.iv.next914.2
  %455 = load i32, i32* %arrayidx224.3, align 4, !tbaa !13
  %add225.3 = add nsw i32 %455, %454
  %arrayidx227.3 = getelementptr inbounds i32, i32* %425, i64 %indvars.iv.next914.2
  store i32 %add225.3, i32* %arrayidx227.3, align 4, !tbaa !13
  %indvars.iv.next914.3 = add nsw i64 %indvars.iv913, 4
  %exitcond916.3 = icmp eq i64 %indvars.iv.next914.3, %wide.trip.count915
  br i1 %exitcond916.3, label %for.end230.loopexit.unr-lcssa, label %for.body220, !llvm.loop !171

for.end230.loopexit.unr-lcssa:                    ; preds = %for.body220
  br label %for.end230.loopexit

for.end230.loopexit:                              ; preds = %for.body220.prol.loopexit, %for.end230.loopexit.unr-lcssa
  br label %for.end230

for.end230:                                       ; preds = %for.end230.loopexit, %middle.block1708
  %add.ptr231 = getelementptr inbounds i32*, i32** %269, i64 12
  %456 = load i32*, i32** %add.ptr231, align 8, !tbaa !1
  br i1 %cmp871, label %for.body236.preheader, label %for.end438

for.body236.preheader:                            ; preds = %for.end230
  %wide.trip.count911 = zext i32 %max_pos to i64
  %min.iters.check1747 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1747, label %for.body236.preheader2161, label %min.iters.checked1748

min.iters.checked1748:                            ; preds = %for.body236.preheader
  %457 = and i32 %max_pos, 7
  %n.mod.vf1749 = zext i32 %457 to i64
  %n.vec1750 = sub nsw i64 %wide.trip.count967, %n.mod.vf1749
  %cmp.zero1751 = icmp eq i64 %n.vec1750, 0
  br i1 %cmp.zero1751, label %for.body236.preheader2161, label %vector.memcheck1767

vector.memcheck1767:                              ; preds = %min.iters.checked1748
  %scevgep1753 = getelementptr i32, i32* %456, i64 %wide.trip.count967
  %scevgep1755 = getelementptr i32, i32* %139, i64 %wide.trip.count967
  %scevgep1757 = getelementptr i32, i32* %172, i64 %wide.trip.count967
  %bound01759 = icmp ult i32* %456, %scevgep1755
  %bound11760 = icmp ult i32* %139, %scevgep1753
  %found.conflict1761 = and i1 %bound01759, %bound11760
  %bound01762 = icmp ult i32* %456, %scevgep1757
  %bound11763 = icmp ult i32* %172, %scevgep1753
  %found.conflict1764 = and i1 %bound01762, %bound11763
  %conflict.rdx1765 = or i1 %found.conflict1761, %found.conflict1764
  br i1 %conflict.rdx1765, label %for.body236.preheader2161, label %vector.body1744.preheader

vector.body1744.preheader:                        ; preds = %vector.memcheck1767
  br label %vector.body1744

vector.body1744:                                  ; preds = %vector.body1744.preheader, %vector.body1744
  %index1769 = phi i64 [ %index.next1770, %vector.body1744 ], [ 0, %vector.body1744.preheader ]
  %458 = getelementptr inbounds i32, i32* %139, i64 %index1769
  %459 = bitcast i32* %458 to <4 x i32>*
  %wide.load1777 = load <4 x i32>, <4 x i32>* %459, align 4, !tbaa !13, !alias.scope !172
  %460 = getelementptr i32, i32* %458, i64 4
  %461 = bitcast i32* %460 to <4 x i32>*
  %wide.load1778 = load <4 x i32>, <4 x i32>* %461, align 4, !tbaa !13, !alias.scope !172
  %462 = getelementptr inbounds i32, i32* %172, i64 %index1769
  %463 = bitcast i32* %462 to <4 x i32>*
  %wide.load1779 = load <4 x i32>, <4 x i32>* %463, align 4, !tbaa !13, !alias.scope !175
  %464 = getelementptr i32, i32* %462, i64 4
  %465 = bitcast i32* %464 to <4 x i32>*
  %wide.load1780 = load <4 x i32>, <4 x i32>* %465, align 4, !tbaa !13, !alias.scope !175
  %466 = add nsw <4 x i32> %wide.load1779, %wide.load1777
  %467 = add nsw <4 x i32> %wide.load1780, %wide.load1778
  %468 = getelementptr inbounds i32, i32* %456, i64 %index1769
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> %466, <4 x i32>* %469, align 4, !tbaa !13, !alias.scope !177, !noalias !179
  %470 = getelementptr i32, i32* %468, i64 4
  %471 = bitcast i32* %470 to <4 x i32>*
  store <4 x i32> %467, <4 x i32>* %471, align 4, !tbaa !13, !alias.scope !177, !noalias !179
  %index.next1770 = add i64 %index1769, 8
  %472 = icmp eq i64 %index.next1770, %n.vec1750
  br i1 %472, label %middle.block1745, label %vector.body1744, !llvm.loop !180

middle.block1745:                                 ; preds = %vector.body1744
  %cmp.n1772 = icmp eq i32 %457, 0
  br i1 %cmp.n1772, label %for.end246, label %for.body236.preheader2161

for.body236.preheader2161:                        ; preds = %middle.block1745, %vector.memcheck1767, %min.iters.checked1748, %for.body236.preheader
  %indvars.iv909.ph = phi i64 [ 0, %vector.memcheck1767 ], [ 0, %min.iters.checked1748 ], [ 0, %for.body236.preheader ], [ %n.vec1750, %middle.block1745 ]
  %473 = sub nsw i64 %wide.trip.count967, %indvars.iv909.ph
  %474 = add nsw i64 %wide.trip.count967, -1
  %475 = sub nsw i64 %474, %indvars.iv909.ph
  %xtraiter2203 = and i64 %473, 3
  %lcmp.mod2204 = icmp eq i64 %xtraiter2203, 0
  br i1 %lcmp.mod2204, label %for.body236.prol.loopexit, label %for.body236.prol.preheader

for.body236.prol.preheader:                       ; preds = %for.body236.preheader2161
  br label %for.body236.prol

for.body236.prol:                                 ; preds = %for.body236.prol, %for.body236.prol.preheader
  %indvars.iv909.prol = phi i64 [ %indvars.iv.next910.prol, %for.body236.prol ], [ %indvars.iv909.ph, %for.body236.prol.preheader ]
  %prol.iter2205 = phi i64 [ %prol.iter2205.sub, %for.body236.prol ], [ %xtraiter2203, %for.body236.prol.preheader ]
  %arrayidx238.prol = getelementptr inbounds i32, i32* %139, i64 %indvars.iv909.prol
  %476 = load i32, i32* %arrayidx238.prol, align 4, !tbaa !13
  %arrayidx240.prol = getelementptr inbounds i32, i32* %172, i64 %indvars.iv909.prol
  %477 = load i32, i32* %arrayidx240.prol, align 4, !tbaa !13
  %add241.prol = add nsw i32 %477, %476
  %arrayidx243.prol = getelementptr inbounds i32, i32* %456, i64 %indvars.iv909.prol
  store i32 %add241.prol, i32* %arrayidx243.prol, align 4, !tbaa !13
  %indvars.iv.next910.prol = add nuw nsw i64 %indvars.iv909.prol, 1
  %prol.iter2205.sub = add i64 %prol.iter2205, -1
  %prol.iter2205.cmp = icmp eq i64 %prol.iter2205.sub, 0
  br i1 %prol.iter2205.cmp, label %for.body236.prol.loopexit.unr-lcssa, label %for.body236.prol, !llvm.loop !181

for.body236.prol.loopexit.unr-lcssa:              ; preds = %for.body236.prol
  br label %for.body236.prol.loopexit

for.body236.prol.loopexit:                        ; preds = %for.body236.preheader2161, %for.body236.prol.loopexit.unr-lcssa
  %indvars.iv909.unr = phi i64 [ %indvars.iv909.ph, %for.body236.preheader2161 ], [ %indvars.iv.next910.prol, %for.body236.prol.loopexit.unr-lcssa ]
  %478 = icmp ult i64 %475, 3
  br i1 %478, label %for.end246.loopexit, label %for.body236.preheader2161.new

for.body236.preheader2161.new:                    ; preds = %for.body236.prol.loopexit
  br label %for.body236

for.body236:                                      ; preds = %for.body236, %for.body236.preheader2161.new
  %indvars.iv909 = phi i64 [ %indvars.iv909.unr, %for.body236.preheader2161.new ], [ %indvars.iv.next910.3, %for.body236 ]
  %arrayidx238 = getelementptr inbounds i32, i32* %139, i64 %indvars.iv909
  %479 = load i32, i32* %arrayidx238, align 4, !tbaa !13
  %arrayidx240 = getelementptr inbounds i32, i32* %172, i64 %indvars.iv909
  %480 = load i32, i32* %arrayidx240, align 4, !tbaa !13
  %add241 = add nsw i32 %480, %479
  %arrayidx243 = getelementptr inbounds i32, i32* %456, i64 %indvars.iv909
  store i32 %add241, i32* %arrayidx243, align 4, !tbaa !13
  %indvars.iv.next910 = add nuw nsw i64 %indvars.iv909, 1
  %arrayidx238.1 = getelementptr inbounds i32, i32* %139, i64 %indvars.iv.next910
  %481 = load i32, i32* %arrayidx238.1, align 4, !tbaa !13
  %arrayidx240.1 = getelementptr inbounds i32, i32* %172, i64 %indvars.iv.next910
  %482 = load i32, i32* %arrayidx240.1, align 4, !tbaa !13
  %add241.1 = add nsw i32 %482, %481
  %arrayidx243.1 = getelementptr inbounds i32, i32* %456, i64 %indvars.iv.next910
  store i32 %add241.1, i32* %arrayidx243.1, align 4, !tbaa !13
  %indvars.iv.next910.1 = add nsw i64 %indvars.iv909, 2
  %arrayidx238.2 = getelementptr inbounds i32, i32* %139, i64 %indvars.iv.next910.1
  %483 = load i32, i32* %arrayidx238.2, align 4, !tbaa !13
  %arrayidx240.2 = getelementptr inbounds i32, i32* %172, i64 %indvars.iv.next910.1
  %484 = load i32, i32* %arrayidx240.2, align 4, !tbaa !13
  %add241.2 = add nsw i32 %484, %483
  %arrayidx243.2 = getelementptr inbounds i32, i32* %456, i64 %indvars.iv.next910.1
  store i32 %add241.2, i32* %arrayidx243.2, align 4, !tbaa !13
  %indvars.iv.next910.2 = add nsw i64 %indvars.iv909, 3
  %arrayidx238.3 = getelementptr inbounds i32, i32* %139, i64 %indvars.iv.next910.2
  %485 = load i32, i32* %arrayidx238.3, align 4, !tbaa !13
  %arrayidx240.3 = getelementptr inbounds i32, i32* %172, i64 %indvars.iv.next910.2
  %486 = load i32, i32* %arrayidx240.3, align 4, !tbaa !13
  %add241.3 = add nsw i32 %486, %485
  %arrayidx243.3 = getelementptr inbounds i32, i32* %456, i64 %indvars.iv.next910.2
  store i32 %add241.3, i32* %arrayidx243.3, align 4, !tbaa !13
  %indvars.iv.next910.3 = add nsw i64 %indvars.iv909, 4
  %exitcond912.3 = icmp eq i64 %indvars.iv.next910.3, %wide.trip.count911
  br i1 %exitcond912.3, label %for.end246.loopexit.unr-lcssa, label %for.body236, !llvm.loop !182

for.end246.loopexit.unr-lcssa:                    ; preds = %for.body236
  br label %for.end246.loopexit

for.end246.loopexit:                              ; preds = %for.body236.prol.loopexit, %for.end246.loopexit.unr-lcssa
  br label %for.end246

for.end246:                                       ; preds = %for.end246.loopexit, %middle.block1745
  %add.ptr247 = getelementptr inbounds i32*, i32** %269, i64 14
  %487 = load i32*, i32** %add.ptr247, align 8, !tbaa !1
  br i1 %cmp871, label %for.body252.preheader, label %for.end438

for.body252.preheader:                            ; preds = %for.end246
  %wide.trip.count907 = zext i32 %max_pos to i64
  %min.iters.check1784 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1784, label %for.body252.preheader2160, label %min.iters.checked1785

min.iters.checked1785:                            ; preds = %for.body252.preheader
  %488 = and i32 %max_pos, 7
  %n.mod.vf1786 = zext i32 %488 to i64
  %n.vec1787 = sub nsw i64 %wide.trip.count967, %n.mod.vf1786
  %cmp.zero1788 = icmp eq i64 %n.vec1787, 0
  br i1 %cmp.zero1788, label %for.body252.preheader2160, label %vector.memcheck1804

vector.memcheck1804:                              ; preds = %min.iters.checked1785
  %scevgep1790 = getelementptr i32, i32* %487, i64 %wide.trip.count967
  %scevgep1792 = getelementptr i32, i32* %205, i64 %wide.trip.count967
  %scevgep1794 = getelementptr i32, i32* %238, i64 %wide.trip.count967
  %bound01796 = icmp ult i32* %487, %scevgep1792
  %bound11797 = icmp ult i32* %205, %scevgep1790
  %found.conflict1798 = and i1 %bound01796, %bound11797
  %bound01799 = icmp ult i32* %487, %scevgep1794
  %bound11800 = icmp ult i32* %238, %scevgep1790
  %found.conflict1801 = and i1 %bound01799, %bound11800
  %conflict.rdx1802 = or i1 %found.conflict1798, %found.conflict1801
  br i1 %conflict.rdx1802, label %for.body252.preheader2160, label %vector.body1781.preheader

vector.body1781.preheader:                        ; preds = %vector.memcheck1804
  br label %vector.body1781

vector.body1781:                                  ; preds = %vector.body1781.preheader, %vector.body1781
  %index1806 = phi i64 [ %index.next1807, %vector.body1781 ], [ 0, %vector.body1781.preheader ]
  %489 = getelementptr inbounds i32, i32* %205, i64 %index1806
  %490 = bitcast i32* %489 to <4 x i32>*
  %wide.load1814 = load <4 x i32>, <4 x i32>* %490, align 4, !tbaa !13, !alias.scope !183
  %491 = getelementptr i32, i32* %489, i64 4
  %492 = bitcast i32* %491 to <4 x i32>*
  %wide.load1815 = load <4 x i32>, <4 x i32>* %492, align 4, !tbaa !13, !alias.scope !183
  %493 = getelementptr inbounds i32, i32* %238, i64 %index1806
  %494 = bitcast i32* %493 to <4 x i32>*
  %wide.load1816 = load <4 x i32>, <4 x i32>* %494, align 4, !tbaa !13, !alias.scope !186
  %495 = getelementptr i32, i32* %493, i64 4
  %496 = bitcast i32* %495 to <4 x i32>*
  %wide.load1817 = load <4 x i32>, <4 x i32>* %496, align 4, !tbaa !13, !alias.scope !186
  %497 = add nsw <4 x i32> %wide.load1816, %wide.load1814
  %498 = add nsw <4 x i32> %wide.load1817, %wide.load1815
  %499 = getelementptr inbounds i32, i32* %487, i64 %index1806
  %500 = bitcast i32* %499 to <4 x i32>*
  store <4 x i32> %497, <4 x i32>* %500, align 4, !tbaa !13, !alias.scope !188, !noalias !190
  %501 = getelementptr i32, i32* %499, i64 4
  %502 = bitcast i32* %501 to <4 x i32>*
  store <4 x i32> %498, <4 x i32>* %502, align 4, !tbaa !13, !alias.scope !188, !noalias !190
  %index.next1807 = add i64 %index1806, 8
  %503 = icmp eq i64 %index.next1807, %n.vec1787
  br i1 %503, label %middle.block1782, label %vector.body1781, !llvm.loop !191

middle.block1782:                                 ; preds = %vector.body1781
  %cmp.n1809 = icmp eq i32 %488, 0
  br i1 %cmp.n1809, label %for.end262, label %for.body252.preheader2160

for.body252.preheader2160:                        ; preds = %middle.block1782, %vector.memcheck1804, %min.iters.checked1785, %for.body252.preheader
  %indvars.iv905.ph = phi i64 [ 0, %vector.memcheck1804 ], [ 0, %min.iters.checked1785 ], [ 0, %for.body252.preheader ], [ %n.vec1787, %middle.block1782 ]
  %504 = sub nsw i64 %wide.trip.count967, %indvars.iv905.ph
  %505 = add nsw i64 %wide.trip.count967, -1
  %506 = sub nsw i64 %505, %indvars.iv905.ph
  %xtraiter2200 = and i64 %504, 3
  %lcmp.mod2201 = icmp eq i64 %xtraiter2200, 0
  br i1 %lcmp.mod2201, label %for.body252.prol.loopexit, label %for.body252.prol.preheader

for.body252.prol.preheader:                       ; preds = %for.body252.preheader2160
  br label %for.body252.prol

for.body252.prol:                                 ; preds = %for.body252.prol, %for.body252.prol.preheader
  %indvars.iv905.prol = phi i64 [ %indvars.iv.next906.prol, %for.body252.prol ], [ %indvars.iv905.ph, %for.body252.prol.preheader ]
  %prol.iter2202 = phi i64 [ %prol.iter2202.sub, %for.body252.prol ], [ %xtraiter2200, %for.body252.prol.preheader ]
  %arrayidx254.prol = getelementptr inbounds i32, i32* %205, i64 %indvars.iv905.prol
  %507 = load i32, i32* %arrayidx254.prol, align 4, !tbaa !13
  %arrayidx256.prol = getelementptr inbounds i32, i32* %238, i64 %indvars.iv905.prol
  %508 = load i32, i32* %arrayidx256.prol, align 4, !tbaa !13
  %add257.prol = add nsw i32 %508, %507
  %arrayidx259.prol = getelementptr inbounds i32, i32* %487, i64 %indvars.iv905.prol
  store i32 %add257.prol, i32* %arrayidx259.prol, align 4, !tbaa !13
  %indvars.iv.next906.prol = add nuw nsw i64 %indvars.iv905.prol, 1
  %prol.iter2202.sub = add i64 %prol.iter2202, -1
  %prol.iter2202.cmp = icmp eq i64 %prol.iter2202.sub, 0
  br i1 %prol.iter2202.cmp, label %for.body252.prol.loopexit.unr-lcssa, label %for.body252.prol, !llvm.loop !192

for.body252.prol.loopexit.unr-lcssa:              ; preds = %for.body252.prol
  br label %for.body252.prol.loopexit

for.body252.prol.loopexit:                        ; preds = %for.body252.preheader2160, %for.body252.prol.loopexit.unr-lcssa
  %indvars.iv905.unr = phi i64 [ %indvars.iv905.ph, %for.body252.preheader2160 ], [ %indvars.iv.next906.prol, %for.body252.prol.loopexit.unr-lcssa ]
  %509 = icmp ult i64 %506, 3
  br i1 %509, label %for.end262.loopexit, label %for.body252.preheader2160.new

for.body252.preheader2160.new:                    ; preds = %for.body252.prol.loopexit
  br label %for.body252

for.body252:                                      ; preds = %for.body252, %for.body252.preheader2160.new
  %indvars.iv905 = phi i64 [ %indvars.iv905.unr, %for.body252.preheader2160.new ], [ %indvars.iv.next906.3, %for.body252 ]
  %arrayidx254 = getelementptr inbounds i32, i32* %205, i64 %indvars.iv905
  %510 = load i32, i32* %arrayidx254, align 4, !tbaa !13
  %arrayidx256 = getelementptr inbounds i32, i32* %238, i64 %indvars.iv905
  %511 = load i32, i32* %arrayidx256, align 4, !tbaa !13
  %add257 = add nsw i32 %511, %510
  %arrayidx259 = getelementptr inbounds i32, i32* %487, i64 %indvars.iv905
  store i32 %add257, i32* %arrayidx259, align 4, !tbaa !13
  %indvars.iv.next906 = add nuw nsw i64 %indvars.iv905, 1
  %arrayidx254.1 = getelementptr inbounds i32, i32* %205, i64 %indvars.iv.next906
  %512 = load i32, i32* %arrayidx254.1, align 4, !tbaa !13
  %arrayidx256.1 = getelementptr inbounds i32, i32* %238, i64 %indvars.iv.next906
  %513 = load i32, i32* %arrayidx256.1, align 4, !tbaa !13
  %add257.1 = add nsw i32 %513, %512
  %arrayidx259.1 = getelementptr inbounds i32, i32* %487, i64 %indvars.iv.next906
  store i32 %add257.1, i32* %arrayidx259.1, align 4, !tbaa !13
  %indvars.iv.next906.1 = add nsw i64 %indvars.iv905, 2
  %arrayidx254.2 = getelementptr inbounds i32, i32* %205, i64 %indvars.iv.next906.1
  %514 = load i32, i32* %arrayidx254.2, align 4, !tbaa !13
  %arrayidx256.2 = getelementptr inbounds i32, i32* %238, i64 %indvars.iv.next906.1
  %515 = load i32, i32* %arrayidx256.2, align 4, !tbaa !13
  %add257.2 = add nsw i32 %515, %514
  %arrayidx259.2 = getelementptr inbounds i32, i32* %487, i64 %indvars.iv.next906.1
  store i32 %add257.2, i32* %arrayidx259.2, align 4, !tbaa !13
  %indvars.iv.next906.2 = add nsw i64 %indvars.iv905, 3
  %arrayidx254.3 = getelementptr inbounds i32, i32* %205, i64 %indvars.iv.next906.2
  %516 = load i32, i32* %arrayidx254.3, align 4, !tbaa !13
  %arrayidx256.3 = getelementptr inbounds i32, i32* %238, i64 %indvars.iv.next906.2
  %517 = load i32, i32* %arrayidx256.3, align 4, !tbaa !13
  %add257.3 = add nsw i32 %517, %516
  %arrayidx259.3 = getelementptr inbounds i32, i32* %487, i64 %indvars.iv.next906.2
  store i32 %add257.3, i32* %arrayidx259.3, align 4, !tbaa !13
  %indvars.iv.next906.3 = add nsw i64 %indvars.iv905, 4
  %exitcond908.3 = icmp eq i64 %indvars.iv.next906.3, %wide.trip.count907
  br i1 %exitcond908.3, label %for.end262.loopexit.unr-lcssa, label %for.body252, !llvm.loop !193

for.end262.loopexit.unr-lcssa:                    ; preds = %for.body252
  br label %for.end262.loopexit

for.end262.loopexit:                              ; preds = %for.body252.prol.loopexit, %for.end262.loopexit.unr-lcssa
  br label %for.end262

for.end262:                                       ; preds = %for.end262.loopexit, %middle.block1782
  %arrayidx267 = getelementptr inbounds i32**, i32*** %2, i64 4
  %518 = load i32**, i32*** %arrayidx267, align 8, !tbaa !1
  %519 = load i32*, i32** %518, align 8, !tbaa !1
  br i1 %cmp871, label %for.body276.preheader, label %for.end438

for.body276.preheader:                            ; preds = %for.end262
  %wide.trip.count903 = zext i32 %max_pos to i64
  %min.iters.check1821 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1821, label %for.body276.preheader2159, label %min.iters.checked1822

min.iters.checked1822:                            ; preds = %for.body276.preheader
  %520 = and i32 %max_pos, 7
  %n.mod.vf1823 = zext i32 %520 to i64
  %n.vec1824 = sub nsw i64 %wide.trip.count967, %n.mod.vf1823
  %cmp.zero1825 = icmp eq i64 %n.vec1824, 0
  br i1 %cmp.zero1825, label %for.body276.preheader2159, label %vector.memcheck1841

vector.memcheck1841:                              ; preds = %min.iters.checked1822
  %scevgep1827 = getelementptr i32, i32* %519, i64 %wide.trip.count967
  %scevgep1829 = getelementptr i32, i32* %5, i64 %wide.trip.count967
  %scevgep1831 = getelementptr i32, i32* %38, i64 %wide.trip.count967
  %bound01833 = icmp ult i32* %519, %scevgep1829
  %bound11834 = icmp ult i32* %5, %scevgep1827
  %found.conflict1835 = and i1 %bound01833, %bound11834
  %bound01836 = icmp ult i32* %519, %scevgep1831
  %bound11837 = icmp ult i32* %38, %scevgep1827
  %found.conflict1838 = and i1 %bound01836, %bound11837
  %conflict.rdx1839 = or i1 %found.conflict1835, %found.conflict1838
  br i1 %conflict.rdx1839, label %for.body276.preheader2159, label %vector.body1818.preheader

vector.body1818.preheader:                        ; preds = %vector.memcheck1841
  br label %vector.body1818

vector.body1818:                                  ; preds = %vector.body1818.preheader, %vector.body1818
  %index1843 = phi i64 [ %index.next1844, %vector.body1818 ], [ 0, %vector.body1818.preheader ]
  %521 = getelementptr inbounds i32, i32* %5, i64 %index1843
  %522 = bitcast i32* %521 to <4 x i32>*
  %wide.load1851 = load <4 x i32>, <4 x i32>* %522, align 4, !tbaa !13, !alias.scope !194
  %523 = getelementptr i32, i32* %521, i64 4
  %524 = bitcast i32* %523 to <4 x i32>*
  %wide.load1852 = load <4 x i32>, <4 x i32>* %524, align 4, !tbaa !13, !alias.scope !194
  %525 = getelementptr inbounds i32, i32* %38, i64 %index1843
  %526 = bitcast i32* %525 to <4 x i32>*
  %wide.load1853 = load <4 x i32>, <4 x i32>* %526, align 4, !tbaa !13, !alias.scope !197
  %527 = getelementptr i32, i32* %525, i64 4
  %528 = bitcast i32* %527 to <4 x i32>*
  %wide.load1854 = load <4 x i32>, <4 x i32>* %528, align 4, !tbaa !13, !alias.scope !197
  %529 = add nsw <4 x i32> %wide.load1853, %wide.load1851
  %530 = add nsw <4 x i32> %wide.load1854, %wide.load1852
  %531 = getelementptr inbounds i32, i32* %519, i64 %index1843
  %532 = bitcast i32* %531 to <4 x i32>*
  store <4 x i32> %529, <4 x i32>* %532, align 4, !tbaa !13, !alias.scope !199, !noalias !201
  %533 = getelementptr i32, i32* %531, i64 4
  %534 = bitcast i32* %533 to <4 x i32>*
  store <4 x i32> %530, <4 x i32>* %534, align 4, !tbaa !13, !alias.scope !199, !noalias !201
  %index.next1844 = add i64 %index1843, 8
  %535 = icmp eq i64 %index.next1844, %n.vec1824
  br i1 %535, label %middle.block1819, label %vector.body1818, !llvm.loop !202

middle.block1819:                                 ; preds = %vector.body1818
  %cmp.n1846 = icmp eq i32 %520, 0
  br i1 %cmp.n1846, label %for.end286, label %for.body276.preheader2159

for.body276.preheader2159:                        ; preds = %middle.block1819, %vector.memcheck1841, %min.iters.checked1822, %for.body276.preheader
  %indvars.iv901.ph = phi i64 [ 0, %vector.memcheck1841 ], [ 0, %min.iters.checked1822 ], [ 0, %for.body276.preheader ], [ %n.vec1824, %middle.block1819 ]
  %536 = sub nsw i64 %wide.trip.count967, %indvars.iv901.ph
  %537 = add nsw i64 %wide.trip.count967, -1
  %538 = sub nsw i64 %537, %indvars.iv901.ph
  %xtraiter2197 = and i64 %536, 3
  %lcmp.mod2198 = icmp eq i64 %xtraiter2197, 0
  br i1 %lcmp.mod2198, label %for.body276.prol.loopexit, label %for.body276.prol.preheader

for.body276.prol.preheader:                       ; preds = %for.body276.preheader2159
  br label %for.body276.prol

for.body276.prol:                                 ; preds = %for.body276.prol, %for.body276.prol.preheader
  %indvars.iv901.prol = phi i64 [ %indvars.iv.next902.prol, %for.body276.prol ], [ %indvars.iv901.ph, %for.body276.prol.preheader ]
  %prol.iter2199 = phi i64 [ %prol.iter2199.sub, %for.body276.prol ], [ %xtraiter2197, %for.body276.prol.preheader ]
  %arrayidx278.prol = getelementptr inbounds i32, i32* %5, i64 %indvars.iv901.prol
  %539 = load i32, i32* %arrayidx278.prol, align 4, !tbaa !13
  %arrayidx280.prol = getelementptr inbounds i32, i32* %38, i64 %indvars.iv901.prol
  %540 = load i32, i32* %arrayidx280.prol, align 4, !tbaa !13
  %add281.prol = add nsw i32 %540, %539
  %arrayidx283.prol = getelementptr inbounds i32, i32* %519, i64 %indvars.iv901.prol
  store i32 %add281.prol, i32* %arrayidx283.prol, align 4, !tbaa !13
  %indvars.iv.next902.prol = add nuw nsw i64 %indvars.iv901.prol, 1
  %prol.iter2199.sub = add i64 %prol.iter2199, -1
  %prol.iter2199.cmp = icmp eq i64 %prol.iter2199.sub, 0
  br i1 %prol.iter2199.cmp, label %for.body276.prol.loopexit.unr-lcssa, label %for.body276.prol, !llvm.loop !203

for.body276.prol.loopexit.unr-lcssa:              ; preds = %for.body276.prol
  br label %for.body276.prol.loopexit

for.body276.prol.loopexit:                        ; preds = %for.body276.preheader2159, %for.body276.prol.loopexit.unr-lcssa
  %indvars.iv901.unr = phi i64 [ %indvars.iv901.ph, %for.body276.preheader2159 ], [ %indvars.iv.next902.prol, %for.body276.prol.loopexit.unr-lcssa ]
  %541 = icmp ult i64 %538, 3
  br i1 %541, label %for.end286.loopexit, label %for.body276.preheader2159.new

for.body276.preheader2159.new:                    ; preds = %for.body276.prol.loopexit
  br label %for.body276

for.body276:                                      ; preds = %for.body276, %for.body276.preheader2159.new
  %indvars.iv901 = phi i64 [ %indvars.iv901.unr, %for.body276.preheader2159.new ], [ %indvars.iv.next902.3, %for.body276 ]
  %arrayidx278 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv901
  %542 = load i32, i32* %arrayidx278, align 4, !tbaa !13
  %arrayidx280 = getelementptr inbounds i32, i32* %38, i64 %indvars.iv901
  %543 = load i32, i32* %arrayidx280, align 4, !tbaa !13
  %add281 = add nsw i32 %543, %542
  %arrayidx283 = getelementptr inbounds i32, i32* %519, i64 %indvars.iv901
  store i32 %add281, i32* %arrayidx283, align 4, !tbaa !13
  %indvars.iv.next902 = add nuw nsw i64 %indvars.iv901, 1
  %arrayidx278.1 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv.next902
  %544 = load i32, i32* %arrayidx278.1, align 4, !tbaa !13
  %arrayidx280.1 = getelementptr inbounds i32, i32* %38, i64 %indvars.iv.next902
  %545 = load i32, i32* %arrayidx280.1, align 4, !tbaa !13
  %add281.1 = add nsw i32 %545, %544
  %arrayidx283.1 = getelementptr inbounds i32, i32* %519, i64 %indvars.iv.next902
  store i32 %add281.1, i32* %arrayidx283.1, align 4, !tbaa !13
  %indvars.iv.next902.1 = add nsw i64 %indvars.iv901, 2
  %arrayidx278.2 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv.next902.1
  %546 = load i32, i32* %arrayidx278.2, align 4, !tbaa !13
  %arrayidx280.2 = getelementptr inbounds i32, i32* %38, i64 %indvars.iv.next902.1
  %547 = load i32, i32* %arrayidx280.2, align 4, !tbaa !13
  %add281.2 = add nsw i32 %547, %546
  %arrayidx283.2 = getelementptr inbounds i32, i32* %519, i64 %indvars.iv.next902.1
  store i32 %add281.2, i32* %arrayidx283.2, align 4, !tbaa !13
  %indvars.iv.next902.2 = add nsw i64 %indvars.iv901, 3
  %arrayidx278.3 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv.next902.2
  %548 = load i32, i32* %arrayidx278.3, align 4, !tbaa !13
  %arrayidx280.3 = getelementptr inbounds i32, i32* %38, i64 %indvars.iv.next902.2
  %549 = load i32, i32* %arrayidx280.3, align 4, !tbaa !13
  %add281.3 = add nsw i32 %549, %548
  %arrayidx283.3 = getelementptr inbounds i32, i32* %519, i64 %indvars.iv.next902.2
  store i32 %add281.3, i32* %arrayidx283.3, align 4, !tbaa !13
  %indvars.iv.next902.3 = add nsw i64 %indvars.iv901, 4
  %exitcond904.3 = icmp eq i64 %indvars.iv.next902.3, %wide.trip.count903
  br i1 %exitcond904.3, label %for.end286.loopexit.unr-lcssa, label %for.body276, !llvm.loop !204

for.end286.loopexit.unr-lcssa:                    ; preds = %for.body276
  br label %for.end286.loopexit

for.end286.loopexit:                              ; preds = %for.body276.prol.loopexit, %for.end286.loopexit.unr-lcssa
  br label %for.end286

for.end286:                                       ; preds = %for.end286.loopexit, %middle.block1819
  %add.ptr287 = getelementptr inbounds i32*, i32** %518, i64 2
  %550 = load i32*, i32** %add.ptr287, align 8, !tbaa !1
  br i1 %cmp871, label %for.body292.preheader, label %for.end438

for.body292.preheader:                            ; preds = %for.end286
  %wide.trip.count899 = zext i32 %max_pos to i64
  %min.iters.check1858 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1858, label %for.body292.preheader2158, label %min.iters.checked1859

min.iters.checked1859:                            ; preds = %for.body292.preheader
  %551 = and i32 %max_pos, 7
  %n.mod.vf1860 = zext i32 %551 to i64
  %n.vec1861 = sub nsw i64 %wide.trip.count967, %n.mod.vf1860
  %cmp.zero1862 = icmp eq i64 %n.vec1861, 0
  br i1 %cmp.zero1862, label %for.body292.preheader2158, label %vector.memcheck1878

vector.memcheck1878:                              ; preds = %min.iters.checked1859
  %scevgep1864 = getelementptr i32, i32* %550, i64 %wide.trip.count967
  %scevgep1866 = getelementptr i32, i32* %71, i64 %wide.trip.count967
  %scevgep1868 = getelementptr i32, i32* %104, i64 %wide.trip.count967
  %bound01870 = icmp ult i32* %550, %scevgep1866
  %bound11871 = icmp ult i32* %71, %scevgep1864
  %found.conflict1872 = and i1 %bound01870, %bound11871
  %bound01873 = icmp ult i32* %550, %scevgep1868
  %bound11874 = icmp ult i32* %104, %scevgep1864
  %found.conflict1875 = and i1 %bound01873, %bound11874
  %conflict.rdx1876 = or i1 %found.conflict1872, %found.conflict1875
  br i1 %conflict.rdx1876, label %for.body292.preheader2158, label %vector.body1855.preheader

vector.body1855.preheader:                        ; preds = %vector.memcheck1878
  br label %vector.body1855

vector.body1855:                                  ; preds = %vector.body1855.preheader, %vector.body1855
  %index1880 = phi i64 [ %index.next1881, %vector.body1855 ], [ 0, %vector.body1855.preheader ]
  %552 = getelementptr inbounds i32, i32* %71, i64 %index1880
  %553 = bitcast i32* %552 to <4 x i32>*
  %wide.load1888 = load <4 x i32>, <4 x i32>* %553, align 4, !tbaa !13, !alias.scope !205
  %554 = getelementptr i32, i32* %552, i64 4
  %555 = bitcast i32* %554 to <4 x i32>*
  %wide.load1889 = load <4 x i32>, <4 x i32>* %555, align 4, !tbaa !13, !alias.scope !205
  %556 = getelementptr inbounds i32, i32* %104, i64 %index1880
  %557 = bitcast i32* %556 to <4 x i32>*
  %wide.load1890 = load <4 x i32>, <4 x i32>* %557, align 4, !tbaa !13, !alias.scope !208
  %558 = getelementptr i32, i32* %556, i64 4
  %559 = bitcast i32* %558 to <4 x i32>*
  %wide.load1891 = load <4 x i32>, <4 x i32>* %559, align 4, !tbaa !13, !alias.scope !208
  %560 = add nsw <4 x i32> %wide.load1890, %wide.load1888
  %561 = add nsw <4 x i32> %wide.load1891, %wide.load1889
  %562 = getelementptr inbounds i32, i32* %550, i64 %index1880
  %563 = bitcast i32* %562 to <4 x i32>*
  store <4 x i32> %560, <4 x i32>* %563, align 4, !tbaa !13, !alias.scope !210, !noalias !212
  %564 = getelementptr i32, i32* %562, i64 4
  %565 = bitcast i32* %564 to <4 x i32>*
  store <4 x i32> %561, <4 x i32>* %565, align 4, !tbaa !13, !alias.scope !210, !noalias !212
  %index.next1881 = add i64 %index1880, 8
  %566 = icmp eq i64 %index.next1881, %n.vec1861
  br i1 %566, label %middle.block1856, label %vector.body1855, !llvm.loop !213

middle.block1856:                                 ; preds = %vector.body1855
  %cmp.n1883 = icmp eq i32 %551, 0
  br i1 %cmp.n1883, label %for.end302, label %for.body292.preheader2158

for.body292.preheader2158:                        ; preds = %middle.block1856, %vector.memcheck1878, %min.iters.checked1859, %for.body292.preheader
  %indvars.iv897.ph = phi i64 [ 0, %vector.memcheck1878 ], [ 0, %min.iters.checked1859 ], [ 0, %for.body292.preheader ], [ %n.vec1861, %middle.block1856 ]
  %567 = sub nsw i64 %wide.trip.count967, %indvars.iv897.ph
  %568 = add nsw i64 %wide.trip.count967, -1
  %569 = sub nsw i64 %568, %indvars.iv897.ph
  %xtraiter2194 = and i64 %567, 3
  %lcmp.mod2195 = icmp eq i64 %xtraiter2194, 0
  br i1 %lcmp.mod2195, label %for.body292.prol.loopexit, label %for.body292.prol.preheader

for.body292.prol.preheader:                       ; preds = %for.body292.preheader2158
  br label %for.body292.prol

for.body292.prol:                                 ; preds = %for.body292.prol, %for.body292.prol.preheader
  %indvars.iv897.prol = phi i64 [ %indvars.iv.next898.prol, %for.body292.prol ], [ %indvars.iv897.ph, %for.body292.prol.preheader ]
  %prol.iter2196 = phi i64 [ %prol.iter2196.sub, %for.body292.prol ], [ %xtraiter2194, %for.body292.prol.preheader ]
  %arrayidx294.prol = getelementptr inbounds i32, i32* %71, i64 %indvars.iv897.prol
  %570 = load i32, i32* %arrayidx294.prol, align 4, !tbaa !13
  %arrayidx296.prol = getelementptr inbounds i32, i32* %104, i64 %indvars.iv897.prol
  %571 = load i32, i32* %arrayidx296.prol, align 4, !tbaa !13
  %add297.prol = add nsw i32 %571, %570
  %arrayidx299.prol = getelementptr inbounds i32, i32* %550, i64 %indvars.iv897.prol
  store i32 %add297.prol, i32* %arrayidx299.prol, align 4, !tbaa !13
  %indvars.iv.next898.prol = add nuw nsw i64 %indvars.iv897.prol, 1
  %prol.iter2196.sub = add i64 %prol.iter2196, -1
  %prol.iter2196.cmp = icmp eq i64 %prol.iter2196.sub, 0
  br i1 %prol.iter2196.cmp, label %for.body292.prol.loopexit.unr-lcssa, label %for.body292.prol, !llvm.loop !214

for.body292.prol.loopexit.unr-lcssa:              ; preds = %for.body292.prol
  br label %for.body292.prol.loopexit

for.body292.prol.loopexit:                        ; preds = %for.body292.preheader2158, %for.body292.prol.loopexit.unr-lcssa
  %indvars.iv897.unr = phi i64 [ %indvars.iv897.ph, %for.body292.preheader2158 ], [ %indvars.iv.next898.prol, %for.body292.prol.loopexit.unr-lcssa ]
  %572 = icmp ult i64 %569, 3
  br i1 %572, label %for.end302.loopexit, label %for.body292.preheader2158.new

for.body292.preheader2158.new:                    ; preds = %for.body292.prol.loopexit
  br label %for.body292

for.body292:                                      ; preds = %for.body292, %for.body292.preheader2158.new
  %indvars.iv897 = phi i64 [ %indvars.iv897.unr, %for.body292.preheader2158.new ], [ %indvars.iv.next898.3, %for.body292 ]
  %arrayidx294 = getelementptr inbounds i32, i32* %71, i64 %indvars.iv897
  %573 = load i32, i32* %arrayidx294, align 4, !tbaa !13
  %arrayidx296 = getelementptr inbounds i32, i32* %104, i64 %indvars.iv897
  %574 = load i32, i32* %arrayidx296, align 4, !tbaa !13
  %add297 = add nsw i32 %574, %573
  %arrayidx299 = getelementptr inbounds i32, i32* %550, i64 %indvars.iv897
  store i32 %add297, i32* %arrayidx299, align 4, !tbaa !13
  %indvars.iv.next898 = add nuw nsw i64 %indvars.iv897, 1
  %arrayidx294.1 = getelementptr inbounds i32, i32* %71, i64 %indvars.iv.next898
  %575 = load i32, i32* %arrayidx294.1, align 4, !tbaa !13
  %arrayidx296.1 = getelementptr inbounds i32, i32* %104, i64 %indvars.iv.next898
  %576 = load i32, i32* %arrayidx296.1, align 4, !tbaa !13
  %add297.1 = add nsw i32 %576, %575
  %arrayidx299.1 = getelementptr inbounds i32, i32* %550, i64 %indvars.iv.next898
  store i32 %add297.1, i32* %arrayidx299.1, align 4, !tbaa !13
  %indvars.iv.next898.1 = add nsw i64 %indvars.iv897, 2
  %arrayidx294.2 = getelementptr inbounds i32, i32* %71, i64 %indvars.iv.next898.1
  %577 = load i32, i32* %arrayidx294.2, align 4, !tbaa !13
  %arrayidx296.2 = getelementptr inbounds i32, i32* %104, i64 %indvars.iv.next898.1
  %578 = load i32, i32* %arrayidx296.2, align 4, !tbaa !13
  %add297.2 = add nsw i32 %578, %577
  %arrayidx299.2 = getelementptr inbounds i32, i32* %550, i64 %indvars.iv.next898.1
  store i32 %add297.2, i32* %arrayidx299.2, align 4, !tbaa !13
  %indvars.iv.next898.2 = add nsw i64 %indvars.iv897, 3
  %arrayidx294.3 = getelementptr inbounds i32, i32* %71, i64 %indvars.iv.next898.2
  %579 = load i32, i32* %arrayidx294.3, align 4, !tbaa !13
  %arrayidx296.3 = getelementptr inbounds i32, i32* %104, i64 %indvars.iv.next898.2
  %580 = load i32, i32* %arrayidx296.3, align 4, !tbaa !13
  %add297.3 = add nsw i32 %580, %579
  %arrayidx299.3 = getelementptr inbounds i32, i32* %550, i64 %indvars.iv.next898.2
  store i32 %add297.3, i32* %arrayidx299.3, align 4, !tbaa !13
  %indvars.iv.next898.3 = add nsw i64 %indvars.iv897, 4
  %exitcond900.3 = icmp eq i64 %indvars.iv.next898.3, %wide.trip.count899
  br i1 %exitcond900.3, label %for.end302.loopexit.unr-lcssa, label %for.body292, !llvm.loop !215

for.end302.loopexit.unr-lcssa:                    ; preds = %for.body292
  br label %for.end302.loopexit

for.end302.loopexit:                              ; preds = %for.body292.prol.loopexit, %for.end302.loopexit.unr-lcssa
  br label %for.end302

for.end302:                                       ; preds = %for.end302.loopexit, %middle.block1856
  %add.ptr303 = getelementptr inbounds i32*, i32** %518, i64 8
  %581 = load i32*, i32** %add.ptr303, align 8, !tbaa !1
  br i1 %cmp871, label %for.body308.preheader, label %for.end438

for.body308.preheader:                            ; preds = %for.end302
  %wide.trip.count895 = zext i32 %max_pos to i64
  %min.iters.check1895 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1895, label %for.body308.preheader2157, label %min.iters.checked1896

min.iters.checked1896:                            ; preds = %for.body308.preheader
  %582 = and i32 %max_pos, 7
  %n.mod.vf1897 = zext i32 %582 to i64
  %n.vec1898 = sub nsw i64 %wide.trip.count967, %n.mod.vf1897
  %cmp.zero1899 = icmp eq i64 %n.vec1898, 0
  br i1 %cmp.zero1899, label %for.body308.preheader2157, label %vector.memcheck1915

vector.memcheck1915:                              ; preds = %min.iters.checked1896
  %scevgep1901 = getelementptr i32, i32* %581, i64 %wide.trip.count967
  %scevgep1903 = getelementptr i32, i32* %137, i64 %wide.trip.count967
  %scevgep1905 = getelementptr i32, i32* %170, i64 %wide.trip.count967
  %bound01907 = icmp ult i32* %581, %scevgep1903
  %bound11908 = icmp ult i32* %137, %scevgep1901
  %found.conflict1909 = and i1 %bound01907, %bound11908
  %bound01910 = icmp ult i32* %581, %scevgep1905
  %bound11911 = icmp ult i32* %170, %scevgep1901
  %found.conflict1912 = and i1 %bound01910, %bound11911
  %conflict.rdx1913 = or i1 %found.conflict1909, %found.conflict1912
  br i1 %conflict.rdx1913, label %for.body308.preheader2157, label %vector.body1892.preheader

vector.body1892.preheader:                        ; preds = %vector.memcheck1915
  br label %vector.body1892

vector.body1892:                                  ; preds = %vector.body1892.preheader, %vector.body1892
  %index1917 = phi i64 [ %index.next1918, %vector.body1892 ], [ 0, %vector.body1892.preheader ]
  %583 = getelementptr inbounds i32, i32* %137, i64 %index1917
  %584 = bitcast i32* %583 to <4 x i32>*
  %wide.load1925 = load <4 x i32>, <4 x i32>* %584, align 4, !tbaa !13, !alias.scope !216
  %585 = getelementptr i32, i32* %583, i64 4
  %586 = bitcast i32* %585 to <4 x i32>*
  %wide.load1926 = load <4 x i32>, <4 x i32>* %586, align 4, !tbaa !13, !alias.scope !216
  %587 = getelementptr inbounds i32, i32* %170, i64 %index1917
  %588 = bitcast i32* %587 to <4 x i32>*
  %wide.load1927 = load <4 x i32>, <4 x i32>* %588, align 4, !tbaa !13, !alias.scope !219
  %589 = getelementptr i32, i32* %587, i64 4
  %590 = bitcast i32* %589 to <4 x i32>*
  %wide.load1928 = load <4 x i32>, <4 x i32>* %590, align 4, !tbaa !13, !alias.scope !219
  %591 = add nsw <4 x i32> %wide.load1927, %wide.load1925
  %592 = add nsw <4 x i32> %wide.load1928, %wide.load1926
  %593 = getelementptr inbounds i32, i32* %581, i64 %index1917
  %594 = bitcast i32* %593 to <4 x i32>*
  store <4 x i32> %591, <4 x i32>* %594, align 4, !tbaa !13, !alias.scope !221, !noalias !223
  %595 = getelementptr i32, i32* %593, i64 4
  %596 = bitcast i32* %595 to <4 x i32>*
  store <4 x i32> %592, <4 x i32>* %596, align 4, !tbaa !13, !alias.scope !221, !noalias !223
  %index.next1918 = add i64 %index1917, 8
  %597 = icmp eq i64 %index.next1918, %n.vec1898
  br i1 %597, label %middle.block1893, label %vector.body1892, !llvm.loop !224

middle.block1893:                                 ; preds = %vector.body1892
  %cmp.n1920 = icmp eq i32 %582, 0
  br i1 %cmp.n1920, label %for.end318, label %for.body308.preheader2157

for.body308.preheader2157:                        ; preds = %middle.block1893, %vector.memcheck1915, %min.iters.checked1896, %for.body308.preheader
  %indvars.iv893.ph = phi i64 [ 0, %vector.memcheck1915 ], [ 0, %min.iters.checked1896 ], [ 0, %for.body308.preheader ], [ %n.vec1898, %middle.block1893 ]
  %598 = sub nsw i64 %wide.trip.count967, %indvars.iv893.ph
  %599 = add nsw i64 %wide.trip.count967, -1
  %600 = sub nsw i64 %599, %indvars.iv893.ph
  %xtraiter2191 = and i64 %598, 3
  %lcmp.mod2192 = icmp eq i64 %xtraiter2191, 0
  br i1 %lcmp.mod2192, label %for.body308.prol.loopexit, label %for.body308.prol.preheader

for.body308.prol.preheader:                       ; preds = %for.body308.preheader2157
  br label %for.body308.prol

for.body308.prol:                                 ; preds = %for.body308.prol, %for.body308.prol.preheader
  %indvars.iv893.prol = phi i64 [ %indvars.iv.next894.prol, %for.body308.prol ], [ %indvars.iv893.ph, %for.body308.prol.preheader ]
  %prol.iter2193 = phi i64 [ %prol.iter2193.sub, %for.body308.prol ], [ %xtraiter2191, %for.body308.prol.preheader ]
  %arrayidx310.prol = getelementptr inbounds i32, i32* %137, i64 %indvars.iv893.prol
  %601 = load i32, i32* %arrayidx310.prol, align 4, !tbaa !13
  %arrayidx312.prol = getelementptr inbounds i32, i32* %170, i64 %indvars.iv893.prol
  %602 = load i32, i32* %arrayidx312.prol, align 4, !tbaa !13
  %add313.prol = add nsw i32 %602, %601
  %arrayidx315.prol = getelementptr inbounds i32, i32* %581, i64 %indvars.iv893.prol
  store i32 %add313.prol, i32* %arrayidx315.prol, align 4, !tbaa !13
  %indvars.iv.next894.prol = add nuw nsw i64 %indvars.iv893.prol, 1
  %prol.iter2193.sub = add i64 %prol.iter2193, -1
  %prol.iter2193.cmp = icmp eq i64 %prol.iter2193.sub, 0
  br i1 %prol.iter2193.cmp, label %for.body308.prol.loopexit.unr-lcssa, label %for.body308.prol, !llvm.loop !225

for.body308.prol.loopexit.unr-lcssa:              ; preds = %for.body308.prol
  br label %for.body308.prol.loopexit

for.body308.prol.loopexit:                        ; preds = %for.body308.preheader2157, %for.body308.prol.loopexit.unr-lcssa
  %indvars.iv893.unr = phi i64 [ %indvars.iv893.ph, %for.body308.preheader2157 ], [ %indvars.iv.next894.prol, %for.body308.prol.loopexit.unr-lcssa ]
  %603 = icmp ult i64 %600, 3
  br i1 %603, label %for.end318.loopexit, label %for.body308.preheader2157.new

for.body308.preheader2157.new:                    ; preds = %for.body308.prol.loopexit
  br label %for.body308

for.body308:                                      ; preds = %for.body308, %for.body308.preheader2157.new
  %indvars.iv893 = phi i64 [ %indvars.iv893.unr, %for.body308.preheader2157.new ], [ %indvars.iv.next894.3, %for.body308 ]
  %arrayidx310 = getelementptr inbounds i32, i32* %137, i64 %indvars.iv893
  %604 = load i32, i32* %arrayidx310, align 4, !tbaa !13
  %arrayidx312 = getelementptr inbounds i32, i32* %170, i64 %indvars.iv893
  %605 = load i32, i32* %arrayidx312, align 4, !tbaa !13
  %add313 = add nsw i32 %605, %604
  %arrayidx315 = getelementptr inbounds i32, i32* %581, i64 %indvars.iv893
  store i32 %add313, i32* %arrayidx315, align 4, !tbaa !13
  %indvars.iv.next894 = add nuw nsw i64 %indvars.iv893, 1
  %arrayidx310.1 = getelementptr inbounds i32, i32* %137, i64 %indvars.iv.next894
  %606 = load i32, i32* %arrayidx310.1, align 4, !tbaa !13
  %arrayidx312.1 = getelementptr inbounds i32, i32* %170, i64 %indvars.iv.next894
  %607 = load i32, i32* %arrayidx312.1, align 4, !tbaa !13
  %add313.1 = add nsw i32 %607, %606
  %arrayidx315.1 = getelementptr inbounds i32, i32* %581, i64 %indvars.iv.next894
  store i32 %add313.1, i32* %arrayidx315.1, align 4, !tbaa !13
  %indvars.iv.next894.1 = add nsw i64 %indvars.iv893, 2
  %arrayidx310.2 = getelementptr inbounds i32, i32* %137, i64 %indvars.iv.next894.1
  %608 = load i32, i32* %arrayidx310.2, align 4, !tbaa !13
  %arrayidx312.2 = getelementptr inbounds i32, i32* %170, i64 %indvars.iv.next894.1
  %609 = load i32, i32* %arrayidx312.2, align 4, !tbaa !13
  %add313.2 = add nsw i32 %609, %608
  %arrayidx315.2 = getelementptr inbounds i32, i32* %581, i64 %indvars.iv.next894.1
  store i32 %add313.2, i32* %arrayidx315.2, align 4, !tbaa !13
  %indvars.iv.next894.2 = add nsw i64 %indvars.iv893, 3
  %arrayidx310.3 = getelementptr inbounds i32, i32* %137, i64 %indvars.iv.next894.2
  %610 = load i32, i32* %arrayidx310.3, align 4, !tbaa !13
  %arrayidx312.3 = getelementptr inbounds i32, i32* %170, i64 %indvars.iv.next894.2
  %611 = load i32, i32* %arrayidx312.3, align 4, !tbaa !13
  %add313.3 = add nsw i32 %611, %610
  %arrayidx315.3 = getelementptr inbounds i32, i32* %581, i64 %indvars.iv.next894.2
  store i32 %add313.3, i32* %arrayidx315.3, align 4, !tbaa !13
  %indvars.iv.next894.3 = add nsw i64 %indvars.iv893, 4
  %exitcond896.3 = icmp eq i64 %indvars.iv.next894.3, %wide.trip.count895
  br i1 %exitcond896.3, label %for.end318.loopexit.unr-lcssa, label %for.body308, !llvm.loop !226

for.end318.loopexit.unr-lcssa:                    ; preds = %for.body308
  br label %for.end318.loopexit

for.end318.loopexit:                              ; preds = %for.body308.prol.loopexit, %for.end318.loopexit.unr-lcssa
  br label %for.end318

for.end318:                                       ; preds = %for.end318.loopexit, %middle.block1893
  %add.ptr319 = getelementptr inbounds i32*, i32** %518, i64 10
  %612 = load i32*, i32** %add.ptr319, align 8, !tbaa !1
  br i1 %cmp871, label %for.body324.preheader, label %for.end438

for.body324.preheader:                            ; preds = %for.end318
  %wide.trip.count891 = zext i32 %max_pos to i64
  %min.iters.check1932 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1932, label %for.body324.preheader2156, label %min.iters.checked1933

min.iters.checked1933:                            ; preds = %for.body324.preheader
  %613 = and i32 %max_pos, 7
  %n.mod.vf1934 = zext i32 %613 to i64
  %n.vec1935 = sub nsw i64 %wide.trip.count967, %n.mod.vf1934
  %cmp.zero1936 = icmp eq i64 %n.vec1935, 0
  br i1 %cmp.zero1936, label %for.body324.preheader2156, label %vector.memcheck1952

vector.memcheck1952:                              ; preds = %min.iters.checked1933
  %scevgep1938 = getelementptr i32, i32* %612, i64 %wide.trip.count967
  %scevgep1940 = getelementptr i32, i32* %203, i64 %wide.trip.count967
  %scevgep1942 = getelementptr i32, i32* %236, i64 %wide.trip.count967
  %bound01944 = icmp ult i32* %612, %scevgep1940
  %bound11945 = icmp ult i32* %203, %scevgep1938
  %found.conflict1946 = and i1 %bound01944, %bound11945
  %bound01947 = icmp ult i32* %612, %scevgep1942
  %bound11948 = icmp ult i32* %236, %scevgep1938
  %found.conflict1949 = and i1 %bound01947, %bound11948
  %conflict.rdx1950 = or i1 %found.conflict1946, %found.conflict1949
  br i1 %conflict.rdx1950, label %for.body324.preheader2156, label %vector.body1929.preheader

vector.body1929.preheader:                        ; preds = %vector.memcheck1952
  br label %vector.body1929

vector.body1929:                                  ; preds = %vector.body1929.preheader, %vector.body1929
  %index1954 = phi i64 [ %index.next1955, %vector.body1929 ], [ 0, %vector.body1929.preheader ]
  %614 = getelementptr inbounds i32, i32* %203, i64 %index1954
  %615 = bitcast i32* %614 to <4 x i32>*
  %wide.load1962 = load <4 x i32>, <4 x i32>* %615, align 4, !tbaa !13, !alias.scope !227
  %616 = getelementptr i32, i32* %614, i64 4
  %617 = bitcast i32* %616 to <4 x i32>*
  %wide.load1963 = load <4 x i32>, <4 x i32>* %617, align 4, !tbaa !13, !alias.scope !227
  %618 = getelementptr inbounds i32, i32* %236, i64 %index1954
  %619 = bitcast i32* %618 to <4 x i32>*
  %wide.load1964 = load <4 x i32>, <4 x i32>* %619, align 4, !tbaa !13, !alias.scope !230
  %620 = getelementptr i32, i32* %618, i64 4
  %621 = bitcast i32* %620 to <4 x i32>*
  %wide.load1965 = load <4 x i32>, <4 x i32>* %621, align 4, !tbaa !13, !alias.scope !230
  %622 = add nsw <4 x i32> %wide.load1964, %wide.load1962
  %623 = add nsw <4 x i32> %wide.load1965, %wide.load1963
  %624 = getelementptr inbounds i32, i32* %612, i64 %index1954
  %625 = bitcast i32* %624 to <4 x i32>*
  store <4 x i32> %622, <4 x i32>* %625, align 4, !tbaa !13, !alias.scope !232, !noalias !234
  %626 = getelementptr i32, i32* %624, i64 4
  %627 = bitcast i32* %626 to <4 x i32>*
  store <4 x i32> %623, <4 x i32>* %627, align 4, !tbaa !13, !alias.scope !232, !noalias !234
  %index.next1955 = add i64 %index1954, 8
  %628 = icmp eq i64 %index.next1955, %n.vec1935
  br i1 %628, label %middle.block1930, label %vector.body1929, !llvm.loop !235

middle.block1930:                                 ; preds = %vector.body1929
  %cmp.n1957 = icmp eq i32 %613, 0
  br i1 %cmp.n1957, label %for.end334, label %for.body324.preheader2156

for.body324.preheader2156:                        ; preds = %middle.block1930, %vector.memcheck1952, %min.iters.checked1933, %for.body324.preheader
  %indvars.iv889.ph = phi i64 [ 0, %vector.memcheck1952 ], [ 0, %min.iters.checked1933 ], [ 0, %for.body324.preheader ], [ %n.vec1935, %middle.block1930 ]
  %629 = sub nsw i64 %wide.trip.count967, %indvars.iv889.ph
  %630 = add nsw i64 %wide.trip.count967, -1
  %631 = sub nsw i64 %630, %indvars.iv889.ph
  %xtraiter2188 = and i64 %629, 3
  %lcmp.mod2189 = icmp eq i64 %xtraiter2188, 0
  br i1 %lcmp.mod2189, label %for.body324.prol.loopexit, label %for.body324.prol.preheader

for.body324.prol.preheader:                       ; preds = %for.body324.preheader2156
  br label %for.body324.prol

for.body324.prol:                                 ; preds = %for.body324.prol, %for.body324.prol.preheader
  %indvars.iv889.prol = phi i64 [ %indvars.iv.next890.prol, %for.body324.prol ], [ %indvars.iv889.ph, %for.body324.prol.preheader ]
  %prol.iter2190 = phi i64 [ %prol.iter2190.sub, %for.body324.prol ], [ %xtraiter2188, %for.body324.prol.preheader ]
  %arrayidx326.prol = getelementptr inbounds i32, i32* %203, i64 %indvars.iv889.prol
  %632 = load i32, i32* %arrayidx326.prol, align 4, !tbaa !13
  %arrayidx328.prol = getelementptr inbounds i32, i32* %236, i64 %indvars.iv889.prol
  %633 = load i32, i32* %arrayidx328.prol, align 4, !tbaa !13
  %add329.prol = add nsw i32 %633, %632
  %arrayidx331.prol = getelementptr inbounds i32, i32* %612, i64 %indvars.iv889.prol
  store i32 %add329.prol, i32* %arrayidx331.prol, align 4, !tbaa !13
  %indvars.iv.next890.prol = add nuw nsw i64 %indvars.iv889.prol, 1
  %prol.iter2190.sub = add i64 %prol.iter2190, -1
  %prol.iter2190.cmp = icmp eq i64 %prol.iter2190.sub, 0
  br i1 %prol.iter2190.cmp, label %for.body324.prol.loopexit.unr-lcssa, label %for.body324.prol, !llvm.loop !236

for.body324.prol.loopexit.unr-lcssa:              ; preds = %for.body324.prol
  br label %for.body324.prol.loopexit

for.body324.prol.loopexit:                        ; preds = %for.body324.preheader2156, %for.body324.prol.loopexit.unr-lcssa
  %indvars.iv889.unr = phi i64 [ %indvars.iv889.ph, %for.body324.preheader2156 ], [ %indvars.iv.next890.prol, %for.body324.prol.loopexit.unr-lcssa ]
  %634 = icmp ult i64 %631, 3
  br i1 %634, label %for.end334.loopexit, label %for.body324.preheader2156.new

for.body324.preheader2156.new:                    ; preds = %for.body324.prol.loopexit
  br label %for.body324

for.body324:                                      ; preds = %for.body324, %for.body324.preheader2156.new
  %indvars.iv889 = phi i64 [ %indvars.iv889.unr, %for.body324.preheader2156.new ], [ %indvars.iv.next890.3, %for.body324 ]
  %arrayidx326 = getelementptr inbounds i32, i32* %203, i64 %indvars.iv889
  %635 = load i32, i32* %arrayidx326, align 4, !tbaa !13
  %arrayidx328 = getelementptr inbounds i32, i32* %236, i64 %indvars.iv889
  %636 = load i32, i32* %arrayidx328, align 4, !tbaa !13
  %add329 = add nsw i32 %636, %635
  %arrayidx331 = getelementptr inbounds i32, i32* %612, i64 %indvars.iv889
  store i32 %add329, i32* %arrayidx331, align 4, !tbaa !13
  %indvars.iv.next890 = add nuw nsw i64 %indvars.iv889, 1
  %arrayidx326.1 = getelementptr inbounds i32, i32* %203, i64 %indvars.iv.next890
  %637 = load i32, i32* %arrayidx326.1, align 4, !tbaa !13
  %arrayidx328.1 = getelementptr inbounds i32, i32* %236, i64 %indvars.iv.next890
  %638 = load i32, i32* %arrayidx328.1, align 4, !tbaa !13
  %add329.1 = add nsw i32 %638, %637
  %arrayidx331.1 = getelementptr inbounds i32, i32* %612, i64 %indvars.iv.next890
  store i32 %add329.1, i32* %arrayidx331.1, align 4, !tbaa !13
  %indvars.iv.next890.1 = add nsw i64 %indvars.iv889, 2
  %arrayidx326.2 = getelementptr inbounds i32, i32* %203, i64 %indvars.iv.next890.1
  %639 = load i32, i32* %arrayidx326.2, align 4, !tbaa !13
  %arrayidx328.2 = getelementptr inbounds i32, i32* %236, i64 %indvars.iv.next890.1
  %640 = load i32, i32* %arrayidx328.2, align 4, !tbaa !13
  %add329.2 = add nsw i32 %640, %639
  %arrayidx331.2 = getelementptr inbounds i32, i32* %612, i64 %indvars.iv.next890.1
  store i32 %add329.2, i32* %arrayidx331.2, align 4, !tbaa !13
  %indvars.iv.next890.2 = add nsw i64 %indvars.iv889, 3
  %arrayidx326.3 = getelementptr inbounds i32, i32* %203, i64 %indvars.iv.next890.2
  %641 = load i32, i32* %arrayidx326.3, align 4, !tbaa !13
  %arrayidx328.3 = getelementptr inbounds i32, i32* %236, i64 %indvars.iv.next890.2
  %642 = load i32, i32* %arrayidx328.3, align 4, !tbaa !13
  %add329.3 = add nsw i32 %642, %641
  %arrayidx331.3 = getelementptr inbounds i32, i32* %612, i64 %indvars.iv.next890.2
  store i32 %add329.3, i32* %arrayidx331.3, align 4, !tbaa !13
  %indvars.iv.next890.3 = add nsw i64 %indvars.iv889, 4
  %exitcond892.3 = icmp eq i64 %indvars.iv.next890.3, %wide.trip.count891
  br i1 %exitcond892.3, label %for.end334.loopexit.unr-lcssa, label %for.body324, !llvm.loop !237

for.end334.loopexit.unr-lcssa:                    ; preds = %for.body324
  br label %for.end334.loopexit

for.end334.loopexit:                              ; preds = %for.body324.prol.loopexit, %for.end334.loopexit.unr-lcssa
  br label %for.end334

for.end334:                                       ; preds = %for.end334.loopexit, %middle.block1930
  %arrayidx339 = getelementptr inbounds i32**, i32*** %2, i64 3
  %643 = load i32**, i32*** %arrayidx339, align 8, !tbaa !1
  %644 = load i32*, i32** %643, align 8, !tbaa !1
  br i1 %cmp871, label %for.body348.preheader, label %for.end438

for.body348.preheader:                            ; preds = %for.end334
  %wide.trip.count887 = zext i32 %max_pos to i64
  %min.iters.check1969 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check1969, label %for.body348.preheader2155, label %min.iters.checked1970

min.iters.checked1970:                            ; preds = %for.body348.preheader
  %645 = and i32 %max_pos, 7
  %n.mod.vf1971 = zext i32 %645 to i64
  %n.vec1972 = sub nsw i64 %wide.trip.count967, %n.mod.vf1971
  %cmp.zero1973 = icmp eq i64 %n.vec1972, 0
  br i1 %cmp.zero1973, label %for.body348.preheader2155, label %vector.memcheck1989

vector.memcheck1989:                              ; preds = %min.iters.checked1970
  %scevgep1975 = getelementptr i32, i32* %644, i64 %wide.trip.count967
  %scevgep1977 = getelementptr i32, i32* %519, i64 %wide.trip.count967
  %scevgep1979 = getelementptr i32, i32* %581, i64 %wide.trip.count967
  %bound01981 = icmp ult i32* %644, %scevgep1977
  %bound11982 = icmp ult i32* %519, %scevgep1975
  %found.conflict1983 = and i1 %bound01981, %bound11982
  %bound01984 = icmp ult i32* %644, %scevgep1979
  %bound11985 = icmp ult i32* %581, %scevgep1975
  %found.conflict1986 = and i1 %bound01984, %bound11985
  %conflict.rdx1987 = or i1 %found.conflict1983, %found.conflict1986
  br i1 %conflict.rdx1987, label %for.body348.preheader2155, label %vector.body1966.preheader

vector.body1966.preheader:                        ; preds = %vector.memcheck1989
  br label %vector.body1966

vector.body1966:                                  ; preds = %vector.body1966.preheader, %vector.body1966
  %index1991 = phi i64 [ %index.next1992, %vector.body1966 ], [ 0, %vector.body1966.preheader ]
  %646 = getelementptr inbounds i32, i32* %519, i64 %index1991
  %647 = bitcast i32* %646 to <4 x i32>*
  %wide.load1999 = load <4 x i32>, <4 x i32>* %647, align 4, !tbaa !13, !alias.scope !238
  %648 = getelementptr i32, i32* %646, i64 4
  %649 = bitcast i32* %648 to <4 x i32>*
  %wide.load2000 = load <4 x i32>, <4 x i32>* %649, align 4, !tbaa !13, !alias.scope !238
  %650 = getelementptr inbounds i32, i32* %581, i64 %index1991
  %651 = bitcast i32* %650 to <4 x i32>*
  %wide.load2001 = load <4 x i32>, <4 x i32>* %651, align 4, !tbaa !13, !alias.scope !241
  %652 = getelementptr i32, i32* %650, i64 4
  %653 = bitcast i32* %652 to <4 x i32>*
  %wide.load2002 = load <4 x i32>, <4 x i32>* %653, align 4, !tbaa !13, !alias.scope !241
  %654 = add nsw <4 x i32> %wide.load2001, %wide.load1999
  %655 = add nsw <4 x i32> %wide.load2002, %wide.load2000
  %656 = getelementptr inbounds i32, i32* %644, i64 %index1991
  %657 = bitcast i32* %656 to <4 x i32>*
  store <4 x i32> %654, <4 x i32>* %657, align 4, !tbaa !13, !alias.scope !243, !noalias !245
  %658 = getelementptr i32, i32* %656, i64 4
  %659 = bitcast i32* %658 to <4 x i32>*
  store <4 x i32> %655, <4 x i32>* %659, align 4, !tbaa !13, !alias.scope !243, !noalias !245
  %index.next1992 = add i64 %index1991, 8
  %660 = icmp eq i64 %index.next1992, %n.vec1972
  br i1 %660, label %middle.block1967, label %vector.body1966, !llvm.loop !246

middle.block1967:                                 ; preds = %vector.body1966
  %cmp.n1994 = icmp eq i32 %645, 0
  br i1 %cmp.n1994, label %for.end358, label %for.body348.preheader2155

for.body348.preheader2155:                        ; preds = %middle.block1967, %vector.memcheck1989, %min.iters.checked1970, %for.body348.preheader
  %indvars.iv885.ph = phi i64 [ 0, %vector.memcheck1989 ], [ 0, %min.iters.checked1970 ], [ 0, %for.body348.preheader ], [ %n.vec1972, %middle.block1967 ]
  %661 = sub nsw i64 %wide.trip.count967, %indvars.iv885.ph
  %662 = add nsw i64 %wide.trip.count967, -1
  %663 = sub nsw i64 %662, %indvars.iv885.ph
  %xtraiter2185 = and i64 %661, 3
  %lcmp.mod2186 = icmp eq i64 %xtraiter2185, 0
  br i1 %lcmp.mod2186, label %for.body348.prol.loopexit, label %for.body348.prol.preheader

for.body348.prol.preheader:                       ; preds = %for.body348.preheader2155
  br label %for.body348.prol

for.body348.prol:                                 ; preds = %for.body348.prol, %for.body348.prol.preheader
  %indvars.iv885.prol = phi i64 [ %indvars.iv.next886.prol, %for.body348.prol ], [ %indvars.iv885.ph, %for.body348.prol.preheader ]
  %prol.iter2187 = phi i64 [ %prol.iter2187.sub, %for.body348.prol ], [ %xtraiter2185, %for.body348.prol.preheader ]
  %arrayidx350.prol = getelementptr inbounds i32, i32* %519, i64 %indvars.iv885.prol
  %664 = load i32, i32* %arrayidx350.prol, align 4, !tbaa !13
  %arrayidx352.prol = getelementptr inbounds i32, i32* %581, i64 %indvars.iv885.prol
  %665 = load i32, i32* %arrayidx352.prol, align 4, !tbaa !13
  %add353.prol = add nsw i32 %665, %664
  %arrayidx355.prol = getelementptr inbounds i32, i32* %644, i64 %indvars.iv885.prol
  store i32 %add353.prol, i32* %arrayidx355.prol, align 4, !tbaa !13
  %indvars.iv.next886.prol = add nuw nsw i64 %indvars.iv885.prol, 1
  %prol.iter2187.sub = add i64 %prol.iter2187, -1
  %prol.iter2187.cmp = icmp eq i64 %prol.iter2187.sub, 0
  br i1 %prol.iter2187.cmp, label %for.body348.prol.loopexit.unr-lcssa, label %for.body348.prol, !llvm.loop !247

for.body348.prol.loopexit.unr-lcssa:              ; preds = %for.body348.prol
  br label %for.body348.prol.loopexit

for.body348.prol.loopexit:                        ; preds = %for.body348.preheader2155, %for.body348.prol.loopexit.unr-lcssa
  %indvars.iv885.unr = phi i64 [ %indvars.iv885.ph, %for.body348.preheader2155 ], [ %indvars.iv.next886.prol, %for.body348.prol.loopexit.unr-lcssa ]
  %666 = icmp ult i64 %663, 3
  br i1 %666, label %for.end358.loopexit, label %for.body348.preheader2155.new

for.body348.preheader2155.new:                    ; preds = %for.body348.prol.loopexit
  br label %for.body348

for.body348:                                      ; preds = %for.body348, %for.body348.preheader2155.new
  %indvars.iv885 = phi i64 [ %indvars.iv885.unr, %for.body348.preheader2155.new ], [ %indvars.iv.next886.3, %for.body348 ]
  %arrayidx350 = getelementptr inbounds i32, i32* %519, i64 %indvars.iv885
  %667 = load i32, i32* %arrayidx350, align 4, !tbaa !13
  %arrayidx352 = getelementptr inbounds i32, i32* %581, i64 %indvars.iv885
  %668 = load i32, i32* %arrayidx352, align 4, !tbaa !13
  %add353 = add nsw i32 %668, %667
  %arrayidx355 = getelementptr inbounds i32, i32* %644, i64 %indvars.iv885
  store i32 %add353, i32* %arrayidx355, align 4, !tbaa !13
  %indvars.iv.next886 = add nuw nsw i64 %indvars.iv885, 1
  %arrayidx350.1 = getelementptr inbounds i32, i32* %519, i64 %indvars.iv.next886
  %669 = load i32, i32* %arrayidx350.1, align 4, !tbaa !13
  %arrayidx352.1 = getelementptr inbounds i32, i32* %581, i64 %indvars.iv.next886
  %670 = load i32, i32* %arrayidx352.1, align 4, !tbaa !13
  %add353.1 = add nsw i32 %670, %669
  %arrayidx355.1 = getelementptr inbounds i32, i32* %644, i64 %indvars.iv.next886
  store i32 %add353.1, i32* %arrayidx355.1, align 4, !tbaa !13
  %indvars.iv.next886.1 = add nsw i64 %indvars.iv885, 2
  %arrayidx350.2 = getelementptr inbounds i32, i32* %519, i64 %indvars.iv.next886.1
  %671 = load i32, i32* %arrayidx350.2, align 4, !tbaa !13
  %arrayidx352.2 = getelementptr inbounds i32, i32* %581, i64 %indvars.iv.next886.1
  %672 = load i32, i32* %arrayidx352.2, align 4, !tbaa !13
  %add353.2 = add nsw i32 %672, %671
  %arrayidx355.2 = getelementptr inbounds i32, i32* %644, i64 %indvars.iv.next886.1
  store i32 %add353.2, i32* %arrayidx355.2, align 4, !tbaa !13
  %indvars.iv.next886.2 = add nsw i64 %indvars.iv885, 3
  %arrayidx350.3 = getelementptr inbounds i32, i32* %519, i64 %indvars.iv.next886.2
  %673 = load i32, i32* %arrayidx350.3, align 4, !tbaa !13
  %arrayidx352.3 = getelementptr inbounds i32, i32* %581, i64 %indvars.iv.next886.2
  %674 = load i32, i32* %arrayidx352.3, align 4, !tbaa !13
  %add353.3 = add nsw i32 %674, %673
  %arrayidx355.3 = getelementptr inbounds i32, i32* %644, i64 %indvars.iv.next886.2
  store i32 %add353.3, i32* %arrayidx355.3, align 4, !tbaa !13
  %indvars.iv.next886.3 = add nsw i64 %indvars.iv885, 4
  %exitcond888.3 = icmp eq i64 %indvars.iv.next886.3, %wide.trip.count887
  br i1 %exitcond888.3, label %for.end358.loopexit.unr-lcssa, label %for.body348, !llvm.loop !248

for.end358.loopexit.unr-lcssa:                    ; preds = %for.body348
  br label %for.end358.loopexit

for.end358.loopexit:                              ; preds = %for.body348.prol.loopexit, %for.end358.loopexit.unr-lcssa
  br label %for.end358

for.end358:                                       ; preds = %for.end358.loopexit, %middle.block1967
  %add.ptr359 = getelementptr inbounds i32*, i32** %643, i64 2
  %675 = load i32*, i32** %add.ptr359, align 8, !tbaa !1
  br i1 %cmp871, label %for.body364.preheader, label %for.end438

for.body364.preheader:                            ; preds = %for.end358
  %wide.trip.count883 = zext i32 %max_pos to i64
  %min.iters.check2006 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check2006, label %for.body364.preheader2154, label %min.iters.checked2007

min.iters.checked2007:                            ; preds = %for.body364.preheader
  %676 = and i32 %max_pos, 7
  %n.mod.vf2008 = zext i32 %676 to i64
  %n.vec2009 = sub nsw i64 %wide.trip.count967, %n.mod.vf2008
  %cmp.zero2010 = icmp eq i64 %n.vec2009, 0
  br i1 %cmp.zero2010, label %for.body364.preheader2154, label %vector.memcheck2026

vector.memcheck2026:                              ; preds = %min.iters.checked2007
  %scevgep2012 = getelementptr i32, i32* %675, i64 %wide.trip.count967
  %scevgep2014 = getelementptr i32, i32* %550, i64 %wide.trip.count967
  %scevgep2016 = getelementptr i32, i32* %612, i64 %wide.trip.count967
  %bound02018 = icmp ult i32* %675, %scevgep2014
  %bound12019 = icmp ult i32* %550, %scevgep2012
  %found.conflict2020 = and i1 %bound02018, %bound12019
  %bound02021 = icmp ult i32* %675, %scevgep2016
  %bound12022 = icmp ult i32* %612, %scevgep2012
  %found.conflict2023 = and i1 %bound02021, %bound12022
  %conflict.rdx2024 = or i1 %found.conflict2020, %found.conflict2023
  br i1 %conflict.rdx2024, label %for.body364.preheader2154, label %vector.body2003.preheader

vector.body2003.preheader:                        ; preds = %vector.memcheck2026
  br label %vector.body2003

vector.body2003:                                  ; preds = %vector.body2003.preheader, %vector.body2003
  %index2028 = phi i64 [ %index.next2029, %vector.body2003 ], [ 0, %vector.body2003.preheader ]
  %677 = getelementptr inbounds i32, i32* %550, i64 %index2028
  %678 = bitcast i32* %677 to <4 x i32>*
  %wide.load2036 = load <4 x i32>, <4 x i32>* %678, align 4, !tbaa !13, !alias.scope !249
  %679 = getelementptr i32, i32* %677, i64 4
  %680 = bitcast i32* %679 to <4 x i32>*
  %wide.load2037 = load <4 x i32>, <4 x i32>* %680, align 4, !tbaa !13, !alias.scope !249
  %681 = getelementptr inbounds i32, i32* %612, i64 %index2028
  %682 = bitcast i32* %681 to <4 x i32>*
  %wide.load2038 = load <4 x i32>, <4 x i32>* %682, align 4, !tbaa !13, !alias.scope !252
  %683 = getelementptr i32, i32* %681, i64 4
  %684 = bitcast i32* %683 to <4 x i32>*
  %wide.load2039 = load <4 x i32>, <4 x i32>* %684, align 4, !tbaa !13, !alias.scope !252
  %685 = add nsw <4 x i32> %wide.load2038, %wide.load2036
  %686 = add nsw <4 x i32> %wide.load2039, %wide.load2037
  %687 = getelementptr inbounds i32, i32* %675, i64 %index2028
  %688 = bitcast i32* %687 to <4 x i32>*
  store <4 x i32> %685, <4 x i32>* %688, align 4, !tbaa !13, !alias.scope !254, !noalias !256
  %689 = getelementptr i32, i32* %687, i64 4
  %690 = bitcast i32* %689 to <4 x i32>*
  store <4 x i32> %686, <4 x i32>* %690, align 4, !tbaa !13, !alias.scope !254, !noalias !256
  %index.next2029 = add i64 %index2028, 8
  %691 = icmp eq i64 %index.next2029, %n.vec2009
  br i1 %691, label %middle.block2004, label %vector.body2003, !llvm.loop !257

middle.block2004:                                 ; preds = %vector.body2003
  %cmp.n2031 = icmp eq i32 %676, 0
  br i1 %cmp.n2031, label %for.end374, label %for.body364.preheader2154

for.body364.preheader2154:                        ; preds = %middle.block2004, %vector.memcheck2026, %min.iters.checked2007, %for.body364.preheader
  %indvars.iv881.ph = phi i64 [ 0, %vector.memcheck2026 ], [ 0, %min.iters.checked2007 ], [ 0, %for.body364.preheader ], [ %n.vec2009, %middle.block2004 ]
  %692 = sub nsw i64 %wide.trip.count967, %indvars.iv881.ph
  %693 = add nsw i64 %wide.trip.count967, -1
  %694 = sub nsw i64 %693, %indvars.iv881.ph
  %xtraiter2182 = and i64 %692, 3
  %lcmp.mod2183 = icmp eq i64 %xtraiter2182, 0
  br i1 %lcmp.mod2183, label %for.body364.prol.loopexit, label %for.body364.prol.preheader

for.body364.prol.preheader:                       ; preds = %for.body364.preheader2154
  br label %for.body364.prol

for.body364.prol:                                 ; preds = %for.body364.prol, %for.body364.prol.preheader
  %indvars.iv881.prol = phi i64 [ %indvars.iv.next882.prol, %for.body364.prol ], [ %indvars.iv881.ph, %for.body364.prol.preheader ]
  %prol.iter2184 = phi i64 [ %prol.iter2184.sub, %for.body364.prol ], [ %xtraiter2182, %for.body364.prol.preheader ]
  %arrayidx366.prol = getelementptr inbounds i32, i32* %550, i64 %indvars.iv881.prol
  %695 = load i32, i32* %arrayidx366.prol, align 4, !tbaa !13
  %arrayidx368.prol = getelementptr inbounds i32, i32* %612, i64 %indvars.iv881.prol
  %696 = load i32, i32* %arrayidx368.prol, align 4, !tbaa !13
  %add369.prol = add nsw i32 %696, %695
  %arrayidx371.prol = getelementptr inbounds i32, i32* %675, i64 %indvars.iv881.prol
  store i32 %add369.prol, i32* %arrayidx371.prol, align 4, !tbaa !13
  %indvars.iv.next882.prol = add nuw nsw i64 %indvars.iv881.prol, 1
  %prol.iter2184.sub = add i64 %prol.iter2184, -1
  %prol.iter2184.cmp = icmp eq i64 %prol.iter2184.sub, 0
  br i1 %prol.iter2184.cmp, label %for.body364.prol.loopexit.unr-lcssa, label %for.body364.prol, !llvm.loop !258

for.body364.prol.loopexit.unr-lcssa:              ; preds = %for.body364.prol
  br label %for.body364.prol.loopexit

for.body364.prol.loopexit:                        ; preds = %for.body364.preheader2154, %for.body364.prol.loopexit.unr-lcssa
  %indvars.iv881.unr = phi i64 [ %indvars.iv881.ph, %for.body364.preheader2154 ], [ %indvars.iv.next882.prol, %for.body364.prol.loopexit.unr-lcssa ]
  %697 = icmp ult i64 %694, 3
  br i1 %697, label %for.end374.loopexit, label %for.body364.preheader2154.new

for.body364.preheader2154.new:                    ; preds = %for.body364.prol.loopexit
  br label %for.body364

for.body364:                                      ; preds = %for.body364, %for.body364.preheader2154.new
  %indvars.iv881 = phi i64 [ %indvars.iv881.unr, %for.body364.preheader2154.new ], [ %indvars.iv.next882.3, %for.body364 ]
  %arrayidx366 = getelementptr inbounds i32, i32* %550, i64 %indvars.iv881
  %698 = load i32, i32* %arrayidx366, align 4, !tbaa !13
  %arrayidx368 = getelementptr inbounds i32, i32* %612, i64 %indvars.iv881
  %699 = load i32, i32* %arrayidx368, align 4, !tbaa !13
  %add369 = add nsw i32 %699, %698
  %arrayidx371 = getelementptr inbounds i32, i32* %675, i64 %indvars.iv881
  store i32 %add369, i32* %arrayidx371, align 4, !tbaa !13
  %indvars.iv.next882 = add nuw nsw i64 %indvars.iv881, 1
  %arrayidx366.1 = getelementptr inbounds i32, i32* %550, i64 %indvars.iv.next882
  %700 = load i32, i32* %arrayidx366.1, align 4, !tbaa !13
  %arrayidx368.1 = getelementptr inbounds i32, i32* %612, i64 %indvars.iv.next882
  %701 = load i32, i32* %arrayidx368.1, align 4, !tbaa !13
  %add369.1 = add nsw i32 %701, %700
  %arrayidx371.1 = getelementptr inbounds i32, i32* %675, i64 %indvars.iv.next882
  store i32 %add369.1, i32* %arrayidx371.1, align 4, !tbaa !13
  %indvars.iv.next882.1 = add nsw i64 %indvars.iv881, 2
  %arrayidx366.2 = getelementptr inbounds i32, i32* %550, i64 %indvars.iv.next882.1
  %702 = load i32, i32* %arrayidx366.2, align 4, !tbaa !13
  %arrayidx368.2 = getelementptr inbounds i32, i32* %612, i64 %indvars.iv.next882.1
  %703 = load i32, i32* %arrayidx368.2, align 4, !tbaa !13
  %add369.2 = add nsw i32 %703, %702
  %arrayidx371.2 = getelementptr inbounds i32, i32* %675, i64 %indvars.iv.next882.1
  store i32 %add369.2, i32* %arrayidx371.2, align 4, !tbaa !13
  %indvars.iv.next882.2 = add nsw i64 %indvars.iv881, 3
  %arrayidx366.3 = getelementptr inbounds i32, i32* %550, i64 %indvars.iv.next882.2
  %704 = load i32, i32* %arrayidx366.3, align 4, !tbaa !13
  %arrayidx368.3 = getelementptr inbounds i32, i32* %612, i64 %indvars.iv.next882.2
  %705 = load i32, i32* %arrayidx368.3, align 4, !tbaa !13
  %add369.3 = add nsw i32 %705, %704
  %arrayidx371.3 = getelementptr inbounds i32, i32* %675, i64 %indvars.iv.next882.2
  store i32 %add369.3, i32* %arrayidx371.3, align 4, !tbaa !13
  %indvars.iv.next882.3 = add nsw i64 %indvars.iv881, 4
  %exitcond884.3 = icmp eq i64 %indvars.iv.next882.3, %wide.trip.count883
  br i1 %exitcond884.3, label %for.end374.loopexit.unr-lcssa, label %for.body364, !llvm.loop !259

for.end374.loopexit.unr-lcssa:                    ; preds = %for.body364
  br label %for.end374.loopexit

for.end374.loopexit:                              ; preds = %for.body364.prol.loopexit, %for.end374.loopexit.unr-lcssa
  br label %for.end374

for.end374:                                       ; preds = %for.end374.loopexit, %middle.block2004
  %arrayidx379 = getelementptr inbounds i32**, i32*** %2, i64 2
  %706 = load i32**, i32*** %arrayidx379, align 8, !tbaa !1
  %707 = load i32*, i32** %706, align 8, !tbaa !1
  br i1 %cmp871, label %for.body388.preheader, label %for.end438

for.body388.preheader:                            ; preds = %for.end374
  %wide.trip.count879 = zext i32 %max_pos to i64
  %min.iters.check2043 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check2043, label %for.body388.preheader2153, label %min.iters.checked2044

min.iters.checked2044:                            ; preds = %for.body388.preheader
  %708 = and i32 %max_pos, 7
  %n.mod.vf2045 = zext i32 %708 to i64
  %n.vec2046 = sub nsw i64 %wide.trip.count967, %n.mod.vf2045
  %cmp.zero2047 = icmp eq i64 %n.vec2046, 0
  br i1 %cmp.zero2047, label %for.body388.preheader2153, label %vector.memcheck2063

vector.memcheck2063:                              ; preds = %min.iters.checked2044
  %scevgep2049 = getelementptr i32, i32* %707, i64 %wide.trip.count967
  %scevgep2051 = getelementptr i32, i32* %519, i64 %wide.trip.count967
  %scevgep2053 = getelementptr i32, i32* %550, i64 %wide.trip.count967
  %bound02055 = icmp ult i32* %707, %scevgep2051
  %bound12056 = icmp ult i32* %519, %scevgep2049
  %found.conflict2057 = and i1 %bound02055, %bound12056
  %bound02058 = icmp ult i32* %707, %scevgep2053
  %bound12059 = icmp ult i32* %550, %scevgep2049
  %found.conflict2060 = and i1 %bound02058, %bound12059
  %conflict.rdx2061 = or i1 %found.conflict2057, %found.conflict2060
  br i1 %conflict.rdx2061, label %for.body388.preheader2153, label %vector.body2040.preheader

vector.body2040.preheader:                        ; preds = %vector.memcheck2063
  br label %vector.body2040

vector.body2040:                                  ; preds = %vector.body2040.preheader, %vector.body2040
  %index2065 = phi i64 [ %index.next2066, %vector.body2040 ], [ 0, %vector.body2040.preheader ]
  %709 = getelementptr inbounds i32, i32* %519, i64 %index2065
  %710 = bitcast i32* %709 to <4 x i32>*
  %wide.load2073 = load <4 x i32>, <4 x i32>* %710, align 4, !tbaa !13, !alias.scope !260
  %711 = getelementptr i32, i32* %709, i64 4
  %712 = bitcast i32* %711 to <4 x i32>*
  %wide.load2074 = load <4 x i32>, <4 x i32>* %712, align 4, !tbaa !13, !alias.scope !260
  %713 = getelementptr inbounds i32, i32* %550, i64 %index2065
  %714 = bitcast i32* %713 to <4 x i32>*
  %wide.load2075 = load <4 x i32>, <4 x i32>* %714, align 4, !tbaa !13, !alias.scope !263
  %715 = getelementptr i32, i32* %713, i64 4
  %716 = bitcast i32* %715 to <4 x i32>*
  %wide.load2076 = load <4 x i32>, <4 x i32>* %716, align 4, !tbaa !13, !alias.scope !263
  %717 = add nsw <4 x i32> %wide.load2075, %wide.load2073
  %718 = add nsw <4 x i32> %wide.load2076, %wide.load2074
  %719 = getelementptr inbounds i32, i32* %707, i64 %index2065
  %720 = bitcast i32* %719 to <4 x i32>*
  store <4 x i32> %717, <4 x i32>* %720, align 4, !tbaa !13, !alias.scope !265, !noalias !267
  %721 = getelementptr i32, i32* %719, i64 4
  %722 = bitcast i32* %721 to <4 x i32>*
  store <4 x i32> %718, <4 x i32>* %722, align 4, !tbaa !13, !alias.scope !265, !noalias !267
  %index.next2066 = add i64 %index2065, 8
  %723 = icmp eq i64 %index.next2066, %n.vec2046
  br i1 %723, label %middle.block2041, label %vector.body2040, !llvm.loop !268

middle.block2041:                                 ; preds = %vector.body2040
  %cmp.n2068 = icmp eq i32 %708, 0
  br i1 %cmp.n2068, label %for.end398, label %for.body388.preheader2153

for.body388.preheader2153:                        ; preds = %middle.block2041, %vector.memcheck2063, %min.iters.checked2044, %for.body388.preheader
  %indvars.iv877.ph = phi i64 [ 0, %vector.memcheck2063 ], [ 0, %min.iters.checked2044 ], [ 0, %for.body388.preheader ], [ %n.vec2046, %middle.block2041 ]
  %724 = sub nsw i64 %wide.trip.count967, %indvars.iv877.ph
  %725 = add nsw i64 %wide.trip.count967, -1
  %726 = sub nsw i64 %725, %indvars.iv877.ph
  %xtraiter2179 = and i64 %724, 3
  %lcmp.mod2180 = icmp eq i64 %xtraiter2179, 0
  br i1 %lcmp.mod2180, label %for.body388.prol.loopexit, label %for.body388.prol.preheader

for.body388.prol.preheader:                       ; preds = %for.body388.preheader2153
  br label %for.body388.prol

for.body388.prol:                                 ; preds = %for.body388.prol, %for.body388.prol.preheader
  %indvars.iv877.prol = phi i64 [ %indvars.iv.next878.prol, %for.body388.prol ], [ %indvars.iv877.ph, %for.body388.prol.preheader ]
  %prol.iter2181 = phi i64 [ %prol.iter2181.sub, %for.body388.prol ], [ %xtraiter2179, %for.body388.prol.preheader ]
  %arrayidx390.prol = getelementptr inbounds i32, i32* %519, i64 %indvars.iv877.prol
  %727 = load i32, i32* %arrayidx390.prol, align 4, !tbaa !13
  %arrayidx392.prol = getelementptr inbounds i32, i32* %550, i64 %indvars.iv877.prol
  %728 = load i32, i32* %arrayidx392.prol, align 4, !tbaa !13
  %add393.prol = add nsw i32 %728, %727
  %arrayidx395.prol = getelementptr inbounds i32, i32* %707, i64 %indvars.iv877.prol
  store i32 %add393.prol, i32* %arrayidx395.prol, align 4, !tbaa !13
  %indvars.iv.next878.prol = add nuw nsw i64 %indvars.iv877.prol, 1
  %prol.iter2181.sub = add i64 %prol.iter2181, -1
  %prol.iter2181.cmp = icmp eq i64 %prol.iter2181.sub, 0
  br i1 %prol.iter2181.cmp, label %for.body388.prol.loopexit.unr-lcssa, label %for.body388.prol, !llvm.loop !269

for.body388.prol.loopexit.unr-lcssa:              ; preds = %for.body388.prol
  br label %for.body388.prol.loopexit

for.body388.prol.loopexit:                        ; preds = %for.body388.preheader2153, %for.body388.prol.loopexit.unr-lcssa
  %indvars.iv877.unr = phi i64 [ %indvars.iv877.ph, %for.body388.preheader2153 ], [ %indvars.iv.next878.prol, %for.body388.prol.loopexit.unr-lcssa ]
  %729 = icmp ult i64 %726, 3
  br i1 %729, label %for.end398.loopexit, label %for.body388.preheader2153.new

for.body388.preheader2153.new:                    ; preds = %for.body388.prol.loopexit
  br label %for.body388

for.body388:                                      ; preds = %for.body388, %for.body388.preheader2153.new
  %indvars.iv877 = phi i64 [ %indvars.iv877.unr, %for.body388.preheader2153.new ], [ %indvars.iv.next878.3, %for.body388 ]
  %arrayidx390 = getelementptr inbounds i32, i32* %519, i64 %indvars.iv877
  %730 = load i32, i32* %arrayidx390, align 4, !tbaa !13
  %arrayidx392 = getelementptr inbounds i32, i32* %550, i64 %indvars.iv877
  %731 = load i32, i32* %arrayidx392, align 4, !tbaa !13
  %add393 = add nsw i32 %731, %730
  %arrayidx395 = getelementptr inbounds i32, i32* %707, i64 %indvars.iv877
  store i32 %add393, i32* %arrayidx395, align 4, !tbaa !13
  %indvars.iv.next878 = add nuw nsw i64 %indvars.iv877, 1
  %arrayidx390.1 = getelementptr inbounds i32, i32* %519, i64 %indvars.iv.next878
  %732 = load i32, i32* %arrayidx390.1, align 4, !tbaa !13
  %arrayidx392.1 = getelementptr inbounds i32, i32* %550, i64 %indvars.iv.next878
  %733 = load i32, i32* %arrayidx392.1, align 4, !tbaa !13
  %add393.1 = add nsw i32 %733, %732
  %arrayidx395.1 = getelementptr inbounds i32, i32* %707, i64 %indvars.iv.next878
  store i32 %add393.1, i32* %arrayidx395.1, align 4, !tbaa !13
  %indvars.iv.next878.1 = add nsw i64 %indvars.iv877, 2
  %arrayidx390.2 = getelementptr inbounds i32, i32* %519, i64 %indvars.iv.next878.1
  %734 = load i32, i32* %arrayidx390.2, align 4, !tbaa !13
  %arrayidx392.2 = getelementptr inbounds i32, i32* %550, i64 %indvars.iv.next878.1
  %735 = load i32, i32* %arrayidx392.2, align 4, !tbaa !13
  %add393.2 = add nsw i32 %735, %734
  %arrayidx395.2 = getelementptr inbounds i32, i32* %707, i64 %indvars.iv.next878.1
  store i32 %add393.2, i32* %arrayidx395.2, align 4, !tbaa !13
  %indvars.iv.next878.2 = add nsw i64 %indvars.iv877, 3
  %arrayidx390.3 = getelementptr inbounds i32, i32* %519, i64 %indvars.iv.next878.2
  %736 = load i32, i32* %arrayidx390.3, align 4, !tbaa !13
  %arrayidx392.3 = getelementptr inbounds i32, i32* %550, i64 %indvars.iv.next878.2
  %737 = load i32, i32* %arrayidx392.3, align 4, !tbaa !13
  %add393.3 = add nsw i32 %737, %736
  %arrayidx395.3 = getelementptr inbounds i32, i32* %707, i64 %indvars.iv.next878.2
  store i32 %add393.3, i32* %arrayidx395.3, align 4, !tbaa !13
  %indvars.iv.next878.3 = add nsw i64 %indvars.iv877, 4
  %exitcond880.3 = icmp eq i64 %indvars.iv.next878.3, %wide.trip.count879
  br i1 %exitcond880.3, label %for.end398.loopexit.unr-lcssa, label %for.body388, !llvm.loop !270

for.end398.loopexit.unr-lcssa:                    ; preds = %for.body388
  br label %for.end398.loopexit

for.end398.loopexit:                              ; preds = %for.body388.prol.loopexit, %for.end398.loopexit.unr-lcssa
  br label %for.end398

for.end398:                                       ; preds = %for.end398.loopexit, %middle.block2041
  %add.ptr399 = getelementptr inbounds i32*, i32** %706, i64 8
  %738 = load i32*, i32** %add.ptr399, align 8, !tbaa !1
  br i1 %cmp871, label %for.body404.preheader, label %for.end438

for.body404.preheader:                            ; preds = %for.end398
  %wide.trip.count875 = zext i32 %max_pos to i64
  %min.iters.check2080 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check2080, label %for.body404.preheader2152, label %min.iters.checked2081

min.iters.checked2081:                            ; preds = %for.body404.preheader
  %739 = and i32 %max_pos, 7
  %n.mod.vf2082 = zext i32 %739 to i64
  %n.vec2083 = sub nsw i64 %wide.trip.count967, %n.mod.vf2082
  %cmp.zero2084 = icmp eq i64 %n.vec2083, 0
  br i1 %cmp.zero2084, label %for.body404.preheader2152, label %vector.memcheck2100

vector.memcheck2100:                              ; preds = %min.iters.checked2081
  %scevgep2086 = getelementptr i32, i32* %738, i64 %wide.trip.count967
  %scevgep2088 = getelementptr i32, i32* %581, i64 %wide.trip.count967
  %scevgep2090 = getelementptr i32, i32* %612, i64 %wide.trip.count967
  %bound02092 = icmp ult i32* %738, %scevgep2088
  %bound12093 = icmp ult i32* %581, %scevgep2086
  %found.conflict2094 = and i1 %bound02092, %bound12093
  %bound02095 = icmp ult i32* %738, %scevgep2090
  %bound12096 = icmp ult i32* %612, %scevgep2086
  %found.conflict2097 = and i1 %bound02095, %bound12096
  %conflict.rdx2098 = or i1 %found.conflict2094, %found.conflict2097
  br i1 %conflict.rdx2098, label %for.body404.preheader2152, label %vector.body2077.preheader

vector.body2077.preheader:                        ; preds = %vector.memcheck2100
  br label %vector.body2077

vector.body2077:                                  ; preds = %vector.body2077.preheader, %vector.body2077
  %index2102 = phi i64 [ %index.next2103, %vector.body2077 ], [ 0, %vector.body2077.preheader ]
  %740 = getelementptr inbounds i32, i32* %581, i64 %index2102
  %741 = bitcast i32* %740 to <4 x i32>*
  %wide.load2110 = load <4 x i32>, <4 x i32>* %741, align 4, !tbaa !13, !alias.scope !271
  %742 = getelementptr i32, i32* %740, i64 4
  %743 = bitcast i32* %742 to <4 x i32>*
  %wide.load2111 = load <4 x i32>, <4 x i32>* %743, align 4, !tbaa !13, !alias.scope !271
  %744 = getelementptr inbounds i32, i32* %612, i64 %index2102
  %745 = bitcast i32* %744 to <4 x i32>*
  %wide.load2112 = load <4 x i32>, <4 x i32>* %745, align 4, !tbaa !13, !alias.scope !274
  %746 = getelementptr i32, i32* %744, i64 4
  %747 = bitcast i32* %746 to <4 x i32>*
  %wide.load2113 = load <4 x i32>, <4 x i32>* %747, align 4, !tbaa !13, !alias.scope !274
  %748 = add nsw <4 x i32> %wide.load2112, %wide.load2110
  %749 = add nsw <4 x i32> %wide.load2113, %wide.load2111
  %750 = getelementptr inbounds i32, i32* %738, i64 %index2102
  %751 = bitcast i32* %750 to <4 x i32>*
  store <4 x i32> %748, <4 x i32>* %751, align 4, !tbaa !13, !alias.scope !276, !noalias !278
  %752 = getelementptr i32, i32* %750, i64 4
  %753 = bitcast i32* %752 to <4 x i32>*
  store <4 x i32> %749, <4 x i32>* %753, align 4, !tbaa !13, !alias.scope !276, !noalias !278
  %index.next2103 = add i64 %index2102, 8
  %754 = icmp eq i64 %index.next2103, %n.vec2083
  br i1 %754, label %middle.block2078, label %vector.body2077, !llvm.loop !279

middle.block2078:                                 ; preds = %vector.body2077
  %cmp.n2105 = icmp eq i32 %739, 0
  br i1 %cmp.n2105, label %for.end414, label %for.body404.preheader2152

for.body404.preheader2152:                        ; preds = %middle.block2078, %vector.memcheck2100, %min.iters.checked2081, %for.body404.preheader
  %indvars.iv873.ph = phi i64 [ 0, %vector.memcheck2100 ], [ 0, %min.iters.checked2081 ], [ 0, %for.body404.preheader ], [ %n.vec2083, %middle.block2078 ]
  %755 = sub nsw i64 %wide.trip.count967, %indvars.iv873.ph
  %756 = add nsw i64 %wide.trip.count967, -1
  %757 = sub nsw i64 %756, %indvars.iv873.ph
  %xtraiter2176 = and i64 %755, 3
  %lcmp.mod2177 = icmp eq i64 %xtraiter2176, 0
  br i1 %lcmp.mod2177, label %for.body404.prol.loopexit, label %for.body404.prol.preheader

for.body404.prol.preheader:                       ; preds = %for.body404.preheader2152
  br label %for.body404.prol

for.body404.prol:                                 ; preds = %for.body404.prol, %for.body404.prol.preheader
  %indvars.iv873.prol = phi i64 [ %indvars.iv.next874.prol, %for.body404.prol ], [ %indvars.iv873.ph, %for.body404.prol.preheader ]
  %prol.iter2178 = phi i64 [ %prol.iter2178.sub, %for.body404.prol ], [ %xtraiter2176, %for.body404.prol.preheader ]
  %arrayidx406.prol = getelementptr inbounds i32, i32* %581, i64 %indvars.iv873.prol
  %758 = load i32, i32* %arrayidx406.prol, align 4, !tbaa !13
  %arrayidx408.prol = getelementptr inbounds i32, i32* %612, i64 %indvars.iv873.prol
  %759 = load i32, i32* %arrayidx408.prol, align 4, !tbaa !13
  %add409.prol = add nsw i32 %759, %758
  %arrayidx411.prol = getelementptr inbounds i32, i32* %738, i64 %indvars.iv873.prol
  store i32 %add409.prol, i32* %arrayidx411.prol, align 4, !tbaa !13
  %indvars.iv.next874.prol = add nuw nsw i64 %indvars.iv873.prol, 1
  %prol.iter2178.sub = add i64 %prol.iter2178, -1
  %prol.iter2178.cmp = icmp eq i64 %prol.iter2178.sub, 0
  br i1 %prol.iter2178.cmp, label %for.body404.prol.loopexit.unr-lcssa, label %for.body404.prol, !llvm.loop !280

for.body404.prol.loopexit.unr-lcssa:              ; preds = %for.body404.prol
  br label %for.body404.prol.loopexit

for.body404.prol.loopexit:                        ; preds = %for.body404.preheader2152, %for.body404.prol.loopexit.unr-lcssa
  %indvars.iv873.unr = phi i64 [ %indvars.iv873.ph, %for.body404.preheader2152 ], [ %indvars.iv.next874.prol, %for.body404.prol.loopexit.unr-lcssa ]
  %760 = icmp ult i64 %757, 3
  br i1 %760, label %for.end414.loopexit, label %for.body404.preheader2152.new

for.body404.preheader2152.new:                    ; preds = %for.body404.prol.loopexit
  br label %for.body404

for.body404:                                      ; preds = %for.body404, %for.body404.preheader2152.new
  %indvars.iv873 = phi i64 [ %indvars.iv873.unr, %for.body404.preheader2152.new ], [ %indvars.iv.next874.3, %for.body404 ]
  %arrayidx406 = getelementptr inbounds i32, i32* %581, i64 %indvars.iv873
  %761 = load i32, i32* %arrayidx406, align 4, !tbaa !13
  %arrayidx408 = getelementptr inbounds i32, i32* %612, i64 %indvars.iv873
  %762 = load i32, i32* %arrayidx408, align 4, !tbaa !13
  %add409 = add nsw i32 %762, %761
  %arrayidx411 = getelementptr inbounds i32, i32* %738, i64 %indvars.iv873
  store i32 %add409, i32* %arrayidx411, align 4, !tbaa !13
  %indvars.iv.next874 = add nuw nsw i64 %indvars.iv873, 1
  %arrayidx406.1 = getelementptr inbounds i32, i32* %581, i64 %indvars.iv.next874
  %763 = load i32, i32* %arrayidx406.1, align 4, !tbaa !13
  %arrayidx408.1 = getelementptr inbounds i32, i32* %612, i64 %indvars.iv.next874
  %764 = load i32, i32* %arrayidx408.1, align 4, !tbaa !13
  %add409.1 = add nsw i32 %764, %763
  %arrayidx411.1 = getelementptr inbounds i32, i32* %738, i64 %indvars.iv.next874
  store i32 %add409.1, i32* %arrayidx411.1, align 4, !tbaa !13
  %indvars.iv.next874.1 = add nsw i64 %indvars.iv873, 2
  %arrayidx406.2 = getelementptr inbounds i32, i32* %581, i64 %indvars.iv.next874.1
  %765 = load i32, i32* %arrayidx406.2, align 4, !tbaa !13
  %arrayidx408.2 = getelementptr inbounds i32, i32* %612, i64 %indvars.iv.next874.1
  %766 = load i32, i32* %arrayidx408.2, align 4, !tbaa !13
  %add409.2 = add nsw i32 %766, %765
  %arrayidx411.2 = getelementptr inbounds i32, i32* %738, i64 %indvars.iv.next874.1
  store i32 %add409.2, i32* %arrayidx411.2, align 4, !tbaa !13
  %indvars.iv.next874.2 = add nsw i64 %indvars.iv873, 3
  %arrayidx406.3 = getelementptr inbounds i32, i32* %581, i64 %indvars.iv.next874.2
  %767 = load i32, i32* %arrayidx406.3, align 4, !tbaa !13
  %arrayidx408.3 = getelementptr inbounds i32, i32* %612, i64 %indvars.iv.next874.2
  %768 = load i32, i32* %arrayidx408.3, align 4, !tbaa !13
  %add409.3 = add nsw i32 %768, %767
  %arrayidx411.3 = getelementptr inbounds i32, i32* %738, i64 %indvars.iv.next874.2
  store i32 %add409.3, i32* %arrayidx411.3, align 4, !tbaa !13
  %indvars.iv.next874.3 = add nsw i64 %indvars.iv873, 4
  %exitcond876.3 = icmp eq i64 %indvars.iv.next874.3, %wide.trip.count875
  br i1 %exitcond876.3, label %for.end414.loopexit.unr-lcssa, label %for.body404, !llvm.loop !281

for.end414.loopexit.unr-lcssa:                    ; preds = %for.body404
  br label %for.end414.loopexit

for.end414.loopexit:                              ; preds = %for.body404.prol.loopexit, %for.end414.loopexit.unr-lcssa
  br label %for.end414

for.end414:                                       ; preds = %for.end414.loopexit, %middle.block2078
  %arrayidx419 = getelementptr inbounds i32**, i32*** %2, i64 1
  %769 = load i32**, i32*** %arrayidx419, align 8, !tbaa !1
  %770 = load i32*, i32** %769, align 8, !tbaa !1
  br i1 %cmp871, label %for.body428.preheader, label %for.end438

for.body428.preheader:                            ; preds = %for.end414
  %wide.trip.count = zext i32 %max_pos to i64
  %min.iters.check2117 = icmp ult i32 %max_pos, 8
  br i1 %min.iters.check2117, label %for.body428.preheader2151, label %min.iters.checked2118

min.iters.checked2118:                            ; preds = %for.body428.preheader
  %771 = and i32 %max_pos, 7
  %n.mod.vf2119 = zext i32 %771 to i64
  %n.vec2120 = sub nsw i64 %wide.trip.count967, %n.mod.vf2119
  %cmp.zero2121 = icmp eq i64 %n.vec2120, 0
  br i1 %cmp.zero2121, label %for.body428.preheader2151, label %vector.memcheck2137

vector.memcheck2137:                              ; preds = %min.iters.checked2118
  %scevgep2123 = getelementptr i32, i32* %770, i64 %wide.trip.count967
  %scevgep2125 = getelementptr i32, i32* %644, i64 %wide.trip.count967
  %scevgep2127 = getelementptr i32, i32* %675, i64 %wide.trip.count967
  %bound02129 = icmp ult i32* %770, %scevgep2125
  %bound12130 = icmp ult i32* %644, %scevgep2123
  %found.conflict2131 = and i1 %bound02129, %bound12130
  %bound02132 = icmp ult i32* %770, %scevgep2127
  %bound12133 = icmp ult i32* %675, %scevgep2123
  %found.conflict2134 = and i1 %bound02132, %bound12133
  %conflict.rdx2135 = or i1 %found.conflict2131, %found.conflict2134
  br i1 %conflict.rdx2135, label %for.body428.preheader2151, label %vector.body2114.preheader

vector.body2114.preheader:                        ; preds = %vector.memcheck2137
  br label %vector.body2114

vector.body2114:                                  ; preds = %vector.body2114.preheader, %vector.body2114
  %index2139 = phi i64 [ %index.next2140, %vector.body2114 ], [ 0, %vector.body2114.preheader ]
  %772 = getelementptr inbounds i32, i32* %644, i64 %index2139
  %773 = bitcast i32* %772 to <4 x i32>*
  %wide.load2147 = load <4 x i32>, <4 x i32>* %773, align 4, !tbaa !13, !alias.scope !282
  %774 = getelementptr i32, i32* %772, i64 4
  %775 = bitcast i32* %774 to <4 x i32>*
  %wide.load2148 = load <4 x i32>, <4 x i32>* %775, align 4, !tbaa !13, !alias.scope !282
  %776 = getelementptr inbounds i32, i32* %675, i64 %index2139
  %777 = bitcast i32* %776 to <4 x i32>*
  %wide.load2149 = load <4 x i32>, <4 x i32>* %777, align 4, !tbaa !13, !alias.scope !285
  %778 = getelementptr i32, i32* %776, i64 4
  %779 = bitcast i32* %778 to <4 x i32>*
  %wide.load2150 = load <4 x i32>, <4 x i32>* %779, align 4, !tbaa !13, !alias.scope !285
  %780 = add nsw <4 x i32> %wide.load2149, %wide.load2147
  %781 = add nsw <4 x i32> %wide.load2150, %wide.load2148
  %782 = getelementptr inbounds i32, i32* %770, i64 %index2139
  %783 = bitcast i32* %782 to <4 x i32>*
  store <4 x i32> %780, <4 x i32>* %783, align 4, !tbaa !13, !alias.scope !287, !noalias !289
  %784 = getelementptr i32, i32* %782, i64 4
  %785 = bitcast i32* %784 to <4 x i32>*
  store <4 x i32> %781, <4 x i32>* %785, align 4, !tbaa !13, !alias.scope !287, !noalias !289
  %index.next2140 = add i64 %index2139, 8
  %786 = icmp eq i64 %index.next2140, %n.vec2120
  br i1 %786, label %middle.block2115, label %vector.body2114, !llvm.loop !290

middle.block2115:                                 ; preds = %vector.body2114
  %cmp.n2142 = icmp eq i32 %771, 0
  br i1 %cmp.n2142, label %for.end438, label %for.body428.preheader2151

for.body428.preheader2151:                        ; preds = %middle.block2115, %vector.memcheck2137, %min.iters.checked2118, %for.body428.preheader
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck2137 ], [ 0, %min.iters.checked2118 ], [ 0, %for.body428.preheader ], [ %n.vec2120, %middle.block2115 ]
  %787 = sub nsw i64 %wide.trip.count, %indvars.iv.ph
  %788 = add nsw i64 %wide.trip.count, -1
  %789 = sub nsw i64 %788, %indvars.iv.ph
  %xtraiter = and i64 %787, 3
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body428.prol.loopexit, label %for.body428.prol.preheader

for.body428.prol.preheader:                       ; preds = %for.body428.preheader2151
  br label %for.body428.prol

for.body428.prol:                                 ; preds = %for.body428.prol, %for.body428.prol.preheader
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body428.prol ], [ %indvars.iv.ph, %for.body428.prol.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body428.prol ], [ %xtraiter, %for.body428.prol.preheader ]
  %arrayidx430.prol = getelementptr inbounds i32, i32* %644, i64 %indvars.iv.prol
  %790 = load i32, i32* %arrayidx430.prol, align 4, !tbaa !13
  %arrayidx432.prol = getelementptr inbounds i32, i32* %675, i64 %indvars.iv.prol
  %791 = load i32, i32* %arrayidx432.prol, align 4, !tbaa !13
  %add433.prol = add nsw i32 %791, %790
  %arrayidx435.prol = getelementptr inbounds i32, i32* %770, i64 %indvars.iv.prol
  store i32 %add433.prol, i32* %arrayidx435.prol, align 4, !tbaa !13
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body428.prol.loopexit.unr-lcssa, label %for.body428.prol, !llvm.loop !291

for.body428.prol.loopexit.unr-lcssa:              ; preds = %for.body428.prol
  br label %for.body428.prol.loopexit

for.body428.prol.loopexit:                        ; preds = %for.body428.preheader2151, %for.body428.prol.loopexit.unr-lcssa
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body428.preheader2151 ], [ %indvars.iv.next.prol, %for.body428.prol.loopexit.unr-lcssa ]
  %792 = icmp ult i64 %789, 3
  br i1 %792, label %for.end438.loopexit, label %for.body428.preheader2151.new

for.body428.preheader2151.new:                    ; preds = %for.body428.prol.loopexit
  br label %for.body428

for.body428:                                      ; preds = %for.body428, %for.body428.preheader2151.new
  %indvars.iv = phi i64 [ %indvars.iv.unr, %for.body428.preheader2151.new ], [ %indvars.iv.next.3, %for.body428 ]
  %arrayidx430 = getelementptr inbounds i32, i32* %644, i64 %indvars.iv
  %793 = load i32, i32* %arrayidx430, align 4, !tbaa !13
  %arrayidx432 = getelementptr inbounds i32, i32* %675, i64 %indvars.iv
  %794 = load i32, i32* %arrayidx432, align 4, !tbaa !13
  %add433 = add nsw i32 %794, %793
  %arrayidx435 = getelementptr inbounds i32, i32* %770, i64 %indvars.iv
  store i32 %add433, i32* %arrayidx435, align 4, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx430.1 = getelementptr inbounds i32, i32* %644, i64 %indvars.iv.next
  %795 = load i32, i32* %arrayidx430.1, align 4, !tbaa !13
  %arrayidx432.1 = getelementptr inbounds i32, i32* %675, i64 %indvars.iv.next
  %796 = load i32, i32* %arrayidx432.1, align 4, !tbaa !13
  %add433.1 = add nsw i32 %796, %795
  %arrayidx435.1 = getelementptr inbounds i32, i32* %770, i64 %indvars.iv.next
  store i32 %add433.1, i32* %arrayidx435.1, align 4, !tbaa !13
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %arrayidx430.2 = getelementptr inbounds i32, i32* %644, i64 %indvars.iv.next.1
  %797 = load i32, i32* %arrayidx430.2, align 4, !tbaa !13
  %arrayidx432.2 = getelementptr inbounds i32, i32* %675, i64 %indvars.iv.next.1
  %798 = load i32, i32* %arrayidx432.2, align 4, !tbaa !13
  %add433.2 = add nsw i32 %798, %797
  %arrayidx435.2 = getelementptr inbounds i32, i32* %770, i64 %indvars.iv.next.1
  store i32 %add433.2, i32* %arrayidx435.2, align 4, !tbaa !13
  %indvars.iv.next.2 = add nsw i64 %indvars.iv, 3
  %arrayidx430.3 = getelementptr inbounds i32, i32* %644, i64 %indvars.iv.next.2
  %799 = load i32, i32* %arrayidx430.3, align 4, !tbaa !13
  %arrayidx432.3 = getelementptr inbounds i32, i32* %675, i64 %indvars.iv.next.2
  %800 = load i32, i32* %arrayidx432.3, align 4, !tbaa !13
  %add433.3 = add nsw i32 %800, %799
  %arrayidx435.3 = getelementptr inbounds i32, i32* %770, i64 %indvars.iv.next.2
  store i32 %add433.3, i32* %arrayidx435.3, align 4, !tbaa !13
  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.3, %wide.trip.count
  br i1 %exitcond.3, label %for.end438.loopexit.unr-lcssa, label %for.body428, !llvm.loop !292

for.end438.loopexit.unr-lcssa:                    ; preds = %for.body428
  br label %for.end438.loopexit

for.end438.loopexit:                              ; preds = %for.body428.prol.loopexit, %for.end438.loopexit.unr-lcssa
  br label %for.end438

for.end438:                                       ; preds = %for.end438.loopexit, %middle.block2115, %for.end334, %for.end302, %for.end262, %for.end94, %for.end62, %for.end30, %entry, %for.end, %for.end46, %for.end78, %for.end246, %for.end230, %for.end214, %for.end198, %for.end182, %for.end166, %for.end150, %for.end126, %for.end110, %for.end286, %for.end318, %for.end358, %for.end374, %for.end398, %for.end414
  ret void
}

; Function Attrs: nounwind uwtable
define void @SetupFastFullPelSearch(i16 signext %ref, i32 %list) local_unnamed_addr #0 {
entry:
  %pmv = alloca [2 x i16], align 2
  %orig_blocks = alloca [256 x i16], align 16
  %0 = bitcast [2 x i16]* %pmv to i8*
  call void @llvm.lifetime.start(i64 4, i8* nonnull %0) #8
  %1 = bitcast [256 x i16]* %orig_blocks to i8*
  call void @llvm.lifetime.start(i64 512, i8* nonnull %1) #8
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %orig_blocks, i64 0, i64 0
  %2 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %idxprom = sext i32 %list to i64
  %arrayidx = getelementptr inbounds i32****, i32***** %2, i64 %idxprom
  %3 = load i32****, i32***** %arrayidx, align 8, !tbaa !1
  %idxprom1 = sext i16 %ref to i64
  %arrayidx2 = getelementptr inbounds i32***, i32**** %3, i64 %idxprom1
  %4 = load i32***, i32**** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i32**, i32*** %4, i64 7
  %5 = load i32**, i32*** %arrayidx3, align 8, !tbaa !1
  %6 = load i32**, i32*** @max_search_range, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds i32*, i32** %6, i64 %idxprom
  %7 = load i32*, i32** %arrayidx5, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds i32, i32* %7, i64 %idxprom1
  %8 = load i32, i32* %arrayidx7, align 4, !tbaa !13
  %mul = shl nsw i32 %8, 1
  %add = or i32 %mul, 1
  %mul10 = mul nsw i32 %add, %add
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i64 0, i32 55
  %10 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8, !tbaa !293
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i64 0, i32 3
  %11 = load i32, i32* %current_mb_nr, align 4, !tbaa !294
  %idxprom11 = sext i32 %11 to i64
  %list_offset13 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %10, i64 %idxprom11, i32 20
  %12 = load i32, i32* %list_offset13, align 4, !tbaa !295
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8, !tbaa !1
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i64 0, i32 19
  %14 = load i32, i32* %weighted_pred_flag, align 8, !tbaa !298
  %tobool = icmp eq i32 %14, 0
  br i1 %tobool, label %lor.rhs, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i64 0, i32 6
  %15 = load i32, i32* %type, align 8, !tbaa !300
  switch i32 %15, label %lor.rhs [
    i32 0, label %lor.end.thread
    i32 3, label %lor.end.thread
  ]

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i64 0, i32 20
  %16 = load i32, i32* %weighted_bipred_idc, align 4, !tbaa !301
  %tobool16 = icmp eq i32 %16, 0
  br i1 %tobool16, label %lor.end.thread706, label %lor.end

lor.end.thread706:                                ; preds = %lor.rhs
  %add19707 = add nsw i32 %12, %list
  %idxprom20708 = sext i32 %add19707 to i64
  %arrayidx21709 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom20708
  %17 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx21709, align 8, !tbaa !1
  %arrayidx23710 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %17, i64 %idxprom1
  %18 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx23710, align 8, !tbaa !1
  br label %if.else

lor.end.thread:                                   ; preds = %land.lhs.true, %land.lhs.true
  %add19702 = add nsw i32 %12, %list
  %idxprom20703 = sext i32 %add19702 to i64
  %arrayidx21704 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom20703
  %19 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx21704, align 8, !tbaa !1
  %arrayidx23705 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %19, i64 %idxprom1
  %20 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx23705, align 8, !tbaa !1
  br label %land.lhs.true25

lor.end:                                          ; preds = %lor.rhs
  %type17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i64 0, i32 6
  %21 = load i32, i32* %type17, align 8, !tbaa !300
  %cmp18 = icmp eq i32 %21, 1
  %add19 = add nsw i32 %12, %list
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom20
  %22 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx21, align 8, !tbaa !1
  %arrayidx23 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %22, i64 %idxprom1
  %23 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx23, align 8, !tbaa !1
  br i1 %cmp18, label %land.lhs.true25, label %if.else

land.lhs.true25:                                  ; preds = %lor.end.thread, %lor.end
  %24 = phi %struct.storable_picture* [ %20, %lor.end.thread ], [ %23, %lor.end ]
  %25 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %UseWeightedReferenceME = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %25, i64 0, i32 56
  %26 = load i32, i32* %UseWeightedReferenceME, align 8, !tbaa !302
  %tobool26 = icmp eq i32 %26, 0
  br i1 %tobool26, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true25
  %imgY_11_w = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %24, i64 0, i32 27
  br label %if.end

if.else:                                          ; preds = %lor.end.thread706, %land.lhs.true25, %lor.end
  %27 = phi %struct.storable_picture* [ %24, %land.lhs.true25 ], [ %23, %lor.end ], [ %18, %lor.end.thread706 ]
  %imgY_11 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %27, i64 0, i32 26
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %28 = phi %struct.storable_picture* [ %24, %if.then ], [ %27, %if.else ]
  %ref_pic.0.in = phi i16** [ %imgY_11_w, %if.then ], [ %imgY_11, %if.else ]
  %ref_pic.0 = load i16*, i16** %ref_pic.0.in, align 8, !tbaa !1
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %28, i64 0, i32 18
  %29 = load i32, i32* %size_x, align 8, !tbaa !303
  %sub = add nsw i32 %29, -17
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %28, i64 0, i32 19
  %30 = load i32, i32* %size_y, align 4, !tbaa !305
  %sub27 = add nsw i32 %30, -17
  %arraydecay30 = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i64 0, i64 0
  %31 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %31, i64 0, i32 32
  %32 = load i8***, i8**** %ref_idx, align 8, !tbaa !306
  %arrayidx32 = getelementptr inbounds i8**, i8*** %32, i64 %idxprom
  %33 = load i8**, i8*** %arrayidx32, align 8, !tbaa !1
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %31, i64 0, i32 35
  %34 = load i16****, i16***** %mv, align 8, !tbaa !307
  %arrayidx34 = getelementptr inbounds i16***, i16**** %34, i64 %idxprom
  %35 = load i16***, i16**** %arrayidx34, align 8, !tbaa !1
  call void @SetMotionVectorPredictor(i16* nonnull %arraydecay30, i8** %33, i16*** %35, i16 signext %ref, i32 %list, i32 0, i32 0, i32 16, i32 16)
  %36 = load i16, i16* %arraydecay30, align 2, !tbaa !308
  %37 = sdiv i16 %36, 4
  %div = sext i16 %37 to i32
  %38 = load i32**, i32*** @search_center_x, align 8, !tbaa !1
  %arrayidx37 = getelementptr inbounds i32*, i32** %38, i64 %idxprom
  %39 = load i32*, i32** %arrayidx37, align 8, !tbaa !1
  %arrayidx39 = getelementptr inbounds i32, i32* %39, i64 %idxprom1
  store i32 %div, i32* %arrayidx39, align 4, !tbaa !13
  %arrayidx40 = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i64 0, i64 1
  %40 = load i16, i16* %arrayidx40, align 2, !tbaa !308
  %41 = sdiv i16 %40, 4
  %div42 = sext i16 %41 to i32
  %42 = load i32**, i32*** @search_center_y, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds i32*, i32** %42, i64 %idxprom
  %43 = load i32*, i32** %arrayidx44, align 8, !tbaa !1
  %arrayidx46 = getelementptr inbounds i32, i32* %43, i64 %idxprom1
  store i32 %div42, i32* %arrayidx46, align 4, !tbaa !13
  %44 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %44, i64 0, i32 106
  %45 = load i32, i32* %rdopt, align 8, !tbaa !309
  %tobool47 = icmp eq i32 %45, 0
  br i1 %tobool47, label %if.then48, label %if.end125

if.then48:                                        ; preds = %if.end
  %sub49 = sub nsw i32 0, %8
  %46 = load i32, i32* %arrayidx39, align 4, !tbaa !13
  %cmp54 = icmp slt i32 %8, %46
  %. = select i1 %cmp54, i32 %8, i32 %46
  %cmp60 = icmp slt i32 %., %sub49
  %sub49.. = select i1 %cmp60, i32 %sub49, i32 %.
  store i32 %sub49.., i32* %arrayidx39, align 4, !tbaa !13
  %47 = load i32, i32* %arrayidx46, align 4, !tbaa !13
  %cmp90 = icmp slt i32 %8, %47
  %.697 = select i1 %cmp90, i32 %8, i32 %47
  %cmp100 = icmp slt i32 %.697, %sub49
  %cond120 = select i1 %cmp100, i32 %sub49, i32 %.697
  store i32 %cond120, i32* %arrayidx46, align 4, !tbaa !13
  br label %if.end125

if.end125:                                        ; preds = %if.end, %if.then48
  %48 = load i32, i32* %arrayidx39, align 4, !tbaa !13
  %add130 = add nsw i32 %8, -2047
  %cmp131 = icmp slt i32 %48, %add130
  br i1 %cmp131, label %cond.end152, label %cond.false135

cond.false135:                                    ; preds = %if.end125
  %sub140 = sub nsw i32 2047, %8
  %cmp141 = icmp sgt i32 %48, %sub140
  %sub140. = select i1 %cmp141, i32 %sub140, i32 %48
  br label %cond.end152

cond.end152:                                      ; preds = %cond.false135, %if.end125
  %cond153 = phi i32 [ %add130, %if.end125 ], [ %sub140., %cond.false135 ]
  store i32 %cond153, i32* %arrayidx39, align 4, !tbaa !13
  %49 = load i32, i32* %arrayidx46, align 4, !tbaa !13
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %LevelIndex = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i64 0, i32 2
  %51 = load i32, i32* %LevelIndex, align 8, !tbaa !310
  %idxprom162 = sext i32 %51 to i64
  %arrayidx164 = getelementptr inbounds [17 x [6 x i32]], [17 x [6 x i32]]* @LEVELMVLIMIT, i64 0, i64 %idxprom162, i64 0
  %52 = load i32, i32* %arrayidx164, align 8, !tbaa !13
  %add165 = add nsw i32 %52, %8
  %cmp166 = icmp slt i32 %49, %add165
  br i1 %cmp166, label %for.body.lr.ph, label %cond.false174

cond.false174:                                    ; preds = %cond.end152
  %arrayidx182 = getelementptr inbounds [17 x [6 x i32]], [17 x [6 x i32]]* @LEVELMVLIMIT, i64 0, i64 %idxprom162, i64 1
  %53 = load i32, i32* %arrayidx182, align 4, !tbaa !13
  %sub183 = sub nsw i32 %53, %8
  %cmp184 = icmp sgt i32 %49, %sub183
  %sub183. = select i1 %cmp184, i32 %sub183, i32 %49
  br label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %cond.end152, %cond.false174
  %cond200 = phi i32 [ %add165, %cond.end152 ], [ %sub183., %cond.false174 ]
  store i32 %cond200, i32* %arrayidx46, align 4, !tbaa !13
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i64 0, i32 37
  %54 = load i32, i32* %opix_x, align 8, !tbaa !311
  %55 = load i32, i32* %arrayidx39, align 4, !tbaa !13
  %add209 = add nsw i32 %55, %54
  store i32 %add209, i32* %arrayidx39, align 4, !tbaa !13
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i64 0, i32 38
  %56 = load i32, i32* %opix_y, align 4, !tbaa !312
  %57 = load i32, i32* %arrayidx46, align 4, !tbaa !13
  %add214 = add nsw i32 %57, %56
  store i32 %add214, i32* %arrayidx46, align 4, !tbaa !13
  %58 = load i32, i32* %arrayidx39, align 4, !tbaa !13
  %59 = load i32, i32* %opix_y, align 4, !tbaa !312
  %60 = load i32, i32* %opix_x, align 8, !tbaa !311
  %61 = load i16**, i16*** @imgY_org, align 8
  %62 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x230 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %62, i64 0, i32 37
  %63 = sext i32 %59 to i64
  %64 = load i32, i32* %opix_x230, align 8, !tbaa !311
  %65 = sext i32 %60 to i64
  %66 = add nsw i32 %64, 15
  %67 = sext i32 %66 to i64
  %68 = add nsw i32 %59, 15
  %69 = sext i32 %68 to i64
  %70 = icmp sgt i64 %65, %67
  %smax = select i1 %70, i64 %65, i64 %67
  %71 = add nsw i64 %smax, 1
  %72 = sub nsw i64 %71, %65
  %73 = icmp sgt i64 %65, %67
  %smax755 = select i1 %73, i64 %65, i64 %67
  %74 = add nsw i64 %smax755, 1
  %75 = sub nsw i64 %74, %65
  %76 = add nsw i64 %72, -16
  %77 = lshr i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %min.iters.check = icmp ult i64 %72, 16
  %n.vec = and i64 %72, -16
  %cmp.zero = icmp eq i64 %n.vec, 0
  %ind.end = add nsw i64 %65, %n.vec
  %xtraiter = and i64 %78, 3
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %79 = icmp ult i64 %76, 48
  %cmp.n = icmp eq i64 %72, %n.vec
  br label %for.body234.lr.ph

for.body234.lr.ph:                                ; preds = %for.inc239, %for.body.lr.ph
  %indvars.iv749 = phi i64 [ %63, %for.body.lr.ph ], [ %indvars.iv.next750, %for.inc239 ]
  %orgptr.0734 = phi i16* [ %arraydecay, %for.body.lr.ph ], [ %incdec.ptr.lcssa, %for.inc239 ]
  %arrayidx236 = getelementptr inbounds i16*, i16** %61, i64 %indvars.iv749
  %80 = load i16*, i16** %arrayidx236, align 8, !tbaa !1
  br i1 %min.iters.check, label %for.body234.preheader, label %min.iters.checked

min.iters.checked:                                ; preds = %for.body234.lr.ph
  br i1 %cmp.zero, label %for.body234.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %min.iters.checked
  %scevgep756 = getelementptr i16, i16* %orgptr.0734, i64 %75
  %scevgep758 = getelementptr i16, i16* %80, i64 %65
  %scevgep760 = getelementptr i16, i16* %80, i64 %74
  %bound0 = icmp ult i16* %orgptr.0734, %scevgep760
  %bound1 = icmp ult i16* %scevgep758, %scevgep756
  %memcheck.conflict = and i1 %bound0, %bound1
  %ind.end763 = getelementptr i16, i16* %orgptr.0734, i64 %n.vec
  br i1 %memcheck.conflict, label %for.body234.preheader, label %vector.body.preheader

vector.body.preheader:                            ; preds = %vector.memcheck
  br i1 %lcmp.mod, label %vector.body.prol.loopexit, label %vector.body.prol.preheader

vector.body.prol.preheader:                       ; preds = %vector.body.preheader
  br label %vector.body.prol

vector.body.prol:                                 ; preds = %vector.body.prol, %vector.body.prol.preheader
  %index.prol = phi i64 [ %index.next.prol, %vector.body.prol ], [ 0, %vector.body.prol.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %vector.body.prol ], [ %xtraiter, %vector.body.prol.preheader ]
  %81 = add i64 %65, %index.prol
  %next.gep.prol = getelementptr i16, i16* %orgptr.0734, i64 %index.prol
  %82 = getelementptr inbounds i16, i16* %80, i64 %81
  %83 = bitcast i16* %82 to <8 x i16>*
  %wide.load.prol = load <8 x i16>, <8 x i16>* %83, align 2, !tbaa !308, !alias.scope !313
  %84 = getelementptr i16, i16* %82, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %wide.load766.prol = load <8 x i16>, <8 x i16>* %85, align 2, !tbaa !308, !alias.scope !313
  %86 = bitcast i16* %next.gep.prol to <8 x i16>*
  store <8 x i16> %wide.load.prol, <8 x i16>* %86, align 2, !tbaa !308, !alias.scope !316, !noalias !313
  %87 = getelementptr i16, i16* %next.gep.prol, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %wide.load766.prol, <8 x i16>* %88, align 2, !tbaa !308, !alias.scope !316, !noalias !313
  %index.next.prol = add i64 %index.prol, 16
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %vector.body.prol.loopexit.unr-lcssa, label %vector.body.prol, !llvm.loop !318

vector.body.prol.loopexit.unr-lcssa:              ; preds = %vector.body.prol
  br label %vector.body.prol.loopexit

vector.body.prol.loopexit:                        ; preds = %vector.body.preheader, %vector.body.prol.loopexit.unr-lcssa
  %index.unr = phi i64 [ 0, %vector.body.preheader ], [ %index.next.prol, %vector.body.prol.loopexit.unr-lcssa ]
  br i1 %79, label %middle.block, label %vector.body.preheader.new

vector.body.preheader.new:                        ; preds = %vector.body.prol.loopexit
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.body.preheader.new
  %index = phi i64 [ %index.unr, %vector.body.preheader.new ], [ %index.next.3, %vector.body ]
  %89 = add i64 %65, %index
  %next.gep = getelementptr i16, i16* %orgptr.0734, i64 %index
  %90 = getelementptr inbounds i16, i16* %80, i64 %89
  %91 = bitcast i16* %90 to <8 x i16>*
  %wide.load = load <8 x i16>, <8 x i16>* %91, align 2, !tbaa !308, !alias.scope !313
  %92 = getelementptr i16, i16* %90, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %wide.load766 = load <8 x i16>, <8 x i16>* %93, align 2, !tbaa !308, !alias.scope !313
  %94 = bitcast i16* %next.gep to <8 x i16>*
  store <8 x i16> %wide.load, <8 x i16>* %94, align 2, !tbaa !308, !alias.scope !316, !noalias !313
  %95 = getelementptr i16, i16* %next.gep, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %wide.load766, <8 x i16>* %96, align 2, !tbaa !308, !alias.scope !316, !noalias !313
  %index.next = add i64 %index, 16
  %97 = add i64 %65, %index.next
  %next.gep.1 = getelementptr i16, i16* %orgptr.0734, i64 %index.next
  %98 = getelementptr inbounds i16, i16* %80, i64 %97
  %99 = bitcast i16* %98 to <8 x i16>*
  %wide.load.1 = load <8 x i16>, <8 x i16>* %99, align 2, !tbaa !308, !alias.scope !313
  %100 = getelementptr i16, i16* %98, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %wide.load766.1 = load <8 x i16>, <8 x i16>* %101, align 2, !tbaa !308, !alias.scope !313
  %102 = bitcast i16* %next.gep.1 to <8 x i16>*
  store <8 x i16> %wide.load.1, <8 x i16>* %102, align 2, !tbaa !308, !alias.scope !316, !noalias !313
  %103 = getelementptr i16, i16* %next.gep.1, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %wide.load766.1, <8 x i16>* %104, align 2, !tbaa !308, !alias.scope !316, !noalias !313
  %index.next.1 = add i64 %index, 32
  %105 = add i64 %65, %index.next.1
  %next.gep.2 = getelementptr i16, i16* %orgptr.0734, i64 %index.next.1
  %106 = getelementptr inbounds i16, i16* %80, i64 %105
  %107 = bitcast i16* %106 to <8 x i16>*
  %wide.load.2 = load <8 x i16>, <8 x i16>* %107, align 2, !tbaa !308, !alias.scope !313
  %108 = getelementptr i16, i16* %106, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %wide.load766.2 = load <8 x i16>, <8 x i16>* %109, align 2, !tbaa !308, !alias.scope !313
  %110 = bitcast i16* %next.gep.2 to <8 x i16>*
  store <8 x i16> %wide.load.2, <8 x i16>* %110, align 2, !tbaa !308, !alias.scope !316, !noalias !313
  %111 = getelementptr i16, i16* %next.gep.2, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %wide.load766.2, <8 x i16>* %112, align 2, !tbaa !308, !alias.scope !316, !noalias !313
  %index.next.2 = add i64 %index, 48
  %113 = add i64 %65, %index.next.2
  %next.gep.3 = getelementptr i16, i16* %orgptr.0734, i64 %index.next.2
  %114 = getelementptr inbounds i16, i16* %80, i64 %113
  %115 = bitcast i16* %114 to <8 x i16>*
  %wide.load.3 = load <8 x i16>, <8 x i16>* %115, align 2, !tbaa !308, !alias.scope !313
  %116 = getelementptr i16, i16* %114, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  %wide.load766.3 = load <8 x i16>, <8 x i16>* %117, align 2, !tbaa !308, !alias.scope !313
  %118 = bitcast i16* %next.gep.3 to <8 x i16>*
  store <8 x i16> %wide.load.3, <8 x i16>* %118, align 2, !tbaa !308, !alias.scope !316, !noalias !313
  %119 = getelementptr i16, i16* %next.gep.3, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %wide.load766.3, <8 x i16>* %120, align 2, !tbaa !308, !alias.scope !316, !noalias !313
  %index.next.3 = add i64 %index, 64
  %121 = icmp eq i64 %index.next.3, %n.vec
  br i1 %121, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !319

middle.block.unr-lcssa:                           ; preds = %vector.body
  br label %middle.block

middle.block:                                     ; preds = %vector.body.prol.loopexit, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.inc239, label %for.body234.preheader

for.body234.preheader:                            ; preds = %middle.block, %vector.memcheck, %min.iters.checked, %for.body234.lr.ph
  %indvars.iv744.ph = phi i64 [ %65, %vector.memcheck ], [ %65, %min.iters.checked ], [ %65, %for.body234.lr.ph ], [ %ind.end, %middle.block ]
  %orgptr.1729.ph = phi i16* [ %orgptr.0734, %vector.memcheck ], [ %orgptr.0734, %min.iters.checked ], [ %orgptr.0734, %for.body234.lr.ph ], [ %ind.end763, %middle.block ]
  br label %for.body234

for.body234:                                      ; preds = %for.body234.preheader, %for.body234
  %indvars.iv744 = phi i64 [ %indvars.iv.next745, %for.body234 ], [ %indvars.iv744.ph, %for.body234.preheader ]
  %orgptr.1729 = phi i16* [ %incdec.ptr, %for.body234 ], [ %orgptr.1729.ph, %for.body234.preheader ]
  %arrayidx238 = getelementptr inbounds i16, i16* %80, i64 %indvars.iv744
  %122 = load i16, i16* %arrayidx238, align 2, !tbaa !308
  %incdec.ptr = getelementptr inbounds i16, i16* %orgptr.1729, i64 1
  store i16 %122, i16* %orgptr.1729, align 2, !tbaa !308
  %indvars.iv.next745 = add nsw i64 %indvars.iv744, 1
  %cmp232 = icmp slt i64 %indvars.iv744, %67
  br i1 %cmp232, label %for.body234, label %for.inc239.loopexit, !llvm.loop !320

for.inc239.loopexit:                              ; preds = %for.body234
  br label %for.inc239

for.inc239:                                       ; preds = %for.inc239.loopexit, %middle.block
  %incdec.ptr.lcssa = phi i16* [ %ind.end763, %middle.block ], [ %incdec.ptr, %for.inc239.loopexit ]
  %indvars.iv.next750 = add nsw i64 %indvars.iv749, 1
  %cmp226 = icmp slt i64 %indvars.iv749, %69
  br i1 %cmp226, label %for.body234.lr.ph, label %for.end241

for.end241:                                       ; preds = %for.inc239
  %cmp242 = icmp slt i32 %58, %8
  %sub245 = sub nsw i32 %sub, %8
  %cmp246 = icmp sgt i32 %58, %sub245
  %or.cond699 = or i1 %cmp242, %cmp246
  %cmp249 = icmp slt i32 %add214, %8
  %or.cond700 = or i1 %or.cond699, %cmp249
  %sub252 = sub nsw i32 %sub27, %8
  %cmp253 = icmp sgt i32 %add214, %sub252
  %or.cond701 = or i1 %cmp253, %or.cond700
  br i1 %or.cond701, label %if.end257, label %if.then255

if.then255:                                       ; preds = %for.end241
  store i16* (i16*, i32, i32, i32, i32)* @FastLine16Y_11, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8, !tbaa !1
  br label %if.end257

if.end257:                                        ; preds = %for.end241, %if.then255
  %range_partly_outside.0 = phi i32 [ 0, %if.then255 ], [ 1, %for.end241 ]
  %123 = load i32, i32* %rdopt, align 8, !tbaa !309
  %tobool259 = icmp eq i32 %123, 0
  br i1 %tobool259, label %if.then260, label %if.end257.for.cond290.preheader_crit_edge

if.end257.for.cond290.preheader_crit_edge:        ; preds = %if.end257
  %.pre751 = zext i32 %mul10 to i64
  br label %for.cond290.preheader

if.then260:                                       ; preds = %if.end257
  %124 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %opix_x261 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %124, i64 0, i32 37
  %125 = load i32, i32* %opix_x261, align 8, !tbaa !311
  %sub262 = sub nsw i32 %125, %58
  %opix_y263 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %124, i64 0, i32 38
  %126 = load i32, i32* %opix_y263, align 4, !tbaa !312
  %sub264 = sub nsw i32 %126, %add214
  %127 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  %128 = load i16*, i16** @spiral_search_y, align 8
  %129 = zext i32 %mul10 to i64
  br label %for.body268

for.body268:                                      ; preds = %if.then260, %for.inc286
  %indvars.iv742 = phi i64 [ 0, %if.then260 ], [ %indvars.iv.next743, %for.inc286 ]
  %arrayidx270 = getelementptr inbounds i16, i16* %127, i64 %indvars.iv742
  %130 = load i16, i16* %arrayidx270, align 2, !tbaa !308
  %conv271 = sext i16 %130 to i32
  %cmp272 = icmp eq i32 %sub262, %conv271
  br i1 %cmp272, label %land.lhs.true274, label %for.inc286

land.lhs.true274:                                 ; preds = %for.body268
  %arrayidx276 = getelementptr inbounds i16, i16* %128, i64 %indvars.iv742
  %131 = load i16, i16* %arrayidx276, align 2, !tbaa !308
  %conv277 = sext i16 %131 to i32
  %cmp278 = icmp eq i32 %sub264, %conv277
  br i1 %cmp278, label %if.then280, label %for.inc286

if.then280:                                       ; preds = %land.lhs.true274
  %132 = trunc i64 %indvars.iv742 to i32
  %133 = load i32**, i32*** @pos_00, align 8, !tbaa !1
  %arrayidx282 = getelementptr inbounds i32*, i32** %133, i64 %idxprom
  %134 = load i32*, i32** %arrayidx282, align 8, !tbaa !1
  %arrayidx284 = getelementptr inbounds i32, i32* %134, i64 %idxprom1
  store i32 %132, i32* %arrayidx284, align 4, !tbaa !13
  br label %for.cond290.preheader

for.cond290.preheader.loopexit:                   ; preds = %for.inc286
  br label %for.cond290.preheader

for.cond290.preheader:                            ; preds = %for.cond290.preheader.loopexit, %if.end257.for.cond290.preheader_crit_edge, %if.then280
  %.pre-phi = phi i64 [ %.pre751, %if.end257.for.cond290.preheader_crit_edge ], [ %129, %if.then280 ], [ %129, %for.cond290.preheader.loopexit ]
  %tobool302 = icmp eq i32 %range_partly_outside.0, 0
  br label %for.body293

for.inc286:                                       ; preds = %for.body268, %land.lhs.true274
  %indvars.iv.next743 = add nuw nsw i64 %indvars.iv742, 1
  %cmp266 = icmp slt i64 %indvars.iv.next743, %129
  br i1 %cmp266, label %for.body268, label %for.cond290.preheader.loopexit

for.body293:                                      ; preds = %for.cond290.preheader, %for.inc483
  %indvars.iv740 = phi i64 [ 0, %for.cond290.preheader ], [ %indvars.iv.next741, %for.inc483 ]
  %135 = load i16*, i16** @spiral_search_y, align 8, !tbaa !1
  %arrayidx295 = getelementptr inbounds i16, i16* %135, i64 %indvars.iv740
  %136 = load i16, i16* %arrayidx295, align 2, !tbaa !308
  %conv296 = sext i16 %136 to i32
  %add297 = add nsw i32 %conv296, %add214
  %137 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  %arrayidx299 = getelementptr inbounds i16, i16* %137, i64 %indvars.iv740
  %138 = load i16, i16* %arrayidx299, align 2, !tbaa !308
  %conv300 = sext i16 %138 to i32
  %add301 = add nsw i32 %conv300, %58
  br i1 %tobool302, label %for.cond324.preheader.preheader, label %if.then303

if.then303:                                       ; preds = %for.body293
  %cmp304 = icmp sgt i32 %add297, -1
  br i1 %cmp304, label %land.lhs.true306, label %if.end317

land.lhs.true306:                                 ; preds = %if.then303
  %cmp307 = icmp sle i32 %add297, %sub27
  %cmp310 = icmp sgt i32 %add301, -1
  %or.cond = and i1 %cmp307, %cmp310
  br i1 %or.cond, label %land.lhs.true312, label %if.end317

land.lhs.true312:                                 ; preds = %land.lhs.true306
  %cmp313 = icmp sle i32 %add301, %sub
  %FastLine16Y_11.UMVLine16Y_11 = select i1 %cmp313, i16* (i16*, i32, i32, i32, i32)* @FastLine16Y_11, i16* (i16*, i32, i32, i32, i32)* @UMVLine16Y_11
  br label %if.end317

if.end317:                                        ; preds = %land.lhs.true312, %if.then303, %land.lhs.true306
  %UMVLine16Y_11.sink = phi i16* (i16*, i32, i32, i32, i32)* [ @UMVLine16Y_11, %land.lhs.true306 ], [ @UMVLine16Y_11, %if.then303 ], [ %FastLine16Y_11.UMVLine16Y_11, %land.lhs.true312 ]
  store i16* (i16*, i32, i32, i32, i32)* %UMVLine16Y_11.sink, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8, !tbaa !1
  br label %for.cond324.preheader.preheader

for.cond324.preheader.preheader:                  ; preds = %for.body293, %if.end317
  br label %for.cond324.preheader

for.cond324.preheader:                            ; preds = %for.cond324.preheader.preheader, %for.end459
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end459 ], [ 0, %for.cond324.preheader.preheader ]
  %orgptr.2722 = phi i16* [ %scevgep, %for.end459 ], [ %arraydecay, %for.cond324.preheader.preheader ]
  %abs_y.0721 = phi i32 [ %139, %for.end459 ], [ %add297, %for.cond324.preheader.preheader ]
  %blky.0719 = phi i32 [ %inc481, %for.end459 ], [ 0, %for.cond324.preheader.preheader ]
  %139 = add i32 %abs_y.0721, 4
  br label %for.body327

for.body327:                                      ; preds = %for.body327, %for.cond324.preheader
  %orgptr.3718 = phi i16* [ %orgptr.2722, %for.cond324.preheader ], [ %incdec.ptr451, %for.body327 ]
  %y.1717 = phi i32 [ 0, %for.cond324.preheader ], [ %inc458, %for.body327 ]
  %abs_y.1716 = phi i32 [ %abs_y.0721, %for.cond324.preheader ], [ %inc328, %for.body327 ]
  %LineSadBlk0.0715 = phi i32 [ 0, %for.cond324.preheader ], [ %add360, %for.body327 ]
  %LineSadBlk1.0714 = phi i32 [ 0, %for.cond324.preheader ], [ %add392, %for.body327 ]
  %LineSadBlk3.0713 = phi i32 [ 0, %for.cond324.preheader ], [ %add456, %for.body327 ]
  %LineSadBlk2.0712 = phi i32 [ 0, %for.cond324.preheader ], [ %add424, %for.body327 ]
  %140 = load i16* (i16*, i32, i32, i32, i32)*, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8, !tbaa !1
  %inc328 = add nsw i32 %abs_y.1716, 1
  %call = tail call i16* %140(i16* %ref_pic.0, i32 %abs_y.1716, i32 %add301, i32 %30, i32 %29) #8
  %141 = load i32*, i32** @byte_abs, align 8, !tbaa !1
  %142 = bitcast i16* %call to <16 x i16>*
  %143 = load <16 x i16>, <16 x i16>* %142, align 2, !tbaa !308
  %144 = zext <16 x i16> %143 to <16 x i32>
  %145 = bitcast i16* %orgptr.3718 to <16 x i16>*
  %146 = load <16 x i16>, <16 x i16>* %145, align 2, !tbaa !308
  %147 = zext <16 x i16> %146 to <16 x i32>
  %148 = sub nsw <16 x i32> %144, %147
  %149 = extractelement <16 x i32> %148, i32 0
  %150 = sext i32 %149 to i64
  %arrayidx335 = getelementptr inbounds i32, i32* %141, i64 %150
  %151 = load i32, i32* %arrayidx335, align 4, !tbaa !13
  %add336 = add i32 %151, %LineSadBlk0.0715
  %152 = extractelement <16 x i32> %148, i32 1
  %153 = sext i32 %152 to i64
  %arrayidx343 = getelementptr inbounds i32, i32* %141, i64 %153
  %154 = load i32, i32* %arrayidx343, align 4, !tbaa !13
  %add344 = add i32 %add336, %154
  %155 = extractelement <16 x i32> %148, i32 2
  %156 = sext i32 %155 to i64
  %arrayidx351 = getelementptr inbounds i32, i32* %141, i64 %156
  %157 = load i32, i32* %arrayidx351, align 4, !tbaa !13
  %add352 = add i32 %add344, %157
  %158 = extractelement <16 x i32> %148, i32 3
  %159 = sext i32 %158 to i64
  %arrayidx359 = getelementptr inbounds i32, i32* %141, i64 %159
  %160 = load i32, i32* %arrayidx359, align 4, !tbaa !13
  %add360 = add i32 %add352, %160
  %161 = extractelement <16 x i32> %148, i32 4
  %162 = sext i32 %161 to i64
  %arrayidx367 = getelementptr inbounds i32, i32* %141, i64 %162
  %163 = load i32, i32* %arrayidx367, align 4, !tbaa !13
  %add368 = add i32 %163, %LineSadBlk1.0714
  %164 = extractelement <16 x i32> %148, i32 5
  %165 = sext i32 %164 to i64
  %arrayidx375 = getelementptr inbounds i32, i32* %141, i64 %165
  %166 = load i32, i32* %arrayidx375, align 4, !tbaa !13
  %add376 = add i32 %add368, %166
  %167 = extractelement <16 x i32> %148, i32 6
  %168 = sext i32 %167 to i64
  %arrayidx383 = getelementptr inbounds i32, i32* %141, i64 %168
  %169 = load i32, i32* %arrayidx383, align 4, !tbaa !13
  %add384 = add i32 %add376, %169
  %170 = extractelement <16 x i32> %148, i32 7
  %171 = sext i32 %170 to i64
  %arrayidx391 = getelementptr inbounds i32, i32* %141, i64 %171
  %172 = load i32, i32* %arrayidx391, align 4, !tbaa !13
  %add392 = add i32 %add384, %172
  %173 = extractelement <16 x i32> %148, i32 8
  %174 = sext i32 %173 to i64
  %arrayidx399 = getelementptr inbounds i32, i32* %141, i64 %174
  %175 = load i32, i32* %arrayidx399, align 4, !tbaa !13
  %add400 = add i32 %175, %LineSadBlk2.0712
  %176 = extractelement <16 x i32> %148, i32 9
  %177 = sext i32 %176 to i64
  %arrayidx407 = getelementptr inbounds i32, i32* %141, i64 %177
  %178 = load i32, i32* %arrayidx407, align 4, !tbaa !13
  %add408 = add i32 %add400, %178
  %179 = extractelement <16 x i32> %148, i32 10
  %180 = sext i32 %179 to i64
  %arrayidx415 = getelementptr inbounds i32, i32* %141, i64 %180
  %181 = load i32, i32* %arrayidx415, align 4, !tbaa !13
  %add416 = add i32 %add408, %181
  %182 = extractelement <16 x i32> %148, i32 11
  %183 = sext i32 %182 to i64
  %arrayidx423 = getelementptr inbounds i32, i32* %141, i64 %183
  %184 = load i32, i32* %arrayidx423, align 4, !tbaa !13
  %add424 = add i32 %add416, %184
  %185 = extractelement <16 x i32> %148, i32 12
  %186 = sext i32 %185 to i64
  %arrayidx431 = getelementptr inbounds i32, i32* %141, i64 %186
  %187 = load i32, i32* %arrayidx431, align 4, !tbaa !13
  %add432 = add i32 %187, %LineSadBlk3.0713
  %188 = extractelement <16 x i32> %148, i32 13
  %189 = sext i32 %188 to i64
  %arrayidx439 = getelementptr inbounds i32, i32* %141, i64 %189
  %190 = load i32, i32* %arrayidx439, align 4, !tbaa !13
  %add440 = add i32 %add432, %190
  %191 = extractelement <16 x i32> %148, i32 14
  %192 = sext i32 %191 to i64
  %arrayidx447 = getelementptr inbounds i32, i32* %141, i64 %192
  %193 = load i32, i32* %arrayidx447, align 4, !tbaa !13
  %add448 = add i32 %add440, %193
  %incdec.ptr451 = getelementptr inbounds i16, i16* %orgptr.3718, i64 16
  %194 = extractelement <16 x i32> %148, i32 15
  %195 = sext i32 %194 to i64
  %arrayidx455 = getelementptr inbounds i32, i32* %141, i64 %195
  %196 = load i32, i32* %arrayidx455, align 4, !tbaa !13
  %add456 = add i32 %add448, %196
  %inc458 = add nuw nsw i32 %y.1717, 1
  %exitcond = icmp eq i32 %inc458, 4
  br i1 %exitcond, label %for.end459, label %for.body327

for.end459:                                       ; preds = %for.body327
  %scevgep = getelementptr i16, i16* %orgptr.2722, i64 64
  %197 = or i64 %indvars.iv, 1
  %arrayidx462 = getelementptr inbounds i32*, i32** %5, i64 %indvars.iv
  %198 = load i32*, i32** %arrayidx462, align 8, !tbaa !1
  %arrayidx464 = getelementptr inbounds i32, i32* %198, i64 %indvars.iv740
  store i32 %add360, i32* %arrayidx464, align 4, !tbaa !13
  %199 = or i64 %indvars.iv, 2
  %arrayidx467 = getelementptr inbounds i32*, i32** %5, i64 %197
  %200 = load i32*, i32** %arrayidx467, align 8, !tbaa !1
  %arrayidx469 = getelementptr inbounds i32, i32* %200, i64 %indvars.iv740
  store i32 %add392, i32* %arrayidx469, align 4, !tbaa !13
  %201 = or i64 %indvars.iv, 3
  %arrayidx472 = getelementptr inbounds i32*, i32** %5, i64 %199
  %202 = load i32*, i32** %arrayidx472, align 8, !tbaa !1
  %arrayidx474 = getelementptr inbounds i32, i32* %202, i64 %indvars.iv740
  store i32 %add424, i32* %arrayidx474, align 4, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 4
  %arrayidx477 = getelementptr inbounds i32*, i32** %5, i64 %201
  %203 = load i32*, i32** %arrayidx477, align 8, !tbaa !1
  %arrayidx479 = getelementptr inbounds i32, i32* %203, i64 %indvars.iv740
  store i32 %add456, i32* %arrayidx479, align 4, !tbaa !13
  %inc481 = add nuw nsw i32 %blky.0719, 1
  %exitcond739 = icmp eq i32 %inc481, 4
  br i1 %exitcond739, label %for.inc483, label %for.cond324.preheader

for.inc483:                                       ; preds = %for.end459
  %indvars.iv.next741 = add nuw nsw i64 %indvars.iv740, 1
  %cmp291 = icmp slt i64 %indvars.iv.next741, %.pre-phi
  br i1 %cmp291, label %for.body293, label %for.end485

for.end485:                                       ; preds = %for.inc483
  %conv486 = sext i16 %ref to i32
  tail call void @SetupLargerBlocks(i32 %list, i32 %conv486, i32 %mul10)
  %204 = load i32**, i32*** @search_setup_done, align 8, !tbaa !1
  %arrayidx488 = getelementptr inbounds i32*, i32** %204, i64 %idxprom
  %205 = load i32*, i32** %arrayidx488, align 8, !tbaa !1
  %arrayidx490 = getelementptr inbounds i32, i32* %205, i64 %idxprom1
  store i32 1, i32* %arrayidx490, align 4, !tbaa !13
  call void @llvm.lifetime.end(i64 512, i8* nonnull %1) #8
  call void @llvm.lifetime.end(i64 4, i8* nonnull %0) #8
  ret void
}

; Function Attrs: nounwind uwtable
define void @SetMotionVectorPredictor(i16* nocapture %pmv, i8** nocapture readonly %refPic, i16*** nocapture readonly %tmp_mv, i16 signext %ref_frame, i32 %list, i32 %block_x, i32 %block_y, i32 %blockshape_x, i32 %blockshape_y) local_unnamed_addr #0 {
entry:
  %block_a = alloca %struct.pix_pos, align 4
  %block_b = alloca %struct.pix_pos, align 4
  %block_c = alloca %struct.pix_pos, align 4
  %block_d = alloca %struct.pix_pos, align 4
  %temp_pred_SAD = alloca [2 x i32], align 4
  %mul = shl nsw i32 %block_x, 2
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4, !tbaa !294
  %2 = bitcast %struct.pix_pos* %block_a to i8*
  call void @llvm.lifetime.start(i64 24, i8* nonnull %2) #8
  %3 = bitcast %struct.pix_pos* %block_b to i8*
  call void @llvm.lifetime.start(i64 24, i8* nonnull %3) #8
  %4 = bitcast %struct.pix_pos* %block_c to i8*
  call void @llvm.lifetime.start(i64 24, i8* nonnull %4) #8
  %5 = bitcast %struct.pix_pos* %block_d to i8*
  call void @llvm.lifetime.start(i64 24, i8* nonnull %5) #8
  %6 = bitcast [2 x i32]* %temp_pred_SAD to i8*
  call void @llvm.lifetime.start(i64 8, i8* nonnull %6) #8
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i64 0, i32 155
  %8 = load i32, i32* %FMEnable, align 4, !tbaa !321
  %cmp = icmp eq i32 %8, 1
  %cmp2 = icmp slt i16 %ref_frame, 1
  %or.cond1016 = and i1 %cmp2, %cmp
  %9 = load i32, i32* @FME_blocktype, align 4
  %cmp4 = icmp eq i32 %9, 1
  %or.cond1028 = and i1 %or.cond1016, %cmp4
  br i1 %or.cond1028, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* @pred_SAD_space, align 4, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %10 = phi i1 [ true, %if.then ], [ false, %entry ]
  call void @getLuma4x4Neighbour(i32 %1, i32 %block_x, i32 %block_y, i32 -1, i32 0, %struct.pix_pos* nonnull %block_a) #8
  call void @getLuma4x4Neighbour(i32 %1, i32 %block_x, i32 %block_y, i32 0, i32 -1, %struct.pix_pos* nonnull %block_b) #8
  call void @getLuma4x4Neighbour(i32 %1, i32 %block_x, i32 %block_y, i32 %blockshape_x, i32 -1, %struct.pix_pos* nonnull %block_c) #8
  call void @getLuma4x4Neighbour(i32 %1, i32 %block_x, i32 %block_y, i32 -1, i32 -1, %struct.pix_pos* nonnull %block_d) #8
  %cmp6 = icmp sgt i32 %block_y, 0
  br i1 %cmp6, label %if.then8, label %if.end33

if.then8:                                         ; preds = %if.end
  %cmp9 = icmp slt i32 %mul, 8
  br i1 %cmp9, label %if.then11, label %if.else25

if.then11:                                        ; preds = %if.then8
  %mul1.mask = and i32 %block_y, 1073741823
  %cmp12 = icmp eq i32 %mul1.mask, 2
  br i1 %cmp12, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.then11
  %cmp15 = icmp eq i32 %blockshape_x, 16
  br i1 %cmp15, label %if.then17, label %if.end33

if.then17:                                        ; preds = %if.then14
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 0
  store i32 0, i32* %available, align 4, !tbaa !322
  br label %if.end33

if.else:                                          ; preds = %if.then11
  %add = add nsw i32 %mul, %blockshape_x
  %cmp19 = icmp eq i32 %add, 8
  br i1 %cmp19, label %if.then21, label %if.end33

if.then21:                                        ; preds = %if.else
  %available22 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 0
  store i32 0, i32* %available22, align 4, !tbaa !322
  br label %if.end33

if.else25:                                        ; preds = %if.then8
  %add26 = add nsw i32 %mul, %blockshape_x
  %cmp27 = icmp eq i32 %add26, 16
  br i1 %cmp27, label %if.then29, label %if.end33

if.then29:                                        ; preds = %if.else25
  %available30 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 0
  store i32 0, i32* %available30, align 4, !tbaa !322
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then21, %if.then14, %if.then17, %if.then29, %if.else25, %if.end
  %available34 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 0
  %11 = load i32, i32* %available34, align 4, !tbaa !322
  %tobool35 = icmp eq i32 %11, 0
  br i1 %tobool35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %4, i8* nonnull %5, i64 24, i32 4, i1 false), !tbaa.struct !324
  br label %if.end37

if.end37:                                         ; preds = %if.end33, %if.then36
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i64 0, i32 95
  %13 = load i32, i32* %MbaffFrameFlag, align 4, !tbaa !325
  %tobool38 = icmp eq i32 %13, 0
  br i1 %tobool38, label %if.then39, label %if.else71

if.then39:                                        ; preds = %if.end37
  %available40 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 0
  %14 = load i32, i32* %available40, align 4, !tbaa !322
  %tobool41 = icmp eq i32 %14, 0
  br i1 %tobool41, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then39
  %pos_y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 5
  %15 = load i32, i32* %pos_y, align 4, !tbaa !326
  %idxprom = sext i32 %15 to i64
  %arrayidx = getelementptr inbounds i8*, i8** %refPic, i64 %idxprom
  %16 = load i8*, i8** %arrayidx, align 8, !tbaa !1
  %pos_x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 4
  %17 = load i32, i32* %pos_x, align 4, !tbaa !327
  %idxprom42 = sext i32 %17 to i64
  %arrayidx43 = getelementptr inbounds i8, i8* %16, i64 %idxprom42
  %18 = load i8, i8* %arrayidx43, align 1, !tbaa !328
  %conv44 = sext i8 %18 to i32
  br label %cond.end

cond.end:                                         ; preds = %if.then39, %cond.true
  %cond = phi i32 [ %conv44, %cond.true ], [ -1, %if.then39 ]
  %available45 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 0
  %19 = load i32, i32* %available45, align 4, !tbaa !322
  %tobool46 = icmp eq i32 %19, 0
  br i1 %tobool46, label %cond.end56, label %cond.true47

cond.true47:                                      ; preds = %cond.end
  %pos_y48 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 5
  %20 = load i32, i32* %pos_y48, align 4, !tbaa !326
  %idxprom49 = sext i32 %20 to i64
  %arrayidx50 = getelementptr inbounds i8*, i8** %refPic, i64 %idxprom49
  %21 = load i8*, i8** %arrayidx50, align 8, !tbaa !1
  %pos_x51 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 4
  %22 = load i32, i32* %pos_x51, align 4, !tbaa !327
  %idxprom52 = sext i32 %22 to i64
  %arrayidx53 = getelementptr inbounds i8, i8* %21, i64 %idxprom52
  %23 = load i8, i8* %arrayidx53, align 1, !tbaa !328
  %conv54 = sext i8 %23 to i32
  br label %cond.end56

cond.end56:                                       ; preds = %cond.end, %cond.true47
  %cond57 = phi i32 [ %conv54, %cond.true47 ], [ -1, %cond.end ]
  %24 = load i32, i32* %available34, align 4, !tbaa !322
  %tobool59 = icmp eq i32 %24, 0
  br i1 %tobool59, label %if.end263, label %cond.true60

cond.true60:                                      ; preds = %cond.end56
  %pos_y61 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 5
  %25 = load i32, i32* %pos_y61, align 4, !tbaa !326
  %idxprom62 = sext i32 %25 to i64
  %arrayidx63 = getelementptr inbounds i8*, i8** %refPic, i64 %idxprom62
  %26 = load i8*, i8** %arrayidx63, align 8, !tbaa !1
  %pos_x64 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 4
  %27 = load i32, i32* %pos_x64, align 4, !tbaa !327
  %idxprom65 = sext i32 %27 to i64
  %arrayidx66 = getelementptr inbounds i8, i8* %26, i64 %idxprom65
  %28 = load i8, i8* %arrayidx66, align 1, !tbaa !328
  %conv67 = sext i8 %28 to i32
  br label %if.end263

if.else71:                                        ; preds = %if.end37
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i64 0, i32 55
  %29 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8, !tbaa !293
  %current_mb_nr72 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i64 0, i32 3
  %30 = load i32, i32* %current_mb_nr72, align 4, !tbaa !294
  %idxprom73 = sext i32 %30 to i64
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %29, i64 %idxprom73, i32 19
  %31 = load i32, i32* %mb_field, align 8, !tbaa !329
  %tobool75 = icmp eq i32 %31, 0
  %available77 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 0
  %32 = load i32, i32* %available77, align 4, !tbaa !322
  %tobool78 = icmp ne i32 %32, 0
  br i1 %tobool75, label %if.else169, label %if.then76

if.then76:                                        ; preds = %if.else71
  br i1 %tobool78, label %cond.true79, label %cond.end105

cond.true79:                                      ; preds = %if.then76
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 1
  %33 = load i32, i32* %mb_addr, align 4, !tbaa !330
  %idxprom81 = sext i32 %33 to i64
  %mb_field83 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %29, i64 %idxprom81, i32 19
  %34 = load i32, i32* %mb_field83, align 8, !tbaa !329
  %pos_y86 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 5
  %35 = load i32, i32* %pos_y86, align 4, !tbaa !326
  %idxprom87 = sext i32 %35 to i64
  %arrayidx88 = getelementptr inbounds i8*, i8** %refPic, i64 %idxprom87
  %36 = load i8*, i8** %arrayidx88, align 8, !tbaa !1
  %pos_x89 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 4
  %37 = load i32, i32* %pos_x89, align 4, !tbaa !327
  %idxprom90 = sext i32 %37 to i64
  %arrayidx91 = getelementptr inbounds i8, i8* %36, i64 %idxprom90
  %38 = load i8, i8* %arrayidx91, align 1, !tbaa !328
  %conv92 = sext i8 %38 to i32
  %not.tobool84 = icmp eq i32 %34, 0
  %mul101 = zext i1 %not.tobool84 to i32
  %cond103 = shl nsw i32 %conv92, %mul101
  br label %cond.end105

cond.end105:                                      ; preds = %if.then76, %cond.true79
  %cond106 = phi i32 [ %cond103, %cond.true79 ], [ -1, %if.then76 ]
  %available107 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 0
  %39 = load i32, i32* %available107, align 4, !tbaa !322
  %tobool108 = icmp eq i32 %39, 0
  br i1 %tobool108, label %cond.end136, label %cond.true109

cond.true109:                                     ; preds = %cond.end105
  %mb_addr111 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 1
  %40 = load i32, i32* %mb_addr111, align 4, !tbaa !330
  %idxprom112 = sext i32 %40 to i64
  %mb_field114 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %29, i64 %idxprom112, i32 19
  %41 = load i32, i32* %mb_field114, align 8, !tbaa !329
  %pos_y117 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 5
  %42 = load i32, i32* %pos_y117, align 4, !tbaa !326
  %idxprom118 = sext i32 %42 to i64
  %arrayidx119 = getelementptr inbounds i8*, i8** %refPic, i64 %idxprom118
  %43 = load i8*, i8** %arrayidx119, align 8, !tbaa !1
  %pos_x120 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 4
  %44 = load i32, i32* %pos_x120, align 4, !tbaa !327
  %idxprom121 = sext i32 %44 to i64
  %arrayidx122 = getelementptr inbounds i8, i8* %43, i64 %idxprom121
  %45 = load i8, i8* %arrayidx122, align 1, !tbaa !328
  %conv123 = sext i8 %45 to i32
  %not.tobool115 = icmp eq i32 %41, 0
  %mul132 = zext i1 %not.tobool115 to i32
  %cond134 = shl nsw i32 %conv123, %mul132
  br label %cond.end136

cond.end136:                                      ; preds = %cond.end105, %cond.true109
  %cond137 = phi i32 [ %cond134, %cond.true109 ], [ -1, %cond.end105 ]
  %46 = load i32, i32* %available34, align 4, !tbaa !322
  %tobool139 = icmp eq i32 %46, 0
  br i1 %tobool139, label %if.end263, label %cond.true140

cond.true140:                                     ; preds = %cond.end136
  %mb_addr142 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 1
  %47 = load i32, i32* %mb_addr142, align 4, !tbaa !330
  %idxprom143 = sext i32 %47 to i64
  %mb_field145 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %29, i64 %idxprom143, i32 19
  %48 = load i32, i32* %mb_field145, align 8, !tbaa !329
  %pos_y148 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 5
  %49 = load i32, i32* %pos_y148, align 4, !tbaa !326
  %idxprom149 = sext i32 %49 to i64
  %arrayidx150 = getelementptr inbounds i8*, i8** %refPic, i64 %idxprom149
  %50 = load i8*, i8** %arrayidx150, align 8, !tbaa !1
  %pos_x151 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 4
  %51 = load i32, i32* %pos_x151, align 4, !tbaa !327
  %idxprom152 = sext i32 %51 to i64
  %arrayidx153 = getelementptr inbounds i8, i8* %50, i64 %idxprom152
  %52 = load i8, i8* %arrayidx153, align 1, !tbaa !328
  %conv154 = sext i8 %52 to i32
  %not.tobool146 = icmp eq i32 %48, 0
  %mul163 = zext i1 %not.tobool146 to i32
  %cond165 = shl nsw i32 %conv154, %mul163
  br label %if.end263

if.else169:                                       ; preds = %if.else71
  br i1 %tobool78, label %cond.true172, label %cond.end198

cond.true172:                                     ; preds = %if.else169
  %mb_addr174 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 1
  %53 = load i32, i32* %mb_addr174, align 4, !tbaa !330
  %idxprom175 = sext i32 %53 to i64
  %mb_field177 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %29, i64 %idxprom175, i32 19
  %54 = load i32, i32* %mb_field177, align 8, !tbaa !329
  %tobool178 = icmp ne i32 %54, 0
  %pos_y180 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 5
  %55 = load i32, i32* %pos_y180, align 4, !tbaa !326
  %idxprom181 = sext i32 %55 to i64
  %arrayidx182 = getelementptr inbounds i8*, i8** %refPic, i64 %idxprom181
  %56 = load i8*, i8** %arrayidx182, align 8, !tbaa !1
  %pos_x183 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 4
  %57 = load i32, i32* %pos_x183, align 4, !tbaa !327
  %idxprom184 = sext i32 %57 to i64
  %arrayidx185 = getelementptr inbounds i8, i8* %56, i64 %idxprom184
  %58 = load i8, i8* %arrayidx185, align 1, !tbaa !328
  %conv186 = sext i8 %58 to i32
  %shr = zext i1 %tobool178 to i32
  %cond196 = ashr i32 %conv186, %shr
  br label %cond.end198

cond.end198:                                      ; preds = %if.else169, %cond.true172
  %cond199 = phi i32 [ %cond196, %cond.true172 ], [ -1, %if.else169 ]
  %available200 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 0
  %59 = load i32, i32* %available200, align 4, !tbaa !322
  %tobool201 = icmp eq i32 %59, 0
  br i1 %tobool201, label %cond.end229, label %cond.true202

cond.true202:                                     ; preds = %cond.end198
  %mb_addr204 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 1
  %60 = load i32, i32* %mb_addr204, align 4, !tbaa !330
  %idxprom205 = sext i32 %60 to i64
  %mb_field207 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %29, i64 %idxprom205, i32 19
  %61 = load i32, i32* %mb_field207, align 8, !tbaa !329
  %tobool208 = icmp ne i32 %61, 0
  %pos_y210 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 5
  %62 = load i32, i32* %pos_y210, align 4, !tbaa !326
  %idxprom211 = sext i32 %62 to i64
  %arrayidx212 = getelementptr inbounds i8*, i8** %refPic, i64 %idxprom211
  %63 = load i8*, i8** %arrayidx212, align 8, !tbaa !1
  %pos_x213 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 4
  %64 = load i32, i32* %pos_x213, align 4, !tbaa !327
  %idxprom214 = sext i32 %64 to i64
  %arrayidx215 = getelementptr inbounds i8, i8* %63, i64 %idxprom214
  %65 = load i8, i8* %arrayidx215, align 1, !tbaa !328
  %conv216 = sext i8 %65 to i32
  %shr217 = zext i1 %tobool208 to i32
  %cond227 = ashr i32 %conv216, %shr217
  br label %cond.end229

cond.end229:                                      ; preds = %cond.end198, %cond.true202
  %cond230 = phi i32 [ %cond227, %cond.true202 ], [ -1, %cond.end198 ]
  %66 = load i32, i32* %available34, align 4, !tbaa !322
  %tobool232 = icmp eq i32 %66, 0
  br i1 %tobool232, label %if.end263, label %cond.true233

cond.true233:                                     ; preds = %cond.end229
  %mb_addr235 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 1
  %67 = load i32, i32* %mb_addr235, align 4, !tbaa !330
  %idxprom236 = sext i32 %67 to i64
  %mb_field238 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %29, i64 %idxprom236, i32 19
  %68 = load i32, i32* %mb_field238, align 8, !tbaa !329
  %tobool239 = icmp ne i32 %68, 0
  %pos_y241 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 5
  %69 = load i32, i32* %pos_y241, align 4, !tbaa !326
  %idxprom242 = sext i32 %69 to i64
  %arrayidx243 = getelementptr inbounds i8*, i8** %refPic, i64 %idxprom242
  %70 = load i8*, i8** %arrayidx243, align 8, !tbaa !1
  %pos_x244 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 4
  %71 = load i32, i32* %pos_x244, align 4, !tbaa !327
  %idxprom245 = sext i32 %71 to i64
  %arrayidx246 = getelementptr inbounds i8, i8* %70, i64 %idxprom245
  %72 = load i8, i8* %arrayidx246, align 1, !tbaa !328
  %conv247 = sext i8 %72 to i32
  %shr248 = zext i1 %tobool239 to i32
  %cond258 = ashr i32 %conv247, %shr248
  br label %if.end263

if.end263:                                        ; preds = %cond.true233, %cond.end229, %cond.true140, %cond.end136, %cond.true60, %cond.end56
  %73 = phi i32 [ 0, %cond.end56 ], [ %24, %cond.true60 ], [ 0, %cond.end136 ], [ %46, %cond.true140 ], [ 0, %cond.end229 ], [ %66, %cond.true233 ]
  %74 = phi i32 [ %19, %cond.end56 ], [ %19, %cond.true60 ], [ %39, %cond.end136 ], [ %39, %cond.true140 ], [ %59, %cond.end229 ], [ %59, %cond.true233 ]
  %75 = phi i32 [ %14, %cond.end56 ], [ %14, %cond.true60 ], [ %32, %cond.end136 ], [ %32, %cond.true140 ], [ %32, %cond.end229 ], [ %32, %cond.true233 ]
  %rFrameL.0 = phi i32 [ %cond, %cond.end56 ], [ %cond, %cond.true60 ], [ %cond106, %cond.end136 ], [ %cond106, %cond.true140 ], [ %cond199, %cond.end229 ], [ %cond199, %cond.true233 ]
  %rFrameU.0 = phi i32 [ %cond57, %cond.end56 ], [ %cond57, %cond.true60 ], [ %cond137, %cond.end136 ], [ %cond137, %cond.true140 ], [ %cond230, %cond.end229 ], [ %cond230, %cond.true233 ]
  %rFrameUR.0 = phi i32 [ -1, %cond.end56 ], [ %conv67, %cond.true60 ], [ -1, %cond.end136 ], [ %cond165, %cond.true140 ], [ -1, %cond.end229 ], [ %cond258, %cond.true233 ]
  %conv264 = sext i16 %ref_frame to i32
  %cmp265 = icmp eq i32 %rFrameL.0, %conv264
  %cmp265.not = xor i1 %cmp265, true
  %cmp269 = icmp eq i32 %rFrameU.0, %conv264
  %or.cond1017 = or i1 %cmp269, %cmp265.not
  %cmp273 = icmp eq i32 %rFrameUR.0, %conv264
  %or.cond1018 = or i1 %or.cond1017, %cmp273
  br i1 %or.cond1018, label %if.else276, label %if.end304

if.else276:                                       ; preds = %if.end263
  %cmp278 = icmp ne i32 %rFrameL.0, %conv264
  %or.cond1019 = and i1 %cmp278, %cmp269
  %cmp273.not = xor i1 %cmp273, true
  %or.cond1020.not = and i1 %or.cond1019, %cmp273.not
  %cmp278.not = xor i1 %cmp278, true
  %brmerge = or i1 %or.cond1020.not, %cmp278.not
  %.mux = select i1 %or.cond1020.not, i32 2, i32 0
  br i1 %brmerge, label %if.end304, label %land.lhs.true293

land.lhs.true293:                                 ; preds = %if.else276
  %cmp295 = icmp ne i32 %rFrameU.0, %conv264
  %or.cond1021 = and i1 %cmp295, %cmp273
  %. = select i1 %or.cond1021, i32 3, i32 0
  br label %if.end304

if.end304:                                        ; preds = %land.lhs.true293, %if.else276, %if.end263
  %mvPredType.0 = phi i32 [ 1, %if.end263 ], [ %.mux, %if.else276 ], [ %., %land.lhs.true293 ]
  %cmp305 = icmp eq i32 %blockshape_x, 8
  %cmp308 = icmp eq i32 %blockshape_y, 16
  %or.cond = and i1 %cmp305, %cmp308
  br i1 %or.cond, label %if.then310, label %if.else326

if.then310:                                       ; preds = %if.end304
  %cmp311 = icmp eq i32 %block_x, 0
  br i1 %cmp311, label %if.then313, label %if.else319

if.then313:                                       ; preds = %if.then310
  %.mvPredType.0 = select i1 %cmp265, i32 1, i32 %mvPredType.0
  br label %if.end349

if.else319:                                       ; preds = %if.then310
  %.mvPredType.01022 = select i1 %cmp273, i32 3, i32 %mvPredType.0
  br label %if.end349

if.else326:                                       ; preds = %if.end304
  %cmp327 = icmp eq i32 %blockshape_x, 16
  %cmp330 = icmp eq i32 %blockshape_y, 8
  %or.cond848 = and i1 %cmp327, %cmp330
  br i1 %or.cond848, label %if.then332, label %if.end349

if.then332:                                       ; preds = %if.else326
  %cmp333 = icmp eq i32 %block_y, 0
  br i1 %cmp333, label %if.then335, label %if.else341

if.then335:                                       ; preds = %if.then332
  %.mvPredType.01023 = select i1 %cmp269, i32 2, i32 %mvPredType.0
  br label %if.end349

if.else341:                                       ; preds = %if.then332
  %.mvPredType.01024 = select i1 %cmp265, i32 1, i32 %mvPredType.0
  br label %if.end349

if.end349:                                        ; preds = %if.else341, %if.then335, %if.else319, %if.then313, %if.else326
  %mvPredType.1 = phi i32 [ %mvPredType.0, %if.else326 ], [ %.mvPredType.0, %if.then313 ], [ %.mvPredType.01022, %if.else319 ], [ %.mvPredType.01023, %if.then335 ], [ %.mvPredType.01024, %if.else341 ]
  %pos_y390 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 5
  %pos_x393 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 4
  %pos_y375 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 5
  %pos_x378 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 4
  %pos_y360 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 5
  %pos_x363 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 4
  %available680 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i64 0, i32 0
  %cmp711 = icmp eq i32 %list, 1
  %pos_y697 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i64 0, i32 5
  %pos_x700 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i64 0, i32 4
  %mb_addr519 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i64 0, i32 1
  %mb_addr589 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i64 0, i32 1
  %mb_addr554 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i64 0, i32 1
  %tobool358 = icmp eq i32 %75, 0
  %tobool373 = icmp eq i32 %74, 0
  %tobool625 = icmp eq i32 %75, 0
  %tobool653 = icmp eq i32 %74, 0
  %76 = or i32 %73, %74
  %77 = icmp eq i32 %76, 0
  %mb_data403 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i64 0, i32 55
  %current_mb_nr404 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i64 0, i32 3
  %tobool411 = icmp ne i32 %75, 0
  %tobool551 = icmp eq i32 %74, 0
  %tobool445 = icmp eq i32 %74, 0
  br label %for.body

for.body:                                         ; preds = %sw.epilog, %if.end349
  %78 = phi i32 [ %73, %if.end349 ], [ %178, %sw.epilog ]
  %79 = phi i32 [ %73, %if.end349 ], [ %179, %sw.epilog ]
  %80 = phi i32 [ %73, %if.end349 ], [ %180, %sw.epilog ]
  %81 = phi i32 [ %73, %if.end349 ], [ %181, %sw.epilog ]
  %indvars.iv = phi i64 [ 0, %if.end349 ], [ %indvars.iv.next, %sw.epilog ]
  %SAD_c.01034 = phi i32 [ 0, %if.end349 ], [ %SAD_c.1, %sw.epilog ]
  %SAD_b.01033 = phi i32 [ 0, %if.end349 ], [ %SAD_b.1, %sw.epilog ]
  %SAD_a.01032 = phi i32 [ 0, %if.end349 ], [ %SAD_a.1, %sw.epilog ]
  %pred_vec.01029 = phi i32 [ 0, %if.end349 ], [ %pred_vec.2, %sw.epilog ]
  %cmp354 = icmp eq i64 %indvars.iv, 0
  %or.cond849 = or i1 %cmp354, %tobool38
  br i1 %or.cond849, label %if.then356, label %if.else402

if.then356:                                       ; preds = %for.body
  br i1 %tobool358, label %cond.end370, label %cond.true359

cond.true359:                                     ; preds = %if.then356
  %82 = load i32, i32* %pos_y360, align 4, !tbaa !326
  %idxprom361 = sext i32 %82 to i64
  %arrayidx362 = getelementptr inbounds i16**, i16*** %tmp_mv, i64 %idxprom361
  %83 = load i16**, i16*** %arrayidx362, align 8, !tbaa !1
  %84 = load i32, i32* %pos_x363, align 4, !tbaa !327
  %idxprom364 = sext i32 %84 to i64
  %arrayidx365 = getelementptr inbounds i16*, i16** %83, i64 %idxprom364
  %85 = load i16*, i16** %arrayidx365, align 8, !tbaa !1
  %arrayidx367 = getelementptr inbounds i16, i16* %85, i64 %indvars.iv
  %86 = load i16, i16* %arrayidx367, align 2, !tbaa !308
  %conv368 = sext i16 %86 to i32
  br label %cond.end370

cond.end370:                                      ; preds = %if.then356, %cond.true359
  %cond371 = phi i32 [ %conv368, %cond.true359 ], [ 0, %if.then356 ]
  br i1 %tobool373, label %cond.end385, label %cond.true374

cond.true374:                                     ; preds = %cond.end370
  %87 = load i32, i32* %pos_y375, align 4, !tbaa !326
  %idxprom376 = sext i32 %87 to i64
  %arrayidx377 = getelementptr inbounds i16**, i16*** %tmp_mv, i64 %idxprom376
  %88 = load i16**, i16*** %arrayidx377, align 8, !tbaa !1
  %89 = load i32, i32* %pos_x378, align 4, !tbaa !327
  %idxprom379 = sext i32 %89 to i64
  %arrayidx380 = getelementptr inbounds i16*, i16** %88, i64 %idxprom379
  %90 = load i16*, i16** %arrayidx380, align 8, !tbaa !1
  %arrayidx382 = getelementptr inbounds i16, i16* %90, i64 %indvars.iv
  %91 = load i16, i16* %arrayidx382, align 2, !tbaa !308
  %conv383 = sext i16 %91 to i32
  br label %cond.end385

cond.end385:                                      ; preds = %cond.end370, %cond.true374
  %cond386 = phi i32 [ %conv383, %cond.true374 ], [ 0, %cond.end370 ]
  %tobool388 = icmp eq i32 %79, 0
  br i1 %tobool388, label %if.end621, label %cond.true389

cond.true389:                                     ; preds = %cond.end385
  %92 = load i32, i32* %pos_y390, align 4, !tbaa !326
  %idxprom391 = sext i32 %92 to i64
  %arrayidx392 = getelementptr inbounds i16**, i16*** %tmp_mv, i64 %idxprom391
  %93 = load i16**, i16*** %arrayidx392, align 8, !tbaa !1
  %94 = load i32, i32* %pos_x393, align 4, !tbaa !327
  %idxprom394 = sext i32 %94 to i64
  %arrayidx395 = getelementptr inbounds i16*, i16** %93, i64 %idxprom394
  %95 = load i16*, i16** %arrayidx395, align 8, !tbaa !1
  %arrayidx397 = getelementptr inbounds i16, i16* %95, i64 %indvars.iv
  %96 = load i16, i16* %arrayidx397, align 2, !tbaa !308
  %conv398 = sext i16 %96 to i32
  br label %if.end621

if.else402:                                       ; preds = %for.body
  %97 = load %struct.macroblock*, %struct.macroblock** %mb_data403, align 8, !tbaa !293
  %98 = load i32, i32* %current_mb_nr404, align 4, !tbaa !294
  %idxprom405 = sext i32 %98 to i64
  %mb_field407 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %97, i64 %idxprom405, i32 19
  %99 = load i32, i32* %mb_field407, align 8, !tbaa !329
  %tobool408 = icmp eq i32 %99, 0
  br i1 %tobool408, label %if.else514, label %if.then409

if.then409:                                       ; preds = %if.else402
  br i1 %tobool411, label %cond.true412, label %cond.end442

cond.true412:                                     ; preds = %if.then409
  %100 = load i32, i32* %mb_addr519, align 4, !tbaa !330
  %idxprom415 = sext i32 %100 to i64
  %mb_field417 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %97, i64 %idxprom415, i32 19
  %101 = load i32, i32* %mb_field417, align 8, !tbaa !329
  %tobool418 = icmp ne i32 %101, 0
  %102 = load i32, i32* %pos_y360, align 4, !tbaa !326
  %idxprom421 = sext i32 %102 to i64
  %arrayidx422 = getelementptr inbounds i16**, i16*** %tmp_mv, i64 %idxprom421
  %103 = load i16**, i16*** %arrayidx422, align 8, !tbaa !1
  %104 = load i32, i32* %pos_x363, align 4, !tbaa !327
  %idxprom424 = sext i32 %104 to i64
  %arrayidx425 = getelementptr inbounds i16*, i16** %103, i64 %idxprom424
  %105 = load i16*, i16** %arrayidx425, align 8, !tbaa !1
  %arrayidx427 = getelementptr inbounds i16, i16* %105, i64 %indvars.iv
  %106 = load i16, i16* %arrayidx427, align 2, !tbaa !308
  %conv428 = sext i16 %106 to i32
  %div = sdiv i32 %conv428, 2
  %cond440 = select i1 %tobool418, i32 %conv428, i32 %div
  br label %cond.end442

cond.end442:                                      ; preds = %if.then409, %cond.true412
  %cond443 = phi i32 [ %cond440, %cond.true412 ], [ 0, %if.then409 ]
  br i1 %tobool445, label %cond.end477, label %cond.true446

cond.true446:                                     ; preds = %cond.end442
  %107 = load i32, i32* %mb_addr554, align 4, !tbaa !330
  %idxprom449 = sext i32 %107 to i64
  %mb_field451 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %97, i64 %idxprom449, i32 19
  %108 = load i32, i32* %mb_field451, align 8, !tbaa !329
  %tobool452 = icmp ne i32 %108, 0
  %109 = load i32, i32* %pos_y375, align 4, !tbaa !326
  %idxprom455 = sext i32 %109 to i64
  %arrayidx456 = getelementptr inbounds i16**, i16*** %tmp_mv, i64 %idxprom455
  %110 = load i16**, i16*** %arrayidx456, align 8, !tbaa !1
  %111 = load i32, i32* %pos_x378, align 4, !tbaa !327
  %idxprom458 = sext i32 %111 to i64
  %arrayidx459 = getelementptr inbounds i16*, i16** %110, i64 %idxprom458
  %112 = load i16*, i16** %arrayidx459, align 8, !tbaa !1
  %arrayidx461 = getelementptr inbounds i16, i16* %112, i64 %indvars.iv
  %113 = load i16, i16* %arrayidx461, align 2, !tbaa !308
  %conv462 = sext i16 %113 to i32
  %div473 = sdiv i32 %conv462, 2
  %cond475 = select i1 %tobool452, i32 %conv462, i32 %div473
  br label %cond.end477

cond.end477:                                      ; preds = %cond.end442, %cond.true446
  %cond478 = phi i32 [ %cond475, %cond.true446 ], [ 0, %cond.end442 ]
  %tobool480 = icmp eq i32 %81, 0
  br i1 %tobool480, label %if.end621, label %cond.true481

cond.true481:                                     ; preds = %cond.end477
  %114 = load i32, i32* %mb_addr589, align 4, !tbaa !330
  %idxprom484 = sext i32 %114 to i64
  %mb_field486 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %97, i64 %idxprom484, i32 19
  %115 = load i32, i32* %mb_field486, align 8, !tbaa !329
  %tobool487 = icmp ne i32 %115, 0
  %116 = load i32, i32* %pos_y390, align 4, !tbaa !326
  %idxprom490 = sext i32 %116 to i64
  %arrayidx491 = getelementptr inbounds i16**, i16*** %tmp_mv, i64 %idxprom490
  %117 = load i16**, i16*** %arrayidx491, align 8, !tbaa !1
  %118 = load i32, i32* %pos_x393, align 4, !tbaa !327
  %idxprom493 = sext i32 %118 to i64
  %arrayidx494 = getelementptr inbounds i16*, i16** %117, i64 %idxprom493
  %119 = load i16*, i16** %arrayidx494, align 8, !tbaa !1
  %arrayidx496 = getelementptr inbounds i16, i16* %119, i64 %indvars.iv
  %120 = load i16, i16* %arrayidx496, align 2, !tbaa !308
  %conv497 = sext i16 %120 to i32
  %div508 = sdiv i32 %conv497, 2
  %cond510 = select i1 %tobool487, i32 %conv497, i32 %div508
  br label %if.end621

if.else514:                                       ; preds = %if.else402
  br i1 %tobool411, label %cond.true517, label %cond.end548

cond.true517:                                     ; preds = %if.else514
  %121 = load i32, i32* %mb_addr519, align 4, !tbaa !330
  %idxprom520 = sext i32 %121 to i64
  %mb_field522 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %97, i64 %idxprom520, i32 19
  %122 = load i32, i32* %mb_field522, align 8, !tbaa !329
  %tobool523 = icmp ne i32 %122, 0
  %123 = load i32, i32* %pos_y360, align 4, !tbaa !326
  %idxprom526 = sext i32 %123 to i64
  %arrayidx527 = getelementptr inbounds i16**, i16*** %tmp_mv, i64 %idxprom526
  %124 = load i16**, i16*** %arrayidx527, align 8, !tbaa !1
  %125 = load i32, i32* %pos_x363, align 4, !tbaa !327
  %idxprom529 = sext i32 %125 to i64
  %arrayidx530 = getelementptr inbounds i16*, i16** %124, i64 %idxprom529
  %126 = load i16*, i16** %arrayidx530, align 8, !tbaa !1
  %arrayidx532 = getelementptr inbounds i16, i16* %126, i64 %indvars.iv
  %127 = load i16, i16* %arrayidx532, align 2, !tbaa !308
  %conv533 = sext i16 %127 to i32
  %mul534 = zext i1 %tobool523 to i32
  %cond546 = shl nsw i32 %conv533, %mul534
  br label %cond.end548

cond.end548:                                      ; preds = %if.else514, %cond.true517
  %cond549 = phi i32 [ %cond546, %cond.true517 ], [ 0, %if.else514 ]
  br i1 %tobool551, label %cond.end583, label %cond.true552

cond.true552:                                     ; preds = %cond.end548
  %128 = load i32, i32* %mb_addr554, align 4, !tbaa !330
  %idxprom555 = sext i32 %128 to i64
  %mb_field557 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %97, i64 %idxprom555, i32 19
  %129 = load i32, i32* %mb_field557, align 8, !tbaa !329
  %tobool558 = icmp ne i32 %129, 0
  %130 = load i32, i32* %pos_y375, align 4, !tbaa !326
  %idxprom561 = sext i32 %130 to i64
  %arrayidx562 = getelementptr inbounds i16**, i16*** %tmp_mv, i64 %idxprom561
  %131 = load i16**, i16*** %arrayidx562, align 8, !tbaa !1
  %132 = load i32, i32* %pos_x378, align 4, !tbaa !327
  %idxprom564 = sext i32 %132 to i64
  %arrayidx565 = getelementptr inbounds i16*, i16** %131, i64 %idxprom564
  %133 = load i16*, i16** %arrayidx565, align 8, !tbaa !1
  %arrayidx567 = getelementptr inbounds i16, i16* %133, i64 %indvars.iv
  %134 = load i16, i16* %arrayidx567, align 2, !tbaa !308
  %conv568 = sext i16 %134 to i32
  %mul569 = zext i1 %tobool558 to i32
  %cond581 = shl nsw i32 %conv568, %mul569
  br label %cond.end583

cond.end583:                                      ; preds = %cond.end548, %cond.true552
  %cond584 = phi i32 [ %cond581, %cond.true552 ], [ 0, %cond.end548 ]
  %tobool586 = icmp eq i32 %80, 0
  br i1 %tobool586, label %if.end621, label %cond.true587

cond.true587:                                     ; preds = %cond.end583
  %135 = load i32, i32* %mb_addr589, align 4, !tbaa !330
  %idxprom590 = sext i32 %135 to i64
  %mb_field592 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %97, i64 %idxprom590, i32 19
  %136 = load i32, i32* %mb_field592, align 8, !tbaa !329
  %tobool593 = icmp ne i32 %136, 0
  %137 = load i32, i32* %pos_y390, align 4, !tbaa !326
  %idxprom596 = sext i32 %137 to i64
  %arrayidx597 = getelementptr inbounds i16**, i16*** %tmp_mv, i64 %idxprom596
  %138 = load i16**, i16*** %arrayidx597, align 8, !tbaa !1
  %139 = load i32, i32* %pos_x393, align 4, !tbaa !327
  %idxprom599 = sext i32 %139 to i64
  %arrayidx600 = getelementptr inbounds i16*, i16** %138, i64 %idxprom599
  %140 = load i16*, i16** %arrayidx600, align 8, !tbaa !1
  %arrayidx602 = getelementptr inbounds i16, i16* %140, i64 %indvars.iv
  %141 = load i16, i16* %arrayidx602, align 2, !tbaa !308
  %conv603 = sext i16 %141 to i32
  %mul604 = zext i1 %tobool593 to i32
  %cond616 = shl nsw i32 %conv603, %mul604
  br label %if.end621

if.end621:                                        ; preds = %cond.true587, %cond.end583, %cond.true481, %cond.end477, %cond.true389, %cond.end385
  %142 = phi i32 [ 0, %cond.end385 ], [ %79, %cond.true389 ], [ %79, %cond.end477 ], [ %79, %cond.true481 ], [ %79, %cond.end583 ], [ %79, %cond.true587 ]
  %143 = phi i32 [ 0, %cond.end385 ], [ %79, %cond.true389 ], [ %80, %cond.end477 ], [ %80, %cond.true481 ], [ 0, %cond.end583 ], [ %80, %cond.true587 ]
  %144 = phi i32 [ 0, %cond.end385 ], [ %79, %cond.true389 ], [ 0, %cond.end477 ], [ %81, %cond.true481 ], [ 0, %cond.end583 ], [ %80, %cond.true587 ]
  %mv_b.0 = phi i32 [ %cond386, %cond.end385 ], [ %cond386, %cond.true389 ], [ %cond478, %cond.end477 ], [ %cond478, %cond.true481 ], [ %cond584, %cond.end583 ], [ %cond584, %cond.true587 ]
  %mv_c.0 = phi i32 [ 0, %cond.end385 ], [ %conv398, %cond.true389 ], [ 0, %cond.end477 ], [ %cond510, %cond.true481 ], [ 0, %cond.end583 ], [ %cond616, %cond.true587 ]
  %mv_a.0 = phi i32 [ %cond371, %cond.end385 ], [ %cond371, %cond.true389 ], [ %cond443, %cond.end477 ], [ %cond443, %cond.true481 ], [ %cond549, %cond.end583 ], [ %cond549, %cond.true587 ]
  br i1 %10, label %if.then623, label %if.end736

if.then623:                                       ; preds = %if.end621
  br i1 %tobool625, label %cond.end650, label %cond.true626

cond.true626:                                     ; preds = %if.then623
  %fastme_l1_cost.val1014 = load i32***, i32**** @fastme_l1_cost, align 8
  %fastme_l0_cost.val1015 = load i32***, i32**** @fastme_l0_cost, align 8
  %145 = select i1 %cmp711, i32*** %fastme_l1_cost.val1014, i32*** %fastme_l0_cost.val1015
  %146 = load i32, i32* @FME_blocktype, align 4, !tbaa !13
  %idxprom639 = sext i32 %146 to i64
  %arrayidx640 = getelementptr inbounds i32**, i32*** %145, i64 %idxprom639
  %147 = load i32**, i32*** %arrayidx640, align 8, !tbaa !1
  %148 = load i32, i32* %pos_y360, align 4, !tbaa !326
  %idxprom642 = sext i32 %148 to i64
  %arrayidx643 = getelementptr inbounds i32*, i32** %147, i64 %idxprom642
  %149 = load i32*, i32** %arrayidx643, align 8, !tbaa !1
  %150 = load i32, i32* %pos_x363, align 4, !tbaa !327
  %idxprom645 = sext i32 %150 to i64
  %arrayidx646 = getelementptr inbounds i32, i32* %149, i64 %idxprom645
  %151 = load i32, i32* %arrayidx646, align 4, !tbaa !13
  br label %cond.end650

cond.end650:                                      ; preds = %if.then623, %cond.true626
  %cond651 = phi i32 [ %151, %cond.true626 ], [ 0, %if.then623 ]
  br i1 %tobool653, label %cond.end678, label %cond.true654

cond.true654:                                     ; preds = %cond.end650
  %fastme_l1_cost.val1012 = load i32***, i32**** @fastme_l1_cost, align 8
  %fastme_l0_cost.val1013 = load i32***, i32**** @fastme_l0_cost, align 8
  %152 = select i1 %cmp711, i32*** %fastme_l1_cost.val1012, i32*** %fastme_l0_cost.val1013
  %153 = load i32, i32* @FME_blocktype, align 4, !tbaa !13
  %idxprom667 = sext i32 %153 to i64
  %arrayidx668 = getelementptr inbounds i32**, i32*** %152, i64 %idxprom667
  %154 = load i32**, i32*** %arrayidx668, align 8, !tbaa !1
  %155 = load i32, i32* %pos_y375, align 4, !tbaa !326
  %idxprom670 = sext i32 %155 to i64
  %arrayidx671 = getelementptr inbounds i32*, i32** %154, i64 %idxprom670
  %156 = load i32*, i32** %arrayidx671, align 8, !tbaa !1
  %157 = load i32, i32* %pos_x378, align 4, !tbaa !327
  %idxprom673 = sext i32 %157 to i64
  %arrayidx674 = getelementptr inbounds i32, i32* %156, i64 %idxprom673
  %158 = load i32, i32* %arrayidx674, align 4, !tbaa !13
  br label %cond.end678

cond.end678:                                      ; preds = %cond.end650, %cond.true654
  %cond679 = phi i32 [ %158, %cond.true654 ], [ 0, %cond.end650 ]
  %159 = load i32, i32* %available680, align 4, !tbaa !322
  %tobool681 = icmp eq i32 %159, 0
  br i1 %tobool681, label %cond.end706, label %cond.true682

cond.true682:                                     ; preds = %cond.end678
  %fastme_l1_cost.val1010 = load i32***, i32**** @fastme_l1_cost, align 8
  %fastme_l0_cost.val1011 = load i32***, i32**** @fastme_l0_cost, align 8
  %160 = select i1 %cmp711, i32*** %fastme_l1_cost.val1010, i32*** %fastme_l0_cost.val1011
  %161 = load i32, i32* @FME_blocktype, align 4, !tbaa !13
  %idxprom695 = sext i32 %161 to i64
  %arrayidx696 = getelementptr inbounds i32**, i32*** %160, i64 %idxprom695
  %162 = load i32**, i32*** %arrayidx696, align 8, !tbaa !1
  %163 = load i32, i32* %pos_y697, align 4, !tbaa !326
  %idxprom698 = sext i32 %163 to i64
  %arrayidx699 = getelementptr inbounds i32*, i32** %162, i64 %idxprom698
  %164 = load i32*, i32** %arrayidx699, align 8, !tbaa !1
  %165 = load i32, i32* %pos_x700, align 4, !tbaa !327
  %idxprom701 = sext i32 %165 to i64
  %arrayidx702 = getelementptr inbounds i32, i32* %164, i64 %idxprom701
  %166 = load i32, i32* %arrayidx702, align 4, !tbaa !13
  br label %cond.end706

cond.end706:                                      ; preds = %cond.end678, %cond.true682
  %cond707 = phi i32 [ %166, %cond.true682 ], [ 0, %cond.end678 ]
  %tobool709 = icmp eq i32 %78, 0
  br i1 %tobool709, label %if.end736, label %cond.true710

cond.true710:                                     ; preds = %cond.end706
  %fastme_l1_cost.val = load i32***, i32**** @fastme_l1_cost, align 8
  %fastme_l0_cost.val = load i32***, i32**** @fastme_l0_cost, align 8
  %167 = select i1 %cmp711, i32*** %fastme_l1_cost.val, i32*** %fastme_l0_cost.val
  %168 = load i32, i32* @FME_blocktype, align 4, !tbaa !13
  %idxprom723 = sext i32 %168 to i64
  %arrayidx724 = getelementptr inbounds i32**, i32*** %167, i64 %idxprom723
  %169 = load i32**, i32*** %arrayidx724, align 8, !tbaa !1
  %170 = load i32, i32* %pos_y390, align 4, !tbaa !326
  %idxprom726 = sext i32 %170 to i64
  %arrayidx727 = getelementptr inbounds i32*, i32** %169, i64 %idxprom726
  %171 = load i32*, i32** %arrayidx727, align 8, !tbaa !1
  %172 = load i32, i32* %pos_x393, align 4, !tbaa !327
  %idxprom729 = sext i32 %172 to i64
  %arrayidx730 = getelementptr inbounds i32, i32* %171, i64 %idxprom729
  %173 = load i32, i32* %arrayidx730, align 4, !tbaa !13
  br label %if.end736

if.end736:                                        ; preds = %cond.true710, %cond.end706, %if.end621
  %174 = phi i32 [ %78, %if.end621 ], [ 0, %cond.end706 ], [ %78, %cond.true710 ]
  %175 = phi i32 [ %142, %if.end621 ], [ 0, %cond.end706 ], [ %78, %cond.true710 ]
  %176 = phi i32 [ %143, %if.end621 ], [ 0, %cond.end706 ], [ %78, %cond.true710 ]
  %177 = phi i32 [ %144, %if.end621 ], [ 0, %cond.end706 ], [ %78, %cond.true710 ]
  %SAD_a.1 = phi i32 [ %SAD_a.01032, %if.end621 ], [ %cond651, %cond.end706 ], [ %cond651, %cond.true710 ]
  %SAD_b.1 = phi i32 [ %SAD_b.01033, %if.end621 ], [ %cond679, %cond.end706 ], [ %cond679, %cond.true710 ]
  %SAD_c.1 = phi i32 [ %SAD_c.01034, %if.end621 ], [ %cond707, %cond.end706 ], [ %173, %cond.true710 ]
  switch i32 %mvPredType.1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb814
    i32 2, label %sw.bb820
    i32 3, label %sw.bb826
  ]

sw.bb:                                            ; preds = %if.end736
  br i1 %77, label %if.then742, label %if.end788

if.then742:                                       ; preds = %sw.bb
  br i1 %10, label %if.end788.thread, label %sw.epilog

if.end788.thread:                                 ; preds = %if.then742
  %arrayidx746 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %indvars.iv
  store i32 %SAD_a.1, i32* %arrayidx746, align 4, !tbaa !13
  br label %if.then790

if.end788:                                        ; preds = %sw.bb
  %cmp751 = icmp slt i32 %mv_b.0, %mv_c.0
  %cond756 = select i1 %cmp751, i32 %mv_b.0, i32 %mv_c.0
  %cmp757 = icmp slt i32 %mv_a.0, %cond756
  %mv_a.0.cond756 = select i1 %cmp757, i32 %mv_a.0, i32 %cond756
  %cmp769 = icmp sgt i32 %mv_b.0, %mv_c.0
  %cond774 = select i1 %cmp769, i32 %mv_b.0, i32 %mv_c.0
  %cmp775 = icmp sgt i32 %mv_a.0, %cond774
  %cond786 = select i1 %cmp775, i32 %mv_a.0, i32 %cond774
  %add749 = add i32 %mv_c.0, %mv_b.0
  %add750 = add i32 %add749, %mv_a.0
  %sub = sub i32 %add750, %mv_a.0.cond756
  %sub787 = sub i32 %sub, %cond786
  br i1 %10, label %if.then790, label %sw.epilog

if.then790:                                       ; preds = %if.end788.thread, %if.end788
  %pred_vec.11026 = phi i32 [ %mv_a.0, %if.end788.thread ], [ %sub787, %if.end788 ]
  %cmp791 = icmp eq i32 %pred_vec.11026, %mv_a.0
  %cmp794 = icmp ne i32 %SAD_a.1, 0
  %or.cond865 = and i1 %cmp794, %cmp791
  br i1 %or.cond865, label %if.end812, label %if.else799

if.else799:                                       ; preds = %if.then790
  %cmp800 = icmp eq i32 %pred_vec.11026, %mv_b.0
  %cmp803 = icmp ne i32 %SAD_b.1, 0
  %or.cond866 = and i1 %cmp803, %cmp800
  %.sink = select i1 %or.cond866, i32 %SAD_b.1, i32 %SAD_c.1
  br label %if.end812

if.end812:                                        ; preds = %if.then790, %if.else799
  %.sink.sink = phi i32 [ %.sink, %if.else799 ], [ %SAD_a.1, %if.then790 ]
  %arrayidx810 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %indvars.iv
  store i32 %.sink.sink, i32* %arrayidx810, align 4, !tbaa !13
  br label %sw.epilog

sw.bb814:                                         ; preds = %if.end736
  br i1 %10, label %if.then816, label %sw.epilog

if.then816:                                       ; preds = %sw.bb814
  %arrayidx818 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %indvars.iv
  store i32 %SAD_a.1, i32* %arrayidx818, align 4, !tbaa !13
  br label %sw.epilog

sw.bb820:                                         ; preds = %if.end736
  br i1 %10, label %if.then822, label %sw.epilog

if.then822:                                       ; preds = %sw.bb820
  %arrayidx824 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %indvars.iv
  store i32 %SAD_b.1, i32* %arrayidx824, align 4, !tbaa !13
  br label %sw.epilog

sw.bb826:                                         ; preds = %if.end736
  br i1 %10, label %if.then828, label %sw.epilog

if.then828:                                       ; preds = %sw.bb826
  %arrayidx830 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %indvars.iv
  store i32 %SAD_c.1, i32* %arrayidx830, align 4, !tbaa !13
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then742, %if.end736, %sw.bb826, %if.then828, %sw.bb820, %if.then822, %sw.bb814, %if.then816, %if.end788, %if.end812
  %178 = phi i32 [ %174, %if.end736 ], [ %174, %if.then828 ], [ %174, %sw.bb826 ], [ %174, %if.then822 ], [ %174, %sw.bb820 ], [ %174, %if.then816 ], [ %174, %sw.bb814 ], [ %73, %if.end812 ], [ %73, %if.end788 ], [ %73, %if.then742 ]
  %179 = phi i32 [ %175, %if.end736 ], [ %175, %if.then828 ], [ %175, %sw.bb826 ], [ %175, %if.then822 ], [ %175, %sw.bb820 ], [ %175, %if.then816 ], [ %175, %sw.bb814 ], [ %73, %if.end812 ], [ %73, %if.end788 ], [ %73, %if.then742 ]
  %180 = phi i32 [ %176, %if.end736 ], [ %176, %if.then828 ], [ %176, %sw.bb826 ], [ %176, %if.then822 ], [ %176, %sw.bb820 ], [ %176, %if.then816 ], [ %176, %sw.bb814 ], [ %73, %if.end812 ], [ %73, %if.end788 ], [ %73, %if.then742 ]
  %181 = phi i32 [ %177, %if.end736 ], [ %177, %if.then828 ], [ %177, %sw.bb826 ], [ %177, %if.then822 ], [ %177, %sw.bb820 ], [ %177, %if.then816 ], [ %177, %sw.bb814 ], [ %73, %if.end812 ], [ %73, %if.end788 ], [ %73, %if.then742 ]
  %pred_vec.2 = phi i32 [ %pred_vec.01029, %if.end736 ], [ %mv_c.0, %if.then828 ], [ %mv_c.0, %sw.bb826 ], [ %mv_b.0, %if.then822 ], [ %mv_b.0, %sw.bb820 ], [ %mv_a.0, %if.then816 ], [ %mv_a.0, %sw.bb814 ], [ %pred_vec.11026, %if.end812 ], [ %sub787, %if.end788 ], [ %mv_a.0, %if.then742 ]
  %conv832 = trunc i32 %pred_vec.2 to i16
  %arrayidx834 = getelementptr inbounds i16, i16* %pmv, i64 %indvars.iv
  store i16 %conv832, i16* %arrayidx834, align 2, !tbaa !308
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 2
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %sw.epilog
  br i1 %10, label %if.then836, label %if.end847

if.then836:                                       ; preds = %for.end
  %arrayidx837 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 0
  %182 = load i32, i32* %arrayidx837, align 4, !tbaa !13
  %arrayidx838 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 1
  %183 = load i32, i32* %arrayidx838, align 4, !tbaa !13
  %cmp839 = icmp sgt i32 %182, %183
  %.sink868 = zext i1 %cmp839 to i64
  %arrayidx844 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %.sink868
  %184 = load i32, i32* %arrayidx844, align 4, !tbaa !13
  store i32 %184, i32* @pred_SAD_space, align 4, !tbaa !13
  br label %if.end847

if.end847:                                        ; preds = %if.then836, %for.end
  call void @llvm.lifetime.end(i64 8, i8* nonnull %6) #8
  call void @llvm.lifetime.end(i64 24, i8* nonnull %5) #8
  call void @llvm.lifetime.end(i64 24, i8* nonnull %4) #8
  call void @llvm.lifetime.end(i64 24, i8* nonnull %3) #8
  call void @llvm.lifetime.end(i64 24, i8* nonnull %2) #8
  ret void
}

declare i16* @FastLine16Y_11(i16*, i32, i32, i32, i32) #3

declare i16* @UMVLine16Y_11(i16*, i32, i32, i32, i32) #3

declare void @getLuma4x4Neighbour(i32, i32, i32, i32, i32, %struct.pix_pos*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind uwtable
define void @Init_Motion_Search_Module() local_unnamed_addr #0 {
entry:
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %search_range1 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i64 0, i32 8
  %1 = load i32, i32* %search_range1, align 8, !tbaa !5
  %mul = shl nsw i32 %1, 1
  %add = or i32 %mul, 1
  %mul4 = mul nsw i32 %add, %add
  %2 = icmp ugt i32 %mul4, 9
  %.mul4 = select i1 %2, i32 %mul4, i32 9
  %3 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %3, i64 0, i32 9
  %4 = load i32, i32* %max_num_references, align 4, !tbaa !9
  %add10 = add nsw i32 %4, 1
  %5 = icmp sgt i32 %add10, 16
  %cond17 = select i1 %5, i32 %add10, i32 16
  %conv = sitofp i32 %cond17 to double
  %call = tail call double @log(double %conv) #8
  %div = fdiv double %call, 0x3FE62E42FEFA39EF
  %add19 = fadd double %div, 1.000000e-10
  %call20 = tail call double @floor(double %add19) #9
  %conv21 = fptosi double %call20 to i32
  %mul22 = shl nsw i32 %conv21, 1
  %add23 = or i32 %mul22, 1
  %add24 = add nsw i32 %conv21, 1
  %shl = shl i32 1, %add24
  %sub = add nsw i32 %shl, -1
  %add26 = shl i32 %1, 3
  %add28 = add i32 %add26, 13
  %conv29 = sitofp i32 %add28 to double
  %call30 = tail call double @log(double %conv29) #8
  %div32 = fdiv double %call30, 0x3FE62E42FEFA39EF
  %add33 = fadd double %div32, 1.000000e-10
  %call34 = tail call double @ceil(double %add33) #9
  %conv35 = fptosi double %call34 to i32
  %mul36 = shl nsw i32 %conv35, 1
  %add37 = add nsw i32 %mul36, 3
  %shr38 = ashr i32 %add37, 1
  %shl39 = shl i32 1, %shr38
  %sub40 = add nsw i32 %shl39, -1
  store i32 %sub40, i32* @max_mvd, align 4, !tbaa !13
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i64 0, i32 163
  %7 = load i32, i32* %max_imgpel_value, align 4, !tbaa !331
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i64 0, i32 164
  %8 = load i32, i32* %max_imgpel_value_uv, align 8, !tbaa !332
  %cmp41 = icmp sgt i32 %7, %8
  %. = select i1 %cmp41, i32 %7, i32 %8
  %add49 = shl i32 %., 6
  %mul50 = add i32 %add49, 64
  store i32 %mul50, i32* @byte_abs_range, align 4, !tbaa !13
  %conv53334 = zext i32 %.mul4 to i64
  %call54 = tail call noalias i8* @calloc(i64 %conv53334, i64 2) #8
  store i8* %call54, i8** bitcast (i16** @spiral_search_x to i8**), align 8, !tbaa !1
  %cmp55 = icmp eq i8* %call54, null
  br i1 %cmp55, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @no_mem_exit(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0)) #8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call58 = tail call noalias i8* @calloc(i64 %conv53334, i64 2) #8
  store i8* %call58, i8** bitcast (i16** @spiral_search_y to i8**), align 8, !tbaa !1
  %cmp59 = icmp eq i8* %call58, null
  br i1 %cmp59, label %if.then61, label %if.end62

if.then61:                                        ; preds = %if.end
  tail call void @no_mem_exit(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i64 0, i64 0)) #8
  br label %if.end62

if.end62:                                         ; preds = %if.then61, %if.end
  %call64 = tail call noalias i8* @calloc(i64 %conv53334, i64 2) #8
  store i8* %call64, i8** bitcast (i16** @spiral_hpel_search_x to i8**), align 8, !tbaa !1
  %cmp65 = icmp eq i8* %call64, null
  br i1 %cmp65, label %if.then67, label %if.end68

if.then67:                                        ; preds = %if.end62
  tail call void @no_mem_exit(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.8, i64 0, i64 0)) #8
  br label %if.end68

if.end68:                                         ; preds = %if.then67, %if.end62
  %call70 = tail call noalias i8* @calloc(i64 %conv53334, i64 2) #8
  store i8* %call70, i8** bitcast (i16** @spiral_hpel_search_y to i8**), align 8, !tbaa !1
  %cmp71 = icmp eq i8* %call70, null
  br i1 %cmp71, label %if.then73, label %if.end74

if.then73:                                        ; preds = %if.end68
  tail call void @no_mem_exit(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0)) #8
  br label %if.end74

if.end74:                                         ; preds = %if.then73, %if.end68
  %9 = load i32, i32* @max_mvd, align 4, !tbaa !13
  %mul75 = shl nsw i32 %9, 1
  %add76 = or i32 %mul75, 1
  %conv77 = sext i32 %add76 to i64
  %call78 = tail call noalias i8* @calloc(i64 %conv77, i64 4) #8
  store i8* %call78, i8** bitcast (i32** @mvbits to i8**), align 8, !tbaa !1
  %cmp79 = icmp eq i8* %call78, null
  br i1 %cmp79, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.end74
  tail call void @no_mem_exit(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0)) #8
  br label %if.end82

if.end82:                                         ; preds = %if.then81, %if.end74
  %conv83 = sext i32 %sub to i64
  %call84 = tail call noalias i8* @calloc(i64 %conv83, i64 4) #8
  store i8* %call84, i8** bitcast (i32** @refbits to i8**), align 8, !tbaa !1
  %cmp85 = icmp eq i8* %call84, null
  br i1 %cmp85, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.end82
  tail call void @no_mem_exit(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0)) #8
  br label %if.end88

if.end88:                                         ; preds = %if.then87, %if.end82
  %10 = load i32, i32* @byte_abs_range, align 4, !tbaa !13
  %conv89 = sext i32 %10 to i64
  %call90 = tail call noalias i8* @calloc(i64 %conv89, i64 4) #8
  store i8* %call90, i8** bitcast (i32** @byte_abs to i8**), align 8, !tbaa !1
  %cmp91 = icmp eq i8* %call90, null
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end88
  tail call void @no_mem_exit(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i64 0, i64 0)) #8
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end88
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %max_num_references95 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i64 0, i32 9
  %12 = load i32, i32* %max_num_references95, align 4, !tbaa !9
  %call96 = tail call i32 @get_mem4Dint(i32***** nonnull @motion_cost, i32 8, i32 2, i32 %12, i32 4) #8
  %13 = load i32, i32* @max_mvd, align 4, !tbaa !13
  %14 = load i32*, i32** @mvbits, align 8, !tbaa !1
  %idx.ext = sext i32 %13 to i64
  %add.ptr = getelementptr inbounds i32, i32* %14, i64 %idx.ext
  store i32* %add.ptr, i32** @mvbits, align 8, !tbaa !1
  %15 = load i32, i32* @byte_abs_range, align 4, !tbaa !13
  %div97 = sdiv i32 %15, 2
  %16 = load i32*, i32** @byte_abs, align 8, !tbaa !1
  %idx.ext98 = sext i32 %div97 to i64
  %add.ptr99 = getelementptr inbounds i32, i32* %16, i64 %idx.ext98
  store i32* %add.ptr99, i32** @byte_abs, align 8, !tbaa !1
  store i32 1, i32* %add.ptr, align 4, !tbaa !13
  %cmp100355 = icmp slt i32 %conv35, 0
  br i1 %cmp100355, label %for.end115, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end94
  %17 = load i32*, i32** @mvbits, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc113
  %bits.0356 = phi i32 [ 3, %for.body.lr.ph ], [ %add114, %for.inc113 ]
  %shr102 = ashr i32 %bits.0356, 1
  %shl103 = shl i32 1, %shr102
  %shr104 = ashr i32 %shl103, 1
  %cmp106353 = icmp slt i32 %shr104, %shl103
  br i1 %cmp106353, label %for.body108.preheader, label %for.inc113

for.body108.preheader:                            ; preds = %for.body
  %18 = sext i32 %shr104 to i64
  %wide.trip.count379 = sext i32 %shl103 to i64
  %19 = sub nsw i64 %wide.trip.count379, %18
  %20 = add nsw i64 %wide.trip.count379, -1
  %21 = sub nsw i64 %20, %18
  %xtraiter390 = and i64 %19, 3
  %lcmp.mod391 = icmp eq i64 %xtraiter390, 0
  br i1 %lcmp.mod391, label %for.body108.prol.loopexit, label %for.body108.prol.preheader

for.body108.prol.preheader:                       ; preds = %for.body108.preheader
  br label %for.body108.prol

for.body108.prol:                                 ; preds = %for.body108.prol, %for.body108.prol.preheader
  %indvars.iv376.prol = phi i64 [ %18, %for.body108.prol.preheader ], [ %indvars.iv.next377.prol, %for.body108.prol ]
  %prol.iter392 = phi i64 [ %xtraiter390, %for.body108.prol.preheader ], [ %prol.iter392.sub, %for.body108.prol ]
  %arrayidx109.prol = getelementptr inbounds i32, i32* %17, i64 %indvars.iv376.prol
  store i32 %bits.0356, i32* %arrayidx109.prol, align 4, !tbaa !13
  %22 = sub nsw i64 0, %indvars.iv376.prol
  %arrayidx112.prol = getelementptr inbounds i32, i32* %17, i64 %22
  store i32 %bits.0356, i32* %arrayidx112.prol, align 4, !tbaa !13
  %indvars.iv.next377.prol = add nsw i64 %indvars.iv376.prol, 1
  %prol.iter392.sub = add i64 %prol.iter392, -1
  %prol.iter392.cmp = icmp eq i64 %prol.iter392.sub, 0
  br i1 %prol.iter392.cmp, label %for.body108.prol.loopexit.unr-lcssa, label %for.body108.prol, !llvm.loop !333

for.body108.prol.loopexit.unr-lcssa:              ; preds = %for.body108.prol
  br label %for.body108.prol.loopexit

for.body108.prol.loopexit:                        ; preds = %for.body108.preheader, %for.body108.prol.loopexit.unr-lcssa
  %indvars.iv376.unr = phi i64 [ %18, %for.body108.preheader ], [ %indvars.iv.next377.prol, %for.body108.prol.loopexit.unr-lcssa ]
  %23 = icmp ult i64 %21, 3
  br i1 %23, label %for.inc113.loopexit, label %for.body108.preheader.new

for.body108.preheader.new:                        ; preds = %for.body108.prol.loopexit
  br label %for.body108

for.body108:                                      ; preds = %for.body108, %for.body108.preheader.new
  %indvars.iv376 = phi i64 [ %indvars.iv376.unr, %for.body108.preheader.new ], [ %indvars.iv.next377.3, %for.body108 ]
  %arrayidx109 = getelementptr inbounds i32, i32* %17, i64 %indvars.iv376
  store i32 %bits.0356, i32* %arrayidx109, align 4, !tbaa !13
  %24 = sub nsw i64 0, %indvars.iv376
  %arrayidx112 = getelementptr inbounds i32, i32* %17, i64 %24
  store i32 %bits.0356, i32* %arrayidx112, align 4, !tbaa !13
  %indvars.iv.next377 = add nsw i64 %indvars.iv376, 1
  %arrayidx109.1 = getelementptr inbounds i32, i32* %17, i64 %indvars.iv.next377
  store i32 %bits.0356, i32* %arrayidx109.1, align 4, !tbaa !13
  %25 = xor i64 %indvars.iv376, -1
  %arrayidx112.1 = getelementptr inbounds i32, i32* %17, i64 %25
  store i32 %bits.0356, i32* %arrayidx112.1, align 4, !tbaa !13
  %indvars.iv.next377.1 = add nsw i64 %indvars.iv376, 2
  %arrayidx109.2 = getelementptr inbounds i32, i32* %17, i64 %indvars.iv.next377.1
  store i32 %bits.0356, i32* %arrayidx109.2, align 4, !tbaa !13
  %26 = sub i64 -2, %indvars.iv376
  %arrayidx112.2 = getelementptr inbounds i32, i32* %17, i64 %26
  store i32 %bits.0356, i32* %arrayidx112.2, align 4, !tbaa !13
  %indvars.iv.next377.2 = add nsw i64 %indvars.iv376, 3
  %arrayidx109.3 = getelementptr inbounds i32, i32* %17, i64 %indvars.iv.next377.2
  store i32 %bits.0356, i32* %arrayidx109.3, align 4, !tbaa !13
  %27 = sub i64 -3, %indvars.iv376
  %arrayidx112.3 = getelementptr inbounds i32, i32* %17, i64 %27
  store i32 %bits.0356, i32* %arrayidx112.3, align 4, !tbaa !13
  %indvars.iv.next377.3 = add nsw i64 %indvars.iv376, 4
  %exitcond380.3 = icmp eq i64 %indvars.iv.next377.3, %wide.trip.count379
  br i1 %exitcond380.3, label %for.inc113.loopexit.unr-lcssa, label %for.body108

for.inc113.loopexit.unr-lcssa:                    ; preds = %for.body108
  br label %for.inc113.loopexit

for.inc113.loopexit:                              ; preds = %for.body108.prol.loopexit, %for.inc113.loopexit.unr-lcssa
  br label %for.inc113

for.inc113:                                       ; preds = %for.inc113.loopexit, %for.body
  %add114 = add nuw nsw i32 %bits.0356, 2
  %cmp100 = icmp sgt i32 %add114, %add37
  br i1 %cmp100, label %for.end115.loopexit, label %for.body

for.end115.loopexit:                              ; preds = %for.inc113
  br label %for.end115

for.end115:                                       ; preds = %for.end115.loopexit, %if.end94
  %28 = load i32*, i32** @refbits, align 8, !tbaa !1
  store i32 1, i32* %28, align 4, !tbaa !13
  %cmp118351 = icmp slt i32 %add23, 3
  br i1 %cmp118351, label %for.end137, label %for.body120.lr.ph

for.body120.lr.ph:                                ; preds = %for.end115
  %29 = load i32*, i32** @refbits, align 8
  br label %for.body120

for.body120:                                      ; preds = %for.body120.lr.ph, %for.inc135
  %bits.1352 = phi i32 [ 3, %for.body120.lr.ph ], [ %add136, %for.inc135 ]
  %shr121 = ashr i32 %bits.1352, 1
  %add122 = add nsw i32 %shr121, 1
  %shl123 = shl i32 1, %add122
  %sub124 = add nsw i32 %shl123, -1
  %shr125 = ashr i32 %sub124, 1
  %cmp127349 = icmp slt i32 %shr125, %sub124
  br i1 %cmp127349, label %for.body129.preheader, label %for.inc135

for.body129.preheader:                            ; preds = %for.body120
  %30 = sext i32 %shr125 to i64
  %wide.trip.count = sext i32 %sub124 to i64
  %31 = sub nsw i64 %wide.trip.count, %30
  %min.iters.check = icmp ult i64 %31, 8
  br i1 %min.iters.check, label %for.body129.preheader385, label %min.iters.checked

min.iters.checked:                                ; preds = %for.body129.preheader
  %n.vec = and i64 %31, -8
  %cmp.zero = icmp eq i64 %n.vec, 0
  %ind.end = add nsw i64 %30, %n.vec
  br i1 %cmp.zero, label %for.body129.preheader385, label %vector.ph

vector.ph:                                        ; preds = %min.iters.checked
  %broadcast.splatinsert383 = insertelement <4 x i32> undef, i32 %bits.1352, i32 0
  %broadcast.splat384 = shufflevector <4 x i32> %broadcast.splatinsert383, <4 x i32> undef, <4 x i32> zeroinitializer
  %32 = add nsw i64 %n.vec, -8
  %33 = lshr exact i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %xtraiter388 = and i64 %34, 3
  %lcmp.mod389 = icmp eq i64 %xtraiter388, 0
  br i1 %lcmp.mod389, label %vector.body.prol.loopexit, label %vector.body.prol.preheader

vector.body.prol.preheader:                       ; preds = %vector.ph
  br label %vector.body.prol

vector.body.prol:                                 ; preds = %vector.body.prol, %vector.body.prol.preheader
  %index.prol = phi i64 [ 0, %vector.body.prol.preheader ], [ %index.next.prol, %vector.body.prol ]
  %prol.iter = phi i64 [ %xtraiter388, %vector.body.prol.preheader ], [ %prol.iter.sub, %vector.body.prol ]
  %35 = add i64 %30, %index.prol
  %36 = getelementptr inbounds i32, i32* %29, i64 %35
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> %broadcast.splat384, <4 x i32>* %37, align 4, !tbaa !13
  %38 = getelementptr i32, i32* %36, i64 4
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> %broadcast.splat384, <4 x i32>* %39, align 4, !tbaa !13
  %index.next.prol = add i64 %index.prol, 8
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %vector.body.prol.loopexit.unr-lcssa, label %vector.body.prol, !llvm.loop !334

vector.body.prol.loopexit.unr-lcssa:              ; preds = %vector.body.prol
  br label %vector.body.prol.loopexit

vector.body.prol.loopexit:                        ; preds = %vector.ph, %vector.body.prol.loopexit.unr-lcssa
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.prol, %vector.body.prol.loopexit.unr-lcssa ]
  %40 = icmp ult i64 %32, 24
  br i1 %40, label %middle.block, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.body.prol.loopexit
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ %index.unr, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %41 = add i64 %30, %index
  %42 = getelementptr inbounds i32, i32* %29, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> %broadcast.splat384, <4 x i32>* %43, align 4, !tbaa !13
  %44 = getelementptr i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> %broadcast.splat384, <4 x i32>* %45, align 4, !tbaa !13
  %index.next = add i64 %index, 8
  %46 = add i64 %30, %index.next
  %47 = getelementptr inbounds i32, i32* %29, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> %broadcast.splat384, <4 x i32>* %48, align 4, !tbaa !13
  %49 = getelementptr i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> %broadcast.splat384, <4 x i32>* %50, align 4, !tbaa !13
  %index.next.1 = add i64 %index, 16
  %51 = add i64 %30, %index.next.1
  %52 = getelementptr inbounds i32, i32* %29, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> %broadcast.splat384, <4 x i32>* %53, align 4, !tbaa !13
  %54 = getelementptr i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> %broadcast.splat384, <4 x i32>* %55, align 4, !tbaa !13
  %index.next.2 = add i64 %index, 24
  %56 = add i64 %30, %index.next.2
  %57 = getelementptr inbounds i32, i32* %29, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> %broadcast.splat384, <4 x i32>* %58, align 4, !tbaa !13
  %59 = getelementptr i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> %broadcast.splat384, <4 x i32>* %60, align 4, !tbaa !13
  %index.next.3 = add i64 %index, 32
  %61 = icmp eq i64 %index.next.3, %n.vec
  br i1 %61, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !335

middle.block.unr-lcssa:                           ; preds = %vector.body
  br label %middle.block

middle.block:                                     ; preds = %vector.body.prol.loopexit, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %31, %n.vec
  br i1 %cmp.n, label %for.inc135, label %for.body129.preheader385

for.body129.preheader385:                         ; preds = %middle.block, %min.iters.checked, %for.body129.preheader
  %indvars.iv373.ph = phi i64 [ %30, %min.iters.checked ], [ %30, %for.body129.preheader ], [ %ind.end, %middle.block ]
  br label %for.body129

for.body129:                                      ; preds = %for.body129.preheader385, %for.body129
  %indvars.iv373 = phi i64 [ %indvars.iv.next374, %for.body129 ], [ %indvars.iv373.ph, %for.body129.preheader385 ]
  %arrayidx131 = getelementptr inbounds i32, i32* %29, i64 %indvars.iv373
  store i32 %bits.1352, i32* %arrayidx131, align 4, !tbaa !13
  %indvars.iv.next374 = add nsw i64 %indvars.iv373, 1
  %exitcond375 = icmp eq i64 %indvars.iv.next374, %wide.trip.count
  br i1 %exitcond375, label %for.inc135.loopexit, label %for.body129, !llvm.loop !336

for.inc135.loopexit:                              ; preds = %for.body129
  br label %for.inc135

for.inc135:                                       ; preds = %for.inc135.loopexit, %middle.block, %for.body120
  %add136 = add nuw nsw i32 %bits.1352, 2
  %cmp118 = icmp sgt i32 %add136, %add23
  br i1 %cmp118, label %for.end137.loopexit, label %for.body120

for.end137.loopexit:                              ; preds = %for.inc135
  br label %for.end137

for.end137:                                       ; preds = %for.end137.loopexit, %for.end115
  store i32 0, i32* %add.ptr99, align 4, !tbaa !13
  %62 = load i32, i32* @byte_abs_range, align 4, !tbaa !13
  %cmp141347 = icmp sgt i32 %62, 3
  br i1 %cmp141347, label %for.body143.preheader, label %for.end151

for.body143.preheader:                            ; preds = %for.end137
  br label %for.body143

for.body143:                                      ; preds = %for.body143.preheader, %for.body143
  %indvars.iv370 = phi i64 [ %indvars.iv.next371, %for.body143 ], [ 1, %for.body143.preheader ]
  %63 = sub nsw i64 0, %indvars.iv370
  %arrayidx146 = getelementptr inbounds i32, i32* %add.ptr99, i64 %63
  %64 = trunc i64 %indvars.iv370 to i32
  store i32 %64, i32* %arrayidx146, align 4, !tbaa !13
  %arrayidx148 = getelementptr inbounds i32, i32* %add.ptr99, i64 %indvars.iv370
  store i32 %64, i32* %arrayidx148, align 4, !tbaa !13
  %indvars.iv.next371 = add nuw nsw i64 %indvars.iv370, 1
  %65 = load i32, i32* @byte_abs_range, align 4, !tbaa !13
  %div140 = sdiv i32 %65, 2
  %66 = sext i32 %div140 to i64
  %cmp141 = icmp slt i64 %indvars.iv.next371, %66
  br i1 %cmp141, label %for.body143, label %for.end151.loopexit

for.end151.loopexit:                              ; preds = %for.body143
  br label %for.end151

for.end151:                                       ; preds = %for.end151.loopexit, %for.end137
  %67 = load i16*, i16** @spiral_search_y, align 8, !tbaa !1
  store i16 0, i16* %67, align 2, !tbaa !308
  %68 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  store i16 0, i16* %68, align 2, !tbaa !308
  %69 = load i16*, i16** @spiral_hpel_search_y, align 8, !tbaa !1
  store i16 0, i16* %69, align 2, !tbaa !308
  %70 = load i16*, i16** @spiral_hpel_search_x, align 8, !tbaa !1
  store i16 0, i16* %70, align 2, !tbaa !308
  %71 = icmp sgt i32 %1, 1
  %cond162 = select i1 %71, i32 %1, i32 1
  %72 = load i16*, i16** @spiral_search_x, align 8
  %73 = load i16*, i16** @spiral_search_y, align 8
  %74 = load i16*, i16** @spiral_hpel_search_x, align 8
  %75 = load i16*, i16** @spiral_hpel_search_y, align 8
  br label %for.body171.lr.ph

for.body171.lr.ph:                                ; preds = %for.end151, %for.inc247
  %indvar = phi i32 [ 0, %for.end151 ], [ %indvar.next, %for.inc247 ]
  %indvars.iv367 = phi i32 [ 2, %for.end151 ], [ %indvars.iv.next368, %for.inc247 ]
  %indvars.iv365 = phi i64 [ 6, %for.end151 ], [ %indvars.iv.next366, %for.inc247 ]
  %indvars.iv360 = phi i32 [ 1, %for.end151 ], [ %indvars.iv.next361, %for.inc247 ]
  %indvars.iv358 = phi i64 [ 2, %for.end151 ], [ %indvars.iv.next359, %for.inc247 ]
  %k.0345 = phi i64 [ 1, %for.end151 ], [ %87, %for.inc247 ]
  %sub166 = sub nsw i32 0, %indvars.iv360
  %add167 = sub nsw i32 1, %indvars.iv360
  %conv176 = trunc i32 %sub166 to i16
  %conv185 = shl i16 %conv176, 1
  %conv192 = trunc i32 %indvars.iv360 to i16
  %conv200 = shl i16 %conv192, 1
  %sext = shl i64 %k.0345, 32
  %76 = ashr exact i64 %sext, 32
  br i1 true, label %for.body171.prol.preheader, label %for.body171.prol.loopexit.unr-lcssa

for.body171.prol.preheader:                       ; preds = %for.body171.lr.ph
  br label %for.body171.prol

for.body171.prol:                                 ; preds = %for.body171.prol.preheader
  %conv172.prol = trunc i32 %add167 to i16
  %arrayidx174.prol = getelementptr inbounds i16, i16* %72, i64 %76
  store i16 %conv172.prol, i16* %arrayidx174.prol, align 2, !tbaa !308
  %arrayidx178.prol = getelementptr inbounds i16, i16* %73, i64 %76
  store i16 %conv176, i16* %arrayidx178.prol, align 2, !tbaa !308
  %conv180.prol = shl i16 %conv172.prol, 1
  %arrayidx182.prol = getelementptr inbounds i16, i16* %74, i64 %76
  store i16 %conv180.prol, i16* %arrayidx182.prol, align 2, !tbaa !308
  %77 = add nsw i64 %76, 1
  %arrayidx188.prol = getelementptr inbounds i16, i16* %75, i64 %76
  store i16 %conv185, i16* %arrayidx188.prol, align 2, !tbaa !308
  %arrayidx191.prol = getelementptr inbounds i16, i16* %72, i64 %77
  store i16 %conv172.prol, i16* %arrayidx191.prol, align 2, !tbaa !308
  %arrayidx194.prol = getelementptr inbounds i16, i16* %73, i64 %77
  store i16 %conv192, i16* %arrayidx194.prol, align 2, !tbaa !308
  %arrayidx198.prol = getelementptr inbounds i16, i16* %74, i64 %77
  store i16 %conv180.prol, i16* %arrayidx198.prol, align 2, !tbaa !308
  %indvars.iv.next.prol = add nsw i64 %76, 2
  %arrayidx203.prol = getelementptr inbounds i16, i16* %75, i64 %77
  store i16 %conv200, i16* %arrayidx203.prol, align 2, !tbaa !308
  %inc205.prol = add nsw i32 %add167, 1
  br label %for.body171.prol.loopexit.unr-lcssa

for.body171.prol.loopexit.unr-lcssa:              ; preds = %for.body171.lr.ph, %for.body171.prol
  %indvars.iv.unr.ph = phi i64 [ %indvars.iv.next.prol, %for.body171.prol ], [ %76, %for.body171.lr.ph ]
  %i.3339.unr.ph = phi i32 [ %inc205.prol, %for.body171.prol ], [ %add167, %for.body171.lr.ph ]
  br label %for.body171.prol.loopexit

for.body171.prol.loopexit:                        ; preds = %for.body171.prol.loopexit.unr-lcssa
  %.mask = and i32 %indvar, 2147483647
  %78 = icmp eq i32 %.mask, 0
  br i1 %78, label %for.body211.lr.ph, label %for.body171.lr.ph.new

for.body171.lr.ph.new:                            ; preds = %for.body171.prol.loopexit
  br label %for.body171

for.body211.lr.ph.unr-lcssa:                      ; preds = %for.body171
  br label %for.body211.lr.ph

for.body211.lr.ph:                                ; preds = %for.body171.prol.loopexit, %for.body211.lr.ph.unr-lcssa
  %79 = add i64 %indvars.iv358, %76
  %conv213 = trunc i32 %sub166 to i16
  %conv221 = shl i16 %conv213, 1
  %conv229 = trunc i32 %indvars.iv360 to i16
  %conv236 = shl i16 %conv229, 1
  %sext381 = shl i64 %79, 32
  %80 = ashr exact i64 %sext381, 32
  br i1 true, label %for.body211.prol.preheader, label %for.body211.prol.loopexit.unr-lcssa

for.body211.prol.preheader:                       ; preds = %for.body211.lr.ph
  br label %for.body211.prol

for.body211.prol:                                 ; preds = %for.body211.prol.preheader
  %arrayidx215.prol = getelementptr inbounds i16, i16* %72, i64 %80
  store i16 %conv213, i16* %arrayidx215.prol, align 2, !tbaa !308
  %conv216.prol = trunc i32 %sub166 to i16
  %arrayidx218.prol = getelementptr inbounds i16, i16* %73, i64 %80
  store i16 %conv216.prol, i16* %arrayidx218.prol, align 2, !tbaa !308
  %arrayidx223.prol = getelementptr inbounds i16, i16* %74, i64 %80
  store i16 %conv221, i16* %arrayidx223.prol, align 2, !tbaa !308
  %conv225.prol = shl i16 %conv216.prol, 1
  %81 = add nsw i64 %80, 1
  %arrayidx228.prol = getelementptr inbounds i16, i16* %75, i64 %80
  store i16 %conv225.prol, i16* %arrayidx228.prol, align 2, !tbaa !308
  %arrayidx231.prol = getelementptr inbounds i16, i16* %72, i64 %81
  store i16 %conv229, i16* %arrayidx231.prol, align 2, !tbaa !308
  %arrayidx234.prol = getelementptr inbounds i16, i16* %73, i64 %81
  store i16 %conv216.prol, i16* %arrayidx234.prol, align 2, !tbaa !308
  %arrayidx238.prol = getelementptr inbounds i16, i16* %74, i64 %81
  store i16 %conv236, i16* %arrayidx238.prol, align 2, !tbaa !308
  %indvars.iv.next363.prol = add nsw i64 %80, 2
  %arrayidx243.prol = getelementptr inbounds i16, i16* %75, i64 %81
  store i16 %conv225.prol, i16* %arrayidx243.prol, align 2, !tbaa !308
  %inc245.prol = sub i32 1, %indvars.iv360
  br label %for.body211.prol.loopexit.unr-lcssa

for.body211.prol.loopexit.unr-lcssa:              ; preds = %for.body211.lr.ph, %for.body211.prol
  %indvars.iv362.unr.ph = phi i64 [ %indvars.iv.next363.prol, %for.body211.prol ], [ %80, %for.body211.lr.ph ]
  %i.4342.unr.ph = phi i32 [ %inc245.prol, %for.body211.prol ], [ %sub166, %for.body211.lr.ph ]
  br label %for.body211.prol.loopexit

for.body211.prol.loopexit:                        ; preds = %for.body211.prol.loopexit.unr-lcssa
  %.mask393 = and i32 %indvar, 2147483647
  %82 = icmp eq i32 %.mask393, 2147483647
  br i1 %82, label %for.inc247, label %for.body211.lr.ph.new

for.body211.lr.ph.new:                            ; preds = %for.body211.prol.loopexit
  br label %for.body211

for.body171:                                      ; preds = %for.body171, %for.body171.lr.ph.new
  %indvars.iv = phi i64 [ %indvars.iv.unr.ph, %for.body171.lr.ph.new ], [ %indvars.iv.next.1, %for.body171 ]
  %i.3339 = phi i32 [ %i.3339.unr.ph, %for.body171.lr.ph.new ], [ %inc205.1, %for.body171 ]
  %conv172 = trunc i32 %i.3339 to i16
  %arrayidx174 = getelementptr inbounds i16, i16* %72, i64 %indvars.iv
  store i16 %conv172, i16* %arrayidx174, align 2, !tbaa !308
  %arrayidx178 = getelementptr inbounds i16, i16* %73, i64 %indvars.iv
  store i16 %conv176, i16* %arrayidx178, align 2, !tbaa !308
  %conv180 = shl i16 %conv172, 1
  %arrayidx182 = getelementptr inbounds i16, i16* %74, i64 %indvars.iv
  store i16 %conv180, i16* %arrayidx182, align 2, !tbaa !308
  %83 = add nsw i64 %indvars.iv, 1
  %arrayidx188 = getelementptr inbounds i16, i16* %75, i64 %indvars.iv
  store i16 %conv185, i16* %arrayidx188, align 2, !tbaa !308
  %arrayidx191 = getelementptr inbounds i16, i16* %72, i64 %83
  store i16 %conv172, i16* %arrayidx191, align 2, !tbaa !308
  %arrayidx194 = getelementptr inbounds i16, i16* %73, i64 %83
  store i16 %conv192, i16* %arrayidx194, align 2, !tbaa !308
  %arrayidx198 = getelementptr inbounds i16, i16* %74, i64 %83
  store i16 %conv180, i16* %arrayidx198, align 2, !tbaa !308
  %indvars.iv.next = add nsw i64 %indvars.iv, 2
  %arrayidx203 = getelementptr inbounds i16, i16* %75, i64 %83
  store i16 %conv200, i16* %arrayidx203, align 2, !tbaa !308
  %inc205 = add nsw i32 %i.3339, 1
  %conv172.1 = trunc i32 %inc205 to i16
  %arrayidx174.1 = getelementptr inbounds i16, i16* %72, i64 %indvars.iv.next
  store i16 %conv172.1, i16* %arrayidx174.1, align 2, !tbaa !308
  %arrayidx178.1 = getelementptr inbounds i16, i16* %73, i64 %indvars.iv.next
  store i16 %conv176, i16* %arrayidx178.1, align 2, !tbaa !308
  %conv180.1 = shl i16 %conv172.1, 1
  %arrayidx182.1 = getelementptr inbounds i16, i16* %74, i64 %indvars.iv.next
  store i16 %conv180.1, i16* %arrayidx182.1, align 2, !tbaa !308
  %84 = add nsw i64 %indvars.iv, 3
  %arrayidx188.1 = getelementptr inbounds i16, i16* %75, i64 %indvars.iv.next
  store i16 %conv185, i16* %arrayidx188.1, align 2, !tbaa !308
  %arrayidx191.1 = getelementptr inbounds i16, i16* %72, i64 %84
  store i16 %conv172.1, i16* %arrayidx191.1, align 2, !tbaa !308
  %arrayidx194.1 = getelementptr inbounds i16, i16* %73, i64 %84
  store i16 %conv192, i16* %arrayidx194.1, align 2, !tbaa !308
  %arrayidx198.1 = getelementptr inbounds i16, i16* %74, i64 %84
  store i16 %conv180.1, i16* %arrayidx198.1, align 2, !tbaa !308
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 4
  %arrayidx203.1 = getelementptr inbounds i16, i16* %75, i64 %84
  store i16 %conv200, i16* %arrayidx203.1, align 2, !tbaa !308
  %inc205.1 = add nsw i32 %i.3339, 2
  %exitcond.1 = icmp eq i32 %inc205.1, %indvars.iv360
  br i1 %exitcond.1, label %for.body211.lr.ph.unr-lcssa, label %for.body171

for.body211:                                      ; preds = %for.body211, %for.body211.lr.ph.new
  %indvars.iv362 = phi i64 [ %indvars.iv362.unr.ph, %for.body211.lr.ph.new ], [ %indvars.iv.next363.1, %for.body211 ]
  %i.4342 = phi i32 [ %i.4342.unr.ph, %for.body211.lr.ph.new ], [ %inc245.1, %for.body211 ]
  %arrayidx215 = getelementptr inbounds i16, i16* %72, i64 %indvars.iv362
  store i16 %conv213, i16* %arrayidx215, align 2, !tbaa !308
  %conv216 = trunc i32 %i.4342 to i16
  %arrayidx218 = getelementptr inbounds i16, i16* %73, i64 %indvars.iv362
  store i16 %conv216, i16* %arrayidx218, align 2, !tbaa !308
  %arrayidx223 = getelementptr inbounds i16, i16* %74, i64 %indvars.iv362
  store i16 %conv221, i16* %arrayidx223, align 2, !tbaa !308
  %conv225 = shl i16 %conv216, 1
  %85 = add nsw i64 %indvars.iv362, 1
  %arrayidx228 = getelementptr inbounds i16, i16* %75, i64 %indvars.iv362
  store i16 %conv225, i16* %arrayidx228, align 2, !tbaa !308
  %arrayidx231 = getelementptr inbounds i16, i16* %72, i64 %85
  store i16 %conv229, i16* %arrayidx231, align 2, !tbaa !308
  %arrayidx234 = getelementptr inbounds i16, i16* %73, i64 %85
  store i16 %conv216, i16* %arrayidx234, align 2, !tbaa !308
  %arrayidx238 = getelementptr inbounds i16, i16* %74, i64 %85
  store i16 %conv236, i16* %arrayidx238, align 2, !tbaa !308
  %indvars.iv.next363 = add nsw i64 %indvars.iv362, 2
  %arrayidx243 = getelementptr inbounds i16, i16* %75, i64 %85
  store i16 %conv225, i16* %arrayidx243, align 2, !tbaa !308
  %inc245 = add nsw i32 %i.4342, 1
  %arrayidx215.1 = getelementptr inbounds i16, i16* %72, i64 %indvars.iv.next363
  store i16 %conv213, i16* %arrayidx215.1, align 2, !tbaa !308
  %conv216.1 = trunc i32 %inc245 to i16
  %arrayidx218.1 = getelementptr inbounds i16, i16* %73, i64 %indvars.iv.next363
  store i16 %conv216.1, i16* %arrayidx218.1, align 2, !tbaa !308
  %arrayidx223.1 = getelementptr inbounds i16, i16* %74, i64 %indvars.iv.next363
  store i16 %conv221, i16* %arrayidx223.1, align 2, !tbaa !308
  %conv225.1 = shl i16 %conv216.1, 1
  %86 = add nsw i64 %indvars.iv362, 3
  %arrayidx228.1 = getelementptr inbounds i16, i16* %75, i64 %indvars.iv.next363
  store i16 %conv225.1, i16* %arrayidx228.1, align 2, !tbaa !308
  %arrayidx231.1 = getelementptr inbounds i16, i16* %72, i64 %86
  store i16 %conv229, i16* %arrayidx231.1, align 2, !tbaa !308
  %arrayidx234.1 = getelementptr inbounds i16, i16* %73, i64 %86
  store i16 %conv216.1, i16* %arrayidx234.1, align 2, !tbaa !308
  %arrayidx238.1 = getelementptr inbounds i16, i16* %74, i64 %86
  store i16 %conv236, i16* %arrayidx238.1, align 2, !tbaa !308
  %indvars.iv.next363.1 = add nsw i64 %indvars.iv362, 4
  %arrayidx243.1 = getelementptr inbounds i16, i16* %75, i64 %86
  store i16 %conv225.1, i16* %arrayidx243.1, align 2, !tbaa !308
  %inc245.1 = add nsw i32 %i.4342, 2
  %exitcond369.1 = icmp eq i32 %inc245.1, %indvars.iv367
  br i1 %exitcond369.1, label %for.inc247.unr-lcssa, label %for.body211

for.inc247.unr-lcssa:                             ; preds = %for.body211
  br label %for.inc247

for.inc247:                                       ; preds = %for.body211.prol.loopexit, %for.inc247.unr-lcssa
  %87 = add i64 %indvars.iv365, %80
  %indvars.iv.next361 = add nuw i32 %indvars.iv360, 1
  %cmp163 = icmp slt i32 %indvars.iv360, %cond162
  %indvars.iv.next359 = add nuw nsw i64 %indvars.iv358, 4
  %indvars.iv.next366 = add nuw nsw i64 %indvars.iv365, 4
  %indvars.iv.next368 = add nuw i32 %indvars.iv367, 1
  %indvar.next = add i32 %indvar, 1
  br i1 %cmp163, label %for.body171.lr.ph, label %for.end249

for.end249:                                       ; preds = %for.inc247
  %88 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %88, i64 0, i32 155
  %89 = load i32, i32* %FMEnable, align 4, !tbaa !321
  %tobool = icmp eq i32 %89, 0
  br i1 %tobool, label %if.then250, label %if.end251

if.then250:                                       ; preds = %for.end249
  tail call void @InitializeFastFullIntegerSearch()
  br label %if.end251

if.end251:                                        ; preds = %for.end249, %if.then250
  ret void
}

; Function Attrs: nounwind readnone
declare double @floor(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare double @log(double) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare double @ceil(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #2

declare i32 @get_mem4Dint(i32*****, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @Clear_Motion_Search_Module() local_unnamed_addr #0 {
entry:
  %0 = load i32, i32* @max_mvd, align 4, !tbaa !13
  %1 = load i32*, i32** @mvbits, align 8, !tbaa !1
  %idx.ext = sext i32 %0 to i64
  %idx.neg = sub nsw i64 0, %idx.ext
  %add.ptr = getelementptr inbounds i32, i32* %1, i64 %idx.neg
  store i32* %add.ptr, i32** @mvbits, align 8, !tbaa !1
  %2 = load i32, i32* @byte_abs_range, align 4, !tbaa !13
  %div = sdiv i32 %2, 2
  %3 = load i32*, i32** @byte_abs, align 8, !tbaa !1
  %idx.ext1 = sext i32 %div to i64
  %idx.neg2 = sub nsw i64 0, %idx.ext1
  %add.ptr3 = getelementptr inbounds i32, i32* %3, i64 %idx.neg2
  store i32* %add.ptr3, i32** @byte_abs, align 8, !tbaa !1
  %4 = load i8*, i8** bitcast (i16** @spiral_search_x to i8**), align 8, !tbaa !1
  tail call void @free(i8* %4) #8
  %5 = load i8*, i8** bitcast (i16** @spiral_search_y to i8**), align 8, !tbaa !1
  tail call void @free(i8* %5) #8
  %6 = load i8*, i8** bitcast (i16** @spiral_hpel_search_x to i8**), align 8, !tbaa !1
  tail call void @free(i8* %6) #8
  %7 = load i8*, i8** bitcast (i16** @spiral_hpel_search_y to i8**), align 8, !tbaa !1
  tail call void @free(i8* %7) #8
  %8 = load i8*, i8** bitcast (i32** @mvbits to i8**), align 8, !tbaa !1
  tail call void @free(i8* %8) #8
  %9 = load i8*, i8** bitcast (i32** @refbits to i8**), align 8, !tbaa !1
  tail call void @free(i8* %9) #8
  %10 = load i8*, i8** bitcast (i32** @byte_abs to i8**), align 8, !tbaa !1
  tail call void @free(i8* %10) #8
  %11 = load i32****, i32***** @motion_cost, align 8, !tbaa !1
  tail call void @free_mem4Dint(i32**** %11, i32 8, i32 2) #8
  %12 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %12, i64 0, i32 155
  %13 = load i32, i32* %FMEnable, align 4, !tbaa !321
  %tobool = icmp eq i32 %13, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @ClearFastFullIntegerSearch()
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

declare void @free_mem4Dint(i32****, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @FullPelBlockMotionSearch(i16** nocapture readonly %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* nocapture %mv_x, i16* nocapture %mv_y, i32 %search_range, i32 %min_mcost, i32 %lambda_factor) local_unnamed_addr #0 {
entry:
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 55
  %1 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8, !tbaa !293
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 3
  %2 = load i32, i32* %current_mb_nr, align 4, !tbaa !294
  %idxprom = sext i32 %2 to i64
  %list_offset1 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 %idxprom, i32 20
  %3 = load i32, i32* %list_offset1, align 4, !tbaa !295
  %add = add nsw i32 %3, %list
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom2
  %4 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx3, align 8, !tbaa !1
  %idxprom4 = sext i16 %ref to i64
  %arrayidx5 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %4, i64 %idxprom4
  %5 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx5, align 8, !tbaa !1
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %5, i64 0, i32 18
  %6 = load i32, i32* %size_x, align 8, !tbaa !303
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %5, i64 0, i32 19
  %7 = load i32, i32* %size_y, align 4, !tbaa !305
  %mul = shl nsw i32 %search_range, 1
  %add16 = or i32 %mul, 1
  %mul19 = mul nsw i32 %add16, %add16
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %idxprom20 = sext i32 %blocktype to i64
  %arrayidx22 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i64 0, i32 21, i64 %idxprom20, i64 1
  %9 = load i32, i32* %arrayidx22, align 4, !tbaa !13
  %arrayidx26 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i64 0, i32 21, i64 %idxprom20, i64 0
  %10 = load i32, i32* %arrayidx26, align 4, !tbaa !13
  %shr = ashr i32 %10, 2
  %conv = sext i16 %pred_mv_x to i32
  %conv29 = sext i16 %pred_mv_y to i32
  %11 = load i16, i16* %mv_x, align 2, !tbaa !308
  %conv31 = sext i16 %11 to i32
  %add32 = add nsw i32 %conv31, %pic_pix_x
  %12 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv33 = sext i16 %12 to i32
  %add34 = add nsw i32 %conv33, %pic_pix_y
  %cmp = icmp eq i32 %blocktype, 1
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i64 0, i32 106
  %13 = load i32, i32* %rdopt, align 8, !tbaa !309
  %tobool = icmp eq i32 %13, 0
  br i1 %tobool, label %land.lhs.true36, label %land.end

land.lhs.true36:                                  ; preds = %land.lhs.true
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 6
  %14 = load i32, i32* %type, align 8, !tbaa !300
  %cmp40 = icmp eq i16 %ref, 0
  %not.cmp37 = icmp ne i32 %14, 1
  %.cmp40 = and i1 %cmp40, %not.cmp37
  br label %land.end

land.end:                                         ; preds = %land.lhs.true36, %land.lhs.true, %entry
  %15 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %.cmp40, %land.lhs.true36 ]
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8, !tbaa !1
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i64 0, i32 19
  %17 = load i32, i32* %weighted_pred_flag, align 8, !tbaa !298
  %tobool42 = icmp eq i32 %17, 0
  br i1 %tobool42, label %lor.rhs, label %land.lhs.true43

land.lhs.true43:                                  ; preds = %land.end
  %type44 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 6
  %18 = load i32, i32* %type44, align 8, !tbaa !300
  switch i32 %18, label %lor.rhs [
    i32 0, label %land.lhs.true58
    i32 3, label %land.lhs.true58
  ]

lor.rhs:                                          ; preds = %land.lhs.true43, %land.end
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i64 0, i32 20
  %19 = load i32, i32* %weighted_bipred_idc, align 4, !tbaa !301
  %tobool50 = icmp eq i32 %19, 0
  br i1 %tobool50, label %if.else, label %land.rhs51

land.rhs51:                                       ; preds = %lor.rhs
  %type52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 6
  %20 = load i32, i32* %type52, align 8, !tbaa !300
  %cmp53 = icmp eq i32 %20, 1
  br i1 %cmp53, label %land.lhs.true58, label %if.else

land.lhs.true58:                                  ; preds = %land.lhs.true43, %land.lhs.true43, %land.rhs51
  %UseWeightedReferenceME = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i64 0, i32 56
  %21 = load i32, i32* %UseWeightedReferenceME, align 8, !tbaa !302
  %tobool59 = icmp eq i32 %21, 0
  br i1 %tobool59, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true58
  %imgY_11_w = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %5, i64 0, i32 27
  br label %if.end

if.else:                                          ; preds = %lor.rhs, %land.lhs.true58, %land.rhs51
  %imgY_1170 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %5, i64 0, i32 26
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %ref_pic.0.in = phi i16** [ %imgY_11_w, %if.then ], [ %imgY_1170, %if.else ]
  %ref_pic.0 = load i16*, i16** %ref_pic.0.in, align 8, !tbaa !1
  %cmp71 = icmp sgt i32 %add32, %search_range
  br i1 %cmp71, label %land.lhs.true73, label %if.else88

land.lhs.true73:                                  ; preds = %if.end
  %sub = xor i32 %search_range, -1
  %sub74 = add i32 %6, %sub
  %sub75 = sub i32 %sub74, %10
  %cmp76 = icmp slt i32 %add32, %sub75
  %cmp79 = icmp sgt i32 %add34, %search_range
  %or.cond = and i1 %cmp76, %cmp79
  br i1 %or.cond, label %land.lhs.true81, label %if.else88

land.lhs.true81:                                  ; preds = %land.lhs.true73
  %sub83 = add i32 %7, %sub
  %sub84 = sub i32 %sub83, %9
  %cmp85 = icmp slt i32 %add34, %sub84
  br i1 %cmp85, label %if.end89, label %if.else88

if.else88:                                        ; preds = %land.lhs.true81, %land.lhs.true73, %if.end
  br label %if.end89

if.end89:                                         ; preds = %land.lhs.true81, %if.else88
  %get_ref_line.0 = phi i16* (i32, i16*, i32, i32, i32, i32)* [ @UMVLineX, %if.else88 ], [ @FastLineX, %land.lhs.true81 ]
  %shl.neg = mul i32 %pic_pix_x, -4
  %add27.neg = sub i32 %shl.neg, %conv
  %shl28.neg = mul i32 %pic_pix_y, -4
  %add30.neg = sub i32 %shl28.neg, %conv29
  %shr120 = ashr i32 %lambda_factor, 12
  %cmp128301 = icmp sgt i32 %9, 0
  %cmp135296 = icmp sgt i32 %shr, 0
  %22 = sext i32 %9 to i64
  %23 = zext i32 %mul19 to i64
  br label %for.body

for.body:                                         ; preds = %if.end89, %for.inc180
  %indvars.iv312 = phi i64 [ 0, %if.end89 ], [ %indvars.iv.next313, %for.inc180 ]
  %min_mcost.addr.0309 = phi i32 [ %min_mcost, %if.end89 ], [ %min_mcost.addr.1, %for.inc180 ]
  %best_pos.0306 = phi i32 [ 0, %if.end89 ], [ %best_pos.1, %for.inc180 ]
  %24 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  %arrayidx93 = getelementptr inbounds i16, i16* %24, i64 %indvars.iv312
  %25 = load i16, i16* %arrayidx93, align 2, !tbaa !308
  %conv94 = sext i16 %25 to i32
  %add95 = add nsw i32 %conv94, %add32
  %26 = load i16*, i16** @spiral_search_y, align 8, !tbaa !1
  %arrayidx97 = getelementptr inbounds i16, i16* %26, i64 %indvars.iv312
  %27 = load i16, i16* %arrayidx97, align 2, !tbaa !308
  %conv98 = sext i16 %27 to i32
  %add99 = add nsw i32 %conv98, %add34
  %28 = load i32*, i32** @mvbits, align 8, !tbaa !1
  %shl100 = shl i32 %add95, 2
  %sub101 = add i32 %add27.neg, %shl100
  %idxprom102 = sext i32 %sub101 to i64
  %arrayidx103 = getelementptr inbounds i32, i32* %28, i64 %idxprom102
  %29 = load i32, i32* %arrayidx103, align 4, !tbaa !13
  %shl104 = shl i32 %add99, 2
  %sub105 = add i32 %add30.neg, %shl104
  %idxprom106 = sext i32 %sub105 to i64
  %arrayidx107 = getelementptr inbounds i32, i32* %28, i64 %idxprom106
  %30 = load i32, i32* %arrayidx107, align 4, !tbaa !13
  %add108 = add nsw i32 %30, %29
  %mul109 = mul nsw i32 %add108, %lambda_factor
  %shr110 = ashr i32 %mul109, 16
  %cmp113 = icmp eq i32 %add95, %pic_pix_x
  %or.cond293 = and i1 %15, %cmp113
  %cmp116 = icmp eq i32 %add99, %pic_pix_y
  %or.cond294 = and i1 %or.cond293, %cmp116
  %sub121 = select i1 %or.cond294, i32 %shr120, i32 0
  %mcost.0 = sub nsw i32 %shr110, %sub121
  %cmp123 = icmp slt i32 %mcost.0, %min_mcost.addr.0309
  br i1 %cmp123, label %for.cond127.preheader, label %for.inc180

for.cond127.preheader:                            ; preds = %for.body
  br i1 %cmp128301, label %for.body130.preheader, label %for.end175

for.body130.preheader:                            ; preds = %for.cond127.preheader
  %31 = zext i32 %add99 to i64
  br label %for.body130

for.body130:                                      ; preds = %for.end, %for.body130.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end ], [ 0, %for.body130.preheader ]
  %mcost.1302 = phi i32 [ %mcost.2.lcssa, %for.end ], [ %mcost.0, %for.body130.preheader ]
  %32 = add i64 %indvars.iv, %31
  %33 = trunc i64 %32 to i32
  %call = tail call i16* %get_ref_line.0(i32 %10, i16* %ref_pic.0, i32 %33, i32 %add95, i32 %7, i32 %6) #8
  br i1 %cmp135296, label %for.body137.lr.ph, label %for.end

for.body137.lr.ph:                                ; preds = %for.body130
  %arrayidx133 = getelementptr inbounds i16*, i16** %orig_pic, i64 %indvars.iv
  %34 = load i16*, i16** %arrayidx133, align 8, !tbaa !1
  %35 = load i32*, i32** @byte_abs, align 8, !tbaa !1
  br label %for.body137

for.body137:                                      ; preds = %for.body137, %for.body137.lr.ph
  %x4.0300 = phi i32 [ 0, %for.body137.lr.ph ], [ %inc, %for.body137 ]
  %mcost.2299 = phi i32 [ %mcost.1302, %for.body137.lr.ph ], [ %add168, %for.body137 ]
  %orig_line.0298 = phi i16* [ %34, %for.body137.lr.ph ], [ %incdec.ptr161, %for.body137 ]
  %ref_line.0297 = phi i16* [ %call, %for.body137.lr.ph ], [ %incdec.ptr163, %for.body137 ]
  %36 = bitcast i16* %orig_line.0298 to <4 x i16>*
  %37 = load <4 x i16>, <4 x i16>* %36, align 2, !tbaa !308
  %38 = zext <4 x i16> %37 to <4 x i32>
  %39 = bitcast i16* %ref_line.0297 to <4 x i16>*
  %40 = load <4 x i16>, <4 x i16>* %39, align 2, !tbaa !308
  %41 = zext <4 x i16> %40 to <4 x i32>
  %42 = sub nsw <4 x i32> %38, %41
  %43 = extractelement <4 x i32> %42, i32 0
  %44 = sext i32 %43 to i64
  %arrayidx143 = getelementptr inbounds i32, i32* %35, i64 %44
  %45 = load i32, i32* %arrayidx143, align 4, !tbaa !13
  %add144 = add i32 %45, %mcost.2299
  %46 = extractelement <4 x i32> %42, i32 1
  %47 = sext i32 %46 to i64
  %arrayidx151 = getelementptr inbounds i32, i32* %35, i64 %47
  %48 = load i32, i32* %arrayidx151, align 4, !tbaa !13
  %add152 = add i32 %add144, %48
  %49 = extractelement <4 x i32> %42, i32 2
  %50 = sext i32 %49 to i64
  %arrayidx159 = getelementptr inbounds i32, i32* %35, i64 %50
  %51 = load i32, i32* %arrayidx159, align 4, !tbaa !13
  %add160 = add i32 %add152, %51
  %incdec.ptr161 = getelementptr inbounds i16, i16* %orig_line.0298, i64 4
  %incdec.ptr163 = getelementptr inbounds i16, i16* %ref_line.0297, i64 4
  %52 = extractelement <4 x i32> %42, i32 3
  %53 = sext i32 %52 to i64
  %arrayidx167 = getelementptr inbounds i32, i32* %35, i64 %53
  %54 = load i32, i32* %arrayidx167, align 4, !tbaa !13
  %add168 = add i32 %add160, %54
  %inc = add nuw nsw i32 %x4.0300, 1
  %exitcond = icmp eq i32 %inc, %shr
  br i1 %exitcond, label %for.end.loopexit, label %for.body137

for.end.loopexit:                                 ; preds = %for.body137
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.body130
  %mcost.2.lcssa = phi i32 [ %mcost.1302, %for.body130 ], [ %add168, %for.end.loopexit ]
  %cmp169 = icmp slt i32 %mcost.2.lcssa, %min_mcost.addr.0309
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp128 = icmp slt i64 %indvars.iv.next, %22
  %or.cond310 = and i1 %cmp169, %cmp128
  br i1 %or.cond310, label %for.body130, label %for.end175.loopexit

for.end175.loopexit:                              ; preds = %for.end
  br label %for.end175

for.end175:                                       ; preds = %for.end175.loopexit, %for.cond127.preheader
  %mcost.3 = phi i32 [ %mcost.0, %for.cond127.preheader ], [ %mcost.2.lcssa, %for.end175.loopexit ]
  %cmp176 = icmp slt i32 %mcost.3, %min_mcost.addr.0309
  %55 = trunc i64 %indvars.iv312 to i32
  %pos.0.best_pos.0 = select i1 %cmp176, i32 %55, i32 %best_pos.0306
  %mcost.3.min_mcost.addr.0 = select i1 %cmp176, i32 %mcost.3, i32 %min_mcost.addr.0309
  br label %for.inc180

for.inc180:                                       ; preds = %for.end175, %for.body
  %best_pos.1 = phi i32 [ %best_pos.0306, %for.body ], [ %pos.0.best_pos.0, %for.end175 ]
  %min_mcost.addr.1 = phi i32 [ %min_mcost.addr.0309, %for.body ], [ %mcost.3.min_mcost.addr.0, %for.end175 ]
  %indvars.iv.next313 = add nuw nsw i64 %indvars.iv312, 1
  %cmp90 = icmp slt i64 %indvars.iv.next313, %23
  br i1 %cmp90, label %for.body, label %for.end182

for.end182:                                       ; preds = %for.inc180
  %tobool183 = icmp eq i32 %best_pos.1, 0
  br i1 %tobool183, label %if.end197, label %if.then184

if.then184:                                       ; preds = %for.end182
  %56 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  %idxprom185 = sext i32 %best_pos.1 to i64
  %arrayidx186 = getelementptr inbounds i16, i16* %56, i64 %idxprom185
  %57 = load i16, i16* %arrayidx186, align 2, !tbaa !308
  %58 = load i16, i16* %mv_x, align 2, !tbaa !308
  %add189 = add i16 %58, %57
  store i16 %add189, i16* %mv_x, align 2, !tbaa !308
  %59 = load i16*, i16** @spiral_search_y, align 8, !tbaa !1
  %arrayidx192 = getelementptr inbounds i16, i16* %59, i64 %idxprom185
  %60 = load i16, i16* %arrayidx192, align 2, !tbaa !308
  %61 = load i16, i16* %mv_y, align 2, !tbaa !308
  %add195 = add i16 %61, %60
  store i16 %add195, i16* %mv_y, align 2, !tbaa !308
  br label %if.end197

if.end197:                                        ; preds = %for.end182, %if.then184
  ret i32 %min_mcost.addr.1
}

declare i16* @FastLineX(i32, i16*, i32, i32, i32, i32) local_unnamed_addr #3

declare i16* @UMVLineX(i32, i16*, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @FastFullPelBlockMotionSearch(i16** nocapture readnone %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* nocapture %mv_x, i16* nocapture %mv_y, i32 %search_range, i32 %min_mcost, i32 %lambda_factor) local_unnamed_addr #0 {
entry:
  %mul = shl nsw i32 %search_range, 1
  %add = or i32 %mul, 1
  %mul3 = mul nsw i32 %add, %add
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 38
  %1 = load i32, i32* %opix_y, align 4, !tbaa !312
  %sub = sub i32 %pic_pix_y, %1
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 37
  %2 = load i32, i32* %opix_x, align 8, !tbaa !311
  %sub4 = sub nsw i32 %pic_pix_x, %2
  %shr = ashr i32 %sub4, 2
  %add5 = add nsw i32 %sub, %shr
  %3 = load i32*****, i32****** @BlockSAD, align 8, !tbaa !1
  %idxprom = sext i32 %list to i64
  %arrayidx = getelementptr inbounds i32****, i32***** %3, i64 %idxprom
  %4 = load i32****, i32***** %arrayidx, align 8, !tbaa !1
  %idxprom6 = sext i16 %ref to i64
  %arrayidx7 = getelementptr inbounds i32***, i32**** %4, i64 %idxprom6
  %5 = load i32***, i32**** %arrayidx7, align 8, !tbaa !1
  %idxprom8 = sext i32 %blocktype to i64
  %arrayidx9 = getelementptr inbounds i32**, i32*** %5, i64 %idxprom8
  %6 = load i32**, i32*** %arrayidx9, align 8, !tbaa !1
  %idxprom10 = sext i32 %add5 to i64
  %arrayidx11 = getelementptr inbounds i32*, i32** %6, i64 %idxprom10
  %7 = load i32*, i32** %arrayidx11, align 8, !tbaa !1
  %8 = load i32**, i32*** @search_setup_done, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds i32*, i32** %8, i64 %idxprom
  %9 = load i32*, i32** %arrayidx13, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds i32, i32* %9, i64 %idxprom6
  %10 = load i32, i32* %arrayidx15, align 4, !tbaa !13
  %tobool = icmp eq i32 %10, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @SetupFastFullPelSearch(i16 signext %ref, i32 %list)
  %.pre = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %opix_x20.phi.trans.insert = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %.pre, i64 0, i32 37
  %.pre145 = load i32, i32* %opix_x20.phi.trans.insert, align 8, !tbaa !311
  %opix_y26.phi.trans.insert = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %.pre, i64 0, i32 38
  %.pre146 = load i32, i32* %opix_y26.phi.trans.insert, align 4, !tbaa !312
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %11 = phi i32 [ %1, %entry ], [ %.pre146, %if.then ]
  %12 = phi i32 [ %2, %entry ], [ %.pre145, %if.then ]
  %13 = load i32**, i32*** @search_center_x, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds i32*, i32** %13, i64 %idxprom
  %14 = load i32*, i32** %arrayidx17, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds i32, i32* %14, i64 %idxprom6
  %15 = load i32, i32* %arrayidx19, align 4, !tbaa !13
  %sub21 = sub nsw i32 %15, %12
  %16 = load i32**, i32*** @search_center_y, align 8, !tbaa !1
  %arrayidx23 = getelementptr inbounds i32*, i32** %16, i64 %idxprom
  %17 = load i32*, i32** %arrayidx23, align 8, !tbaa !1
  %arrayidx25 = getelementptr inbounds i32, i32* %17, i64 %idxprom6
  %18 = load i32, i32* %arrayidx25, align 4, !tbaa !13
  %sub27 = sub nsw i32 %18, %11
  %19 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %19, i64 0, i32 106
  %20 = load i32, i32* %rdopt, align 8, !tbaa !309
  %tobool28 = icmp eq i32 %20, 0
  br i1 %tobool28, label %if.then29, label %if.end.for.cond.preheader_crit_edge

if.end.for.cond.preheader_crit_edge:              ; preds = %if.end
  %.pre147 = load i32*, i32** @mvbits, align 8
  br label %for.cond.preheader

if.then29:                                        ; preds = %if.end
  %21 = load i32**, i32*** @pos_00, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds i32*, i32** %21, i64 %idxprom
  %22 = load i32*, i32** %arrayidx31, align 8, !tbaa !1
  %arrayidx33 = getelementptr inbounds i32, i32* %22, i64 %idxprom6
  %23 = load i32, i32* %arrayidx33, align 4, !tbaa !13
  %idxprom34 = sext i32 %23 to i64
  %arrayidx35 = getelementptr inbounds i32, i32* %7, i64 %idxprom34
  %24 = load i32, i32* %arrayidx35, align 4, !tbaa !13
  %25 = load i32*, i32** @mvbits, align 8, !tbaa !1
  %conv = sext i16 %pred_mv_x to i64
  %sub36 = sub nsw i64 0, %conv
  %arrayidx38 = getelementptr inbounds i32, i32* %25, i64 %sub36
  %26 = load i32, i32* %arrayidx38, align 4, !tbaa !13
  %conv39 = sext i16 %pred_mv_y to i64
  %sub40 = sub nsw i64 0, %conv39
  %arrayidx42 = getelementptr inbounds i32, i32* %25, i64 %sub40
  %27 = load i32, i32* %arrayidx42, align 4, !tbaa !13
  %add43 = add nsw i32 %27, %26
  %mul44 = mul nsw i32 %add43, %lambda_factor
  %shr45 = ashr i32 %mul44, 16
  %add46 = add nsw i32 %shr45, %24
  %cmp = icmp slt i32 %add46, %min_mcost
  %. = select i1 %cmp, i32 %23, i32 0
  %add46.min_mcost = select i1 %cmp, i32 %add46, i32 %min_mcost
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end.for.cond.preheader_crit_edge, %if.then29
  %28 = phi i32* [ %25, %if.then29 ], [ %.pre147, %if.end.for.cond.preheader_crit_edge ]
  %best_pos.1.ph = phi i32 [ %., %if.then29 ], [ 0, %if.end.for.cond.preheader_crit_edge ]
  %min_mcost.addr.1.ph = phi i32 [ %add46.min_mcost, %if.then29 ], [ %min_mcost, %if.end.for.cond.preheader_crit_edge ]
  %29 = load i16*, i16** @spiral_search_x, align 8
  %30 = load i16*, i16** @spiral_search_y, align 8
  %conv68 = sext i16 %pred_mv_x to i32
  %conv73 = sext i16 %pred_mv_y to i32
  %31 = zext i32 %mul3 to i64
  br label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ]
  %block_sad.0144 = phi i32* [ %7, %for.cond.preheader ], [ %incdec.ptr, %for.inc ]
  %min_mcost.addr.1143 = phi i32 [ %min_mcost.addr.1.ph, %for.cond.preheader ], [ %min_mcost.addr.2, %for.inc ]
  %best_pos.1142 = phi i32 [ %best_pos.1.ph, %for.cond.preheader ], [ %best_pos.2, %for.inc ]
  %32 = load i32, i32* %block_sad.0144, align 4, !tbaa !13
  %cmp57 = icmp slt i32 %32, %min_mcost.addr.1143
  br i1 %cmp57, label %if.then59, label %for.inc

if.then59:                                        ; preds = %for.body
  %arrayidx61 = getelementptr inbounds i16, i16* %29, i64 %indvars.iv
  %33 = load i16, i16* %arrayidx61, align 2, !tbaa !308
  %conv62 = sext i16 %33 to i32
  %add63 = add nsw i32 %conv62, %sub21
  %arrayidx65 = getelementptr inbounds i16, i16* %30, i64 %indvars.iv
  %34 = load i16, i16* %arrayidx65, align 2, !tbaa !308
  %conv66 = sext i16 %34 to i32
  %add67 = add nsw i32 %conv66, %sub27
  %shl = shl i32 %add63, 2
  %sub69 = sub nsw i32 %shl, %conv68
  %idxprom70 = sext i32 %sub69 to i64
  %arrayidx71 = getelementptr inbounds i32, i32* %28, i64 %idxprom70
  %35 = load i32, i32* %arrayidx71, align 4, !tbaa !13
  %shl72 = shl i32 %add67, 2
  %sub74 = sub nsw i32 %shl72, %conv73
  %idxprom75 = sext i32 %sub74 to i64
  %arrayidx76 = getelementptr inbounds i32, i32* %28, i64 %idxprom75
  %36 = load i32, i32* %arrayidx76, align 4, !tbaa !13
  %add77 = add nsw i32 %36, %35
  %mul78 = mul nsw i32 %add77, %lambda_factor
  %shr79 = ashr i32 %mul78, 16
  %add80 = add nsw i32 %shr79, %32
  %cmp81 = icmp slt i32 %add80, %min_mcost.addr.1143
  %37 = trunc i64 %indvars.iv to i32
  %pos.0.best_pos.1 = select i1 %cmp81, i32 %37, i32 %best_pos.1142
  %add80.min_mcost.addr.1 = select i1 %cmp81, i32 %add80, i32 %min_mcost.addr.1143
  br label %for.inc

for.inc:                                          ; preds = %if.then59, %for.body
  %best_pos.2 = phi i32 [ %best_pos.1142, %for.body ], [ %pos.0.best_pos.1, %if.then59 ]
  %min_mcost.addr.2 = phi i32 [ %min_mcost.addr.1143, %for.body ], [ %add80.min_mcost.addr.1, %if.then59 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr = getelementptr inbounds i32, i32* %block_sad.0144, i64 1
  %cmp55 = icmp slt i64 %indvars.iv.next, %31
  br i1 %cmp55, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc
  %idxprom86 = sext i32 %best_pos.2 to i64
  %arrayidx87 = getelementptr inbounds i16, i16* %29, i64 %idxprom86
  %38 = load i16, i16* %arrayidx87, align 2, !tbaa !308
  %conv88139 = zext i16 %38 to i32
  %add89 = add i32 %conv88139, %sub21
  %conv90 = trunc i32 %add89 to i16
  store i16 %conv90, i16* %mv_x, align 2, !tbaa !308
  %arrayidx92 = getelementptr inbounds i16, i16* %30, i64 %idxprom86
  %39 = load i16, i16* %arrayidx92, align 2, !tbaa !308
  %conv93140 = zext i16 %39 to i32
  %add94 = add i32 %conv93140, %sub27
  %conv95 = trunc i32 %add94 to i16
  store i16 %conv95, i16* %mv_y, align 2, !tbaa !308
  ret i32 %min_mcost.addr.2
}

; Function Attrs: nounwind readonly uwtable
define i32 @SATD(i32* nocapture readonly %diff, i32 %use_hadamard) local_unnamed_addr #6 {
entry:
  %tobool = icmp eq i32 %use_hadamard, 0
  br i1 %tobool, label %for.cond273.preheader, label %if.then

for.cond273.preheader:                            ; preds = %entry
  %0 = load i32*, i32** @byte_abs, align 8, !tbaa !1
  %1 = load i32, i32* %diff, align 4, !tbaa !13
  %idxprom278 = sext i32 %1 to i64
  %arrayidx279 = getelementptr inbounds i32, i32* %0, i64 %idxprom278
  %2 = load i32, i32* %arrayidx279, align 4, !tbaa !13
  %arrayidx277.1 = getelementptr inbounds i32, i32* %diff, i64 1
  %3 = load i32, i32* %arrayidx277.1, align 4, !tbaa !13
  %idxprom278.1 = sext i32 %3 to i64
  %arrayidx279.1 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.1
  %4 = load i32, i32* %arrayidx279.1, align 4, !tbaa !13
  %add280.1 = add i32 %4, %2
  %arrayidx277.2 = getelementptr inbounds i32, i32* %diff, i64 2
  %5 = load i32, i32* %arrayidx277.2, align 4, !tbaa !13
  %idxprom278.2 = sext i32 %5 to i64
  %arrayidx279.2 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.2
  %6 = load i32, i32* %arrayidx279.2, align 4, !tbaa !13
  %add280.2 = add i32 %6, %add280.1
  %arrayidx277.3 = getelementptr inbounds i32, i32* %diff, i64 3
  %7 = load i32, i32* %arrayidx277.3, align 4, !tbaa !13
  %idxprom278.3 = sext i32 %7 to i64
  %arrayidx279.3 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.3
  %8 = load i32, i32* %arrayidx279.3, align 4, !tbaa !13
  %add280.3 = add i32 %8, %add280.2
  %arrayidx277.4 = getelementptr inbounds i32, i32* %diff, i64 4
  %9 = load i32, i32* %arrayidx277.4, align 4, !tbaa !13
  %idxprom278.4 = sext i32 %9 to i64
  %arrayidx279.4 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.4
  %10 = load i32, i32* %arrayidx279.4, align 4, !tbaa !13
  %add280.4 = add i32 %10, %add280.3
  %arrayidx277.5 = getelementptr inbounds i32, i32* %diff, i64 5
  %11 = load i32, i32* %arrayidx277.5, align 4, !tbaa !13
  %idxprom278.5 = sext i32 %11 to i64
  %arrayidx279.5 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.5
  %12 = load i32, i32* %arrayidx279.5, align 4, !tbaa !13
  %add280.5 = add i32 %12, %add280.4
  %arrayidx277.6 = getelementptr inbounds i32, i32* %diff, i64 6
  %13 = load i32, i32* %arrayidx277.6, align 4, !tbaa !13
  %idxprom278.6 = sext i32 %13 to i64
  %arrayidx279.6 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.6
  %14 = load i32, i32* %arrayidx279.6, align 4, !tbaa !13
  %add280.6 = add i32 %14, %add280.5
  %arrayidx277.7 = getelementptr inbounds i32, i32* %diff, i64 7
  %15 = load i32, i32* %arrayidx277.7, align 4, !tbaa !13
  %idxprom278.7 = sext i32 %15 to i64
  %arrayidx279.7 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.7
  %16 = load i32, i32* %arrayidx279.7, align 4, !tbaa !13
  %add280.7 = add i32 %16, %add280.6
  %arrayidx277.8 = getelementptr inbounds i32, i32* %diff, i64 8
  %17 = load i32, i32* %arrayidx277.8, align 4, !tbaa !13
  %idxprom278.8 = sext i32 %17 to i64
  %arrayidx279.8 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.8
  %18 = load i32, i32* %arrayidx279.8, align 4, !tbaa !13
  %add280.8 = add i32 %18, %add280.7
  %arrayidx277.9 = getelementptr inbounds i32, i32* %diff, i64 9
  %19 = load i32, i32* %arrayidx277.9, align 4, !tbaa !13
  %idxprom278.9 = sext i32 %19 to i64
  %arrayidx279.9 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.9
  %20 = load i32, i32* %arrayidx279.9, align 4, !tbaa !13
  %add280.9 = add i32 %20, %add280.8
  %arrayidx277.10 = getelementptr inbounds i32, i32* %diff, i64 10
  %21 = load i32, i32* %arrayidx277.10, align 4, !tbaa !13
  %idxprom278.10 = sext i32 %21 to i64
  %arrayidx279.10 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.10
  %22 = load i32, i32* %arrayidx279.10, align 4, !tbaa !13
  %add280.10 = add i32 %22, %add280.9
  %arrayidx277.11 = getelementptr inbounds i32, i32* %diff, i64 11
  %23 = load i32, i32* %arrayidx277.11, align 4, !tbaa !13
  %idxprom278.11 = sext i32 %23 to i64
  %arrayidx279.11 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.11
  %24 = load i32, i32* %arrayidx279.11, align 4, !tbaa !13
  %add280.11 = add i32 %24, %add280.10
  %arrayidx277.12 = getelementptr inbounds i32, i32* %diff, i64 12
  %25 = load i32, i32* %arrayidx277.12, align 4, !tbaa !13
  %idxprom278.12 = sext i32 %25 to i64
  %arrayidx279.12 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.12
  %26 = load i32, i32* %arrayidx279.12, align 4, !tbaa !13
  %add280.12 = add i32 %26, %add280.11
  %arrayidx277.13 = getelementptr inbounds i32, i32* %diff, i64 13
  %27 = load i32, i32* %arrayidx277.13, align 4, !tbaa !13
  %idxprom278.13 = sext i32 %27 to i64
  %arrayidx279.13 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.13
  %28 = load i32, i32* %arrayidx279.13, align 4, !tbaa !13
  %add280.13 = add i32 %28, %add280.12
  %arrayidx277.14 = getelementptr inbounds i32, i32* %diff, i64 14
  %29 = load i32, i32* %arrayidx277.14, align 4, !tbaa !13
  %idxprom278.14 = sext i32 %29 to i64
  %arrayidx279.14 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.14
  %30 = load i32, i32* %arrayidx279.14, align 4, !tbaa !13
  %add280.14 = add i32 %30, %add280.13
  %arrayidx277.15 = getelementptr inbounds i32, i32* %diff, i64 15
  %31 = load i32, i32* %arrayidx277.15, align 4, !tbaa !13
  %idxprom278.15 = sext i32 %31 to i64
  %arrayidx279.15 = getelementptr inbounds i32, i32* %0, i64 %idxprom278.15
  %32 = load i32, i32* %arrayidx279.15, align 4, !tbaa !13
  %add280.15 = add i32 %32, %add280.14
  br label %if.end284

if.then:                                          ; preds = %entry
  %33 = load i32, i32* %diff, align 4, !tbaa !13
  %arrayidx1 = getelementptr inbounds i32, i32* %diff, i64 12
  %34 = load i32, i32* %arrayidx1, align 4, !tbaa !13
  %add = add nsw i32 %34, %33
  %arrayidx3 = getelementptr inbounds i32, i32* %diff, i64 1
  %35 = load i32, i32* %arrayidx3, align 4, !tbaa !13
  %arrayidx4 = getelementptr inbounds i32, i32* %diff, i64 13
  %36 = load i32, i32* %arrayidx4, align 4, !tbaa !13
  %add5 = add nsw i32 %36, %35
  %arrayidx7 = getelementptr inbounds i32, i32* %diff, i64 2
  %37 = load i32, i32* %arrayidx7, align 4, !tbaa !13
  %arrayidx8 = getelementptr inbounds i32, i32* %diff, i64 14
  %38 = load i32, i32* %arrayidx8, align 4, !tbaa !13
  %add9 = add nsw i32 %38, %37
  %arrayidx11 = getelementptr inbounds i32, i32* %diff, i64 3
  %39 = load i32, i32* %arrayidx11, align 4, !tbaa !13
  %arrayidx12 = getelementptr inbounds i32, i32* %diff, i64 15
  %40 = load i32, i32* %arrayidx12, align 4, !tbaa !13
  %add13 = add nsw i32 %40, %39
  %arrayidx15 = getelementptr inbounds i32, i32* %diff, i64 4
  %41 = load i32, i32* %arrayidx15, align 4, !tbaa !13
  %arrayidx16 = getelementptr inbounds i32, i32* %diff, i64 8
  %42 = load i32, i32* %arrayidx16, align 4, !tbaa !13
  %add17 = add nsw i32 %42, %41
  %arrayidx19 = getelementptr inbounds i32, i32* %diff, i64 5
  %43 = load i32, i32* %arrayidx19, align 4, !tbaa !13
  %arrayidx20 = getelementptr inbounds i32, i32* %diff, i64 9
  %44 = load i32, i32* %arrayidx20, align 4, !tbaa !13
  %add21 = add nsw i32 %44, %43
  %arrayidx23 = getelementptr inbounds i32, i32* %diff, i64 6
  %45 = load i32, i32* %arrayidx23, align 4, !tbaa !13
  %arrayidx24 = getelementptr inbounds i32, i32* %diff, i64 10
  %46 = load i32, i32* %arrayidx24, align 4, !tbaa !13
  %add25 = add nsw i32 %46, %45
  %arrayidx27 = getelementptr inbounds i32, i32* %diff, i64 7
  %47 = load i32, i32* %arrayidx27, align 4, !tbaa !13
  %arrayidx28 = getelementptr inbounds i32, i32* %diff, i64 11
  %48 = load i32, i32* %arrayidx28, align 4, !tbaa !13
  %add29 = add nsw i32 %48, %47
  %sub = sub nsw i32 %41, %42
  %sub36 = sub nsw i32 %43, %44
  %sub40 = sub nsw i32 %45, %46
  %sub44 = sub nsw i32 %47, %48
  %sub48 = sub nsw i32 %33, %34
  %sub52 = sub nsw i32 %35, %36
  %sub56 = sub nsw i32 %37, %38
  %sub60 = sub nsw i32 %39, %40
  %add64 = add nsw i32 %add17, %add
  %add68 = add nsw i32 %add21, %add5
  %add72 = add nsw i32 %add25, %add9
  %add76 = add nsw i32 %add29, %add13
  %add80 = add nsw i32 %sub, %sub48
  %add84 = add nsw i32 %sub36, %sub52
  %add88 = add nsw i32 %sub40, %sub56
  %add92 = add nsw i32 %sub44, %sub60
  %sub96 = sub nsw i32 %add, %add17
  %sub100 = sub nsw i32 %add5, %add21
  %sub104 = sub nsw i32 %add9, %add25
  %sub108 = sub nsw i32 %add13, %add29
  %sub112 = sub nsw i32 %sub48, %sub
  %sub116 = sub nsw i32 %sub52, %sub36
  %sub120 = sub nsw i32 %sub56, %sub40
  %sub124 = sub nsw i32 %sub60, %sub44
  %add128 = add nsw i32 %add76, %add64
  %add132 = add nsw i32 %add72, %add68
  %sub136 = sub nsw i32 %add68, %add72
  %sub140 = sub nsw i32 %add64, %add76
  %add144 = add nsw i32 %add92, %add80
  %add148 = add nsw i32 %add88, %add84
  %sub152 = sub nsw i32 %add84, %add88
  %sub156 = sub nsw i32 %add80, %add92
  %add160 = add nsw i32 %sub108, %sub96
  %add164 = add nsw i32 %sub104, %sub100
  %sub168 = sub nsw i32 %sub100, %sub104
  %sub172 = sub nsw i32 %sub96, %sub108
  %add176 = add nsw i32 %sub112, %sub124
  %add180 = add nsw i32 %sub120, %sub116
  %sub184 = sub nsw i32 %sub116, %sub120
  %sub188 = sub nsw i32 %sub112, %sub124
  %add192 = add nsw i32 %add132, %add128
  %sub196 = sub nsw i32 %add128, %add132
  %add200 = add nsw i32 %sub136, %sub140
  %sub204 = sub nsw i32 %sub140, %sub136
  %add208 = add nsw i32 %add148, %add144
  %sub212 = sub nsw i32 %add144, %add148
  %add216 = add nsw i32 %sub152, %sub156
  %sub220 = sub nsw i32 %sub156, %sub152
  %add224 = add nsw i32 %add164, %add160
  %sub228 = sub nsw i32 %add160, %add164
  %add232 = add nsw i32 %sub168, %sub172
  %sub236 = sub nsw i32 %sub172, %sub168
  %add240 = add nsw i32 %add180, %add176
  %sub244 = sub nsw i32 %add176, %add180
  %add248 = add nsw i32 %sub184, %sub188
  %sub252 = sub nsw i32 %sub188, %sub184
  %49 = load i32*, i32** @byte_abs, align 8, !tbaa !1
  %idxprom257 = sext i32 %add192 to i64
  %arrayidx258 = getelementptr inbounds i32, i32* %49, i64 %idxprom257
  %50 = load i32, i32* %arrayidx258, align 4, !tbaa !13
  %idxprom257.1 = sext i32 %sub196 to i64
  %arrayidx258.1 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.1
  %51 = load i32, i32* %arrayidx258.1, align 4, !tbaa !13
  %add259.1 = add i32 %51, %50
  %idxprom257.2 = sext i32 %add200 to i64
  %arrayidx258.2 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.2
  %52 = load i32, i32* %arrayidx258.2, align 4, !tbaa !13
  %add259.2 = add i32 %52, %add259.1
  %idxprom257.3 = sext i32 %sub204 to i64
  %arrayidx258.3 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.3
  %53 = load i32, i32* %arrayidx258.3, align 4, !tbaa !13
  %add259.3 = add i32 %53, %add259.2
  %idxprom257.4 = sext i32 %add208 to i64
  %arrayidx258.4 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.4
  %54 = load i32, i32* %arrayidx258.4, align 4, !tbaa !13
  %add259.4 = add i32 %54, %add259.3
  %idxprom257.5 = sext i32 %sub212 to i64
  %arrayidx258.5 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.5
  %55 = load i32, i32* %arrayidx258.5, align 4, !tbaa !13
  %add259.5 = add i32 %55, %add259.4
  %idxprom257.6 = sext i32 %add216 to i64
  %arrayidx258.6 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.6
  %56 = load i32, i32* %arrayidx258.6, align 4, !tbaa !13
  %add259.6 = add i32 %56, %add259.5
  %idxprom257.7 = sext i32 %sub220 to i64
  %arrayidx258.7 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.7
  %57 = load i32, i32* %arrayidx258.7, align 4, !tbaa !13
  %add259.7 = add i32 %57, %add259.6
  %idxprom257.8 = sext i32 %add224 to i64
  %arrayidx258.8 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.8
  %58 = load i32, i32* %arrayidx258.8, align 4, !tbaa !13
  %add259.8 = add i32 %58, %add259.7
  %idxprom257.9 = sext i32 %sub228 to i64
  %arrayidx258.9 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.9
  %59 = load i32, i32* %arrayidx258.9, align 4, !tbaa !13
  %add259.9 = add i32 %59, %add259.8
  %idxprom257.10 = sext i32 %add232 to i64
  %arrayidx258.10 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.10
  %60 = load i32, i32* %arrayidx258.10, align 4, !tbaa !13
  %add259.10 = add i32 %60, %add259.9
  %idxprom257.11 = sext i32 %sub236 to i64
  %arrayidx258.11 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.11
  %61 = load i32, i32* %arrayidx258.11, align 4, !tbaa !13
  %add259.11 = add i32 %61, %add259.10
  %idxprom257.12 = sext i32 %add240 to i64
  %arrayidx258.12 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.12
  %62 = load i32, i32* %arrayidx258.12, align 4, !tbaa !13
  %add259.12 = add i32 %62, %add259.11
  %idxprom257.13 = sext i32 %sub244 to i64
  %arrayidx258.13 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.13
  %63 = load i32, i32* %arrayidx258.13, align 4, !tbaa !13
  %add259.13 = add i32 %63, %add259.12
  %idxprom257.14 = sext i32 %add248 to i64
  %arrayidx258.14 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.14
  %64 = load i32, i32* %arrayidx258.14, align 4, !tbaa !13
  %add259.14 = add i32 %64, %add259.13
  %idxprom257.15 = sext i32 %sub252 to i64
  %arrayidx258.15 = getelementptr inbounds i32, i32* %49, i64 %idxprom257.15
  %65 = load i32, i32* %arrayidx258.15, align 4, !tbaa !13
  %add259.15 = add i32 %65, %add259.14
  %add271 = add nsw i32 %add259.15, 1
  %shr = ashr i32 %add271, 1
  br label %if.end284

if.end284:                                        ; preds = %for.cond273.preheader, %if.then
  %satd.4 = phi i32 [ %shr, %if.then ], [ %add280.15, %for.cond273.preheader ]
  ret i32 %satd.4
}

; Function Attrs: nounwind readonly uwtable
define i32 @SATD8X8(i32* nocapture readonly %diff, i32 %use_hadamard) local_unnamed_addr #6 {
entry:
  %m2 = alloca [8 x [8 x i32]], align 16
  %0 = bitcast [8 x [8 x i32]]* %m2 to i8*
  call void @llvm.lifetime.start(i64 256, i8* nonnull %0) #8
  %tobool = icmp eq i32 %use_hadamard, 0
  br i1 %tobool, label %for.cond509.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  br label %for.body

for.cond509.preheader:                            ; preds = %entry
  %1 = load i32*, i32** @byte_abs, align 8, !tbaa !1
  br label %for.body511

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv716 = phi i64 [ %indvars.iv.next717, %for.body ], [ 0, %for.body.preheader ]
  %2 = shl i64 %indvars.iv716, 3
  %arrayidx = getelementptr inbounds i32, i32* %diff, i64 %2
  %3 = load i32, i32* %arrayidx, align 4, !tbaa !13
  %4 = or i64 %2, 4
  %arrayidx2 = getelementptr inbounds i32, i32* %diff, i64 %4
  %5 = load i32, i32* %arrayidx2, align 4, !tbaa !13
  %add3 = add nsw i32 %5, %3
  %arrayidx6 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %indvars.iv716, i64 0
  %6 = or i64 %2, 1
  %arrayidx9 = getelementptr inbounds i32, i32* %diff, i64 %6
  %7 = load i32, i32* %arrayidx9, align 4, !tbaa !13
  %8 = or i64 %2, 5
  %arrayidx12 = getelementptr inbounds i32, i32* %diff, i64 %8
  %9 = load i32, i32* %arrayidx12, align 4, !tbaa !13
  %add13 = add nsw i32 %9, %7
  %arrayidx16 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %indvars.iv716, i64 1
  %10 = or i64 %2, 2
  %arrayidx19 = getelementptr inbounds i32, i32* %diff, i64 %10
  %11 = load i32, i32* %arrayidx19, align 4, !tbaa !13
  %12 = or i64 %2, 6
  %arrayidx22 = getelementptr inbounds i32, i32* %diff, i64 %12
  %13 = load i32, i32* %arrayidx22, align 4, !tbaa !13
  %add23 = add nsw i32 %13, %11
  %arrayidx26 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %indvars.iv716, i64 2
  %14 = or i64 %2, 3
  %arrayidx29 = getelementptr inbounds i32, i32* %diff, i64 %14
  %15 = load i32, i32* %arrayidx29, align 4, !tbaa !13
  %16 = or i64 %2, 7
  %arrayidx32 = getelementptr inbounds i32, i32* %diff, i64 %16
  %17 = load i32, i32* %arrayidx32, align 4, !tbaa !13
  %add33 = add nsw i32 %17, %15
  %arrayidx36 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %indvars.iv716, i64 3
  %sub = sub nsw i32 %3, %5
  %arrayidx44 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %indvars.iv716, i64 4
  %sub51 = sub nsw i32 %7, %9
  %arrayidx54 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %indvars.iv716, i64 5
  %sub61 = sub nsw i32 %11, %13
  %arrayidx64 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %indvars.iv716, i64 6
  %sub71 = sub nsw i32 %15, %17
  %arrayidx74 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %indvars.iv716, i64 7
  %add81 = add nsw i32 %add23, %add3
  %add91 = add nsw i32 %add33, %add13
  %sub101 = sub nsw i32 %add3, %add23
  %sub111 = sub nsw i32 %add13, %add33
  %add121 = add nsw i32 %sub61, %sub
  %add131 = add nsw i32 %sub71, %sub51
  %sub141 = sub nsw i32 %sub, %sub61
  %sub151 = sub nsw i32 %sub51, %sub71
  %add161 = add nsw i32 %add91, %add81
  store i32 %add161, i32* %arrayidx6, align 16, !tbaa !13
  %sub171 = sub nsw i32 %add81, %add91
  store i32 %sub171, i32* %arrayidx16, align 4, !tbaa !13
  %add181 = add nsw i32 %sub111, %sub101
  store i32 %add181, i32* %arrayidx26, align 8, !tbaa !13
  %sub191 = sub nsw i32 %sub101, %sub111
  store i32 %sub191, i32* %arrayidx36, align 4, !tbaa !13
  %add201 = add nsw i32 %add131, %add121
  store i32 %add201, i32* %arrayidx44, align 16, !tbaa !13
  %sub211 = sub nsw i32 %add121, %add131
  store i32 %sub211, i32* %arrayidx54, align 4, !tbaa !13
  %add221 = add nsw i32 %sub151, %sub141
  store i32 %add221, i32* %arrayidx64, align 8, !tbaa !13
  %sub231 = sub nsw i32 %sub141, %sub151
  store i32 %sub231, i32* %arrayidx74, align 4, !tbaa !13
  %indvars.iv.next717 = add nuw nsw i64 %indvars.iv716, 1
  %exitcond726 = icmp eq i64 %indvars.iv.next717, 8
  br i1 %exitcond726, label %for.body237.preheader, label %for.body

for.body237.preheader:                            ; preds = %for.body
  br label %for.body237

for.body237:                                      ; preds = %for.body237.preheader, %for.body237
  %indvars.iv713 = phi i64 [ %indvars.iv.next714, %for.body237 ], [ 0, %for.body237.preheader ]
  %arrayidx240 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 0, i64 %indvars.iv713
  %18 = load i32, i32* %arrayidx240, align 4, !tbaa !13
  %arrayidx243 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 4, i64 %indvars.iv713
  %19 = load i32, i32* %arrayidx243, align 4, !tbaa !13
  %add244 = add nsw i32 %19, %18
  %arrayidx250 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 1, i64 %indvars.iv713
  %20 = load i32, i32* %arrayidx250, align 4, !tbaa !13
  %arrayidx253 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 5, i64 %indvars.iv713
  %21 = load i32, i32* %arrayidx253, align 4, !tbaa !13
  %add254 = add nsw i32 %21, %20
  %arrayidx260 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 2, i64 %indvars.iv713
  %22 = load i32, i32* %arrayidx260, align 4, !tbaa !13
  %arrayidx263 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 6, i64 %indvars.iv713
  %23 = load i32, i32* %arrayidx263, align 4, !tbaa !13
  %add264 = add nsw i32 %23, %22
  %arrayidx270 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 3, i64 %indvars.iv713
  %24 = load i32, i32* %arrayidx270, align 4, !tbaa !13
  %arrayidx273 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 7, i64 %indvars.iv713
  %25 = load i32, i32* %arrayidx273, align 4, !tbaa !13
  %add274 = add nsw i32 %25, %24
  %sub284 = sub nsw i32 %18, %19
  %sub294 = sub nsw i32 %20, %21
  %sub304 = sub nsw i32 %22, %23
  %sub314 = sub nsw i32 %24, %25
  %add324 = add nsw i32 %add264, %add244
  %add334 = add nsw i32 %add274, %add254
  %sub344 = sub nsw i32 %add244, %add264
  %sub354 = sub nsw i32 %add254, %add274
  %add364 = add nsw i32 %sub304, %sub284
  %add374 = add nsw i32 %sub314, %sub294
  %sub384 = sub nsw i32 %sub284, %sub304
  %sub394 = sub nsw i32 %sub294, %sub314
  %add404 = add nsw i32 %add334, %add324
  store i32 %add404, i32* %arrayidx240, align 4, !tbaa !13
  %sub414 = sub nsw i32 %add324, %add334
  store i32 %sub414, i32* %arrayidx250, align 4, !tbaa !13
  %add424 = add nsw i32 %sub354, %sub344
  store i32 %add424, i32* %arrayidx260, align 4, !tbaa !13
  %sub434 = sub nsw i32 %sub344, %sub354
  store i32 %sub434, i32* %arrayidx270, align 4, !tbaa !13
  %add444 = add nsw i32 %add374, %add364
  store i32 %add444, i32* %arrayidx243, align 4, !tbaa !13
  %sub454 = sub nsw i32 %add364, %add374
  store i32 %sub454, i32* %arrayidx253, align 4, !tbaa !13
  %add464 = add nsw i32 %sub394, %sub384
  store i32 %add464, i32* %arrayidx263, align 4, !tbaa !13
  %sub474 = sub nsw i32 %sub384, %sub394
  store i32 %sub474, i32* %arrayidx273, align 4, !tbaa !13
  %indvars.iv.next714 = add nuw nsw i64 %indvars.iv713, 1
  %exitcond715 = icmp eq i64 %indvars.iv.next714, 8
  br i1 %exitcond715, label %for.cond484.preheader.preheader, label %for.body237

for.cond484.preheader.preheader:                  ; preds = %for.body237
  br label %for.cond484.preheader

for.cond484.preheader:                            ; preds = %for.cond484.preheader.preheader
  %26 = bitcast [8 x [8 x i32]]* %m2 to <8 x i32>*
  %27 = load <8 x i32>, <8 x i32>* %26, align 16, !tbaa !13
  %28 = icmp slt <8 x i32> %27, zeroinitializer
  %29 = sub nsw <8 x i32> zeroinitializer, %27
  %30 = select <8 x i1> %28, <8 x i32> %29, <8 x i32> %27
  %rdx.shuf = shufflevector <8 x i32> %30, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx = add <8 x i32> %30, %rdx.shuf
  %rdx.shuf727 = shufflevector <8 x i32> %bin.rdx, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx728 = add <8 x i32> %bin.rdx, %rdx.shuf727
  %rdx.shuf729 = shufflevector <8 x i32> %bin.rdx728, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx730 = add <8 x i32> %bin.rdx728, %rdx.shuf729
  %31 = extractelement <8 x i32> %bin.rdx730, i32 0
  %arrayidx490.1 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 1, i64 0
  %32 = bitcast i32* %arrayidx490.1 to <8 x i32>*
  %33 = load <8 x i32>, <8 x i32>* %32, align 16, !tbaa !13
  %34 = icmp slt <8 x i32> %33, zeroinitializer
  %35 = sub nsw <8 x i32> zeroinitializer, %33
  %36 = select <8 x i1> %34, <8 x i32> %35, <8 x i32> %33
  %rdx.shuf.1 = shufflevector <8 x i32> %36, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx.1 = add <8 x i32> %36, %rdx.shuf.1
  %rdx.shuf727.1 = shufflevector <8 x i32> %bin.rdx.1, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx728.1 = add <8 x i32> %bin.rdx.1, %rdx.shuf727.1
  %rdx.shuf729.1 = shufflevector <8 x i32> %bin.rdx728.1, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx730.1 = add <8 x i32> %bin.rdx728.1, %rdx.shuf729.1
  %37 = extractelement <8 x i32> %bin.rdx730.1, i32 0
  %add501.7.1 = add nsw i32 %37, %31
  %arrayidx490.2 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 2, i64 0
  %38 = bitcast i32* %arrayidx490.2 to <8 x i32>*
  %39 = load <8 x i32>, <8 x i32>* %38, align 16, !tbaa !13
  %40 = icmp slt <8 x i32> %39, zeroinitializer
  %41 = sub nsw <8 x i32> zeroinitializer, %39
  %42 = select <8 x i1> %40, <8 x i32> %41, <8 x i32> %39
  %rdx.shuf.2 = shufflevector <8 x i32> %42, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx.2 = add <8 x i32> %42, %rdx.shuf.2
  %rdx.shuf727.2 = shufflevector <8 x i32> %bin.rdx.2, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx728.2 = add <8 x i32> %bin.rdx.2, %rdx.shuf727.2
  %rdx.shuf729.2 = shufflevector <8 x i32> %bin.rdx728.2, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx730.2 = add <8 x i32> %bin.rdx728.2, %rdx.shuf729.2
  %43 = extractelement <8 x i32> %bin.rdx730.2, i32 0
  %add501.7.2 = add nsw i32 %43, %add501.7.1
  %arrayidx490.3 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 3, i64 0
  %44 = bitcast i32* %arrayidx490.3 to <8 x i32>*
  %45 = load <8 x i32>, <8 x i32>* %44, align 16, !tbaa !13
  %46 = icmp slt <8 x i32> %45, zeroinitializer
  %47 = sub nsw <8 x i32> zeroinitializer, %45
  %48 = select <8 x i1> %46, <8 x i32> %47, <8 x i32> %45
  %rdx.shuf.3 = shufflevector <8 x i32> %48, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx.3 = add <8 x i32> %48, %rdx.shuf.3
  %rdx.shuf727.3 = shufflevector <8 x i32> %bin.rdx.3, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx728.3 = add <8 x i32> %bin.rdx.3, %rdx.shuf727.3
  %rdx.shuf729.3 = shufflevector <8 x i32> %bin.rdx728.3, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx730.3 = add <8 x i32> %bin.rdx728.3, %rdx.shuf729.3
  %49 = extractelement <8 x i32> %bin.rdx730.3, i32 0
  %add501.7.3 = add nsw i32 %49, %add501.7.2
  %arrayidx490.4 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 4, i64 0
  %50 = bitcast i32* %arrayidx490.4 to <8 x i32>*
  %51 = load <8 x i32>, <8 x i32>* %50, align 16, !tbaa !13
  %52 = icmp slt <8 x i32> %51, zeroinitializer
  %53 = sub nsw <8 x i32> zeroinitializer, %51
  %54 = select <8 x i1> %52, <8 x i32> %53, <8 x i32> %51
  %rdx.shuf.4 = shufflevector <8 x i32> %54, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx.4 = add <8 x i32> %54, %rdx.shuf.4
  %rdx.shuf727.4 = shufflevector <8 x i32> %bin.rdx.4, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx728.4 = add <8 x i32> %bin.rdx.4, %rdx.shuf727.4
  %rdx.shuf729.4 = shufflevector <8 x i32> %bin.rdx728.4, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx730.4 = add <8 x i32> %bin.rdx728.4, %rdx.shuf729.4
  %55 = extractelement <8 x i32> %bin.rdx730.4, i32 0
  %add501.7.4 = add nsw i32 %55, %add501.7.3
  %arrayidx490.5 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 5, i64 0
  %56 = bitcast i32* %arrayidx490.5 to <8 x i32>*
  %57 = load <8 x i32>, <8 x i32>* %56, align 16, !tbaa !13
  %58 = icmp slt <8 x i32> %57, zeroinitializer
  %59 = sub nsw <8 x i32> zeroinitializer, %57
  %60 = select <8 x i1> %58, <8 x i32> %59, <8 x i32> %57
  %rdx.shuf.5 = shufflevector <8 x i32> %60, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx.5 = add <8 x i32> %60, %rdx.shuf.5
  %rdx.shuf727.5 = shufflevector <8 x i32> %bin.rdx.5, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx728.5 = add <8 x i32> %bin.rdx.5, %rdx.shuf727.5
  %rdx.shuf729.5 = shufflevector <8 x i32> %bin.rdx728.5, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx730.5 = add <8 x i32> %bin.rdx728.5, %rdx.shuf729.5
  %61 = extractelement <8 x i32> %bin.rdx730.5, i32 0
  %add501.7.5 = add nsw i32 %61, %add501.7.4
  %arrayidx490.6 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 6, i64 0
  %62 = bitcast i32* %arrayidx490.6 to <8 x i32>*
  %63 = load <8 x i32>, <8 x i32>* %62, align 16, !tbaa !13
  %64 = icmp slt <8 x i32> %63, zeroinitializer
  %65 = sub nsw <8 x i32> zeroinitializer, %63
  %66 = select <8 x i1> %64, <8 x i32> %65, <8 x i32> %63
  %rdx.shuf.6 = shufflevector <8 x i32> %66, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx.6 = add <8 x i32> %66, %rdx.shuf.6
  %rdx.shuf727.6 = shufflevector <8 x i32> %bin.rdx.6, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx728.6 = add <8 x i32> %bin.rdx.6, %rdx.shuf727.6
  %rdx.shuf729.6 = shufflevector <8 x i32> %bin.rdx728.6, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx730.6 = add <8 x i32> %bin.rdx728.6, %rdx.shuf729.6
  %67 = extractelement <8 x i32> %bin.rdx730.6, i32 0
  %add501.7.6 = add nsw i32 %67, %add501.7.5
  %arrayidx490.7 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 7, i64 0
  %68 = bitcast i32* %arrayidx490.7 to <8 x i32>*
  %69 = load <8 x i32>, <8 x i32>* %68, align 16, !tbaa !13
  %70 = icmp slt <8 x i32> %69, zeroinitializer
  %71 = sub nsw <8 x i32> zeroinitializer, %69
  %72 = select <8 x i1> %70, <8 x i32> %71, <8 x i32> %69
  %rdx.shuf.7 = shufflevector <8 x i32> %72, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx.7 = add <8 x i32> %72, %rdx.shuf.7
  %rdx.shuf727.7 = shufflevector <8 x i32> %bin.rdx.7, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx728.7 = add <8 x i32> %bin.rdx.7, %rdx.shuf727.7
  %rdx.shuf729.7 = shufflevector <8 x i32> %bin.rdx728.7, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx730.7 = add <8 x i32> %bin.rdx728.7, %rdx.shuf729.7
  %73 = extractelement <8 x i32> %bin.rdx730.7, i32 0
  %add501.7.7 = add nsw i32 %73, %add501.7.6
  %add508 = add nsw i32 %add501.7.7, 2
  %shr = ashr i32 %add508, 2
  br label %if.end

for.body511:                                      ; preds = %for.body511, %for.cond509.preheader
  %indvars.iv = phi i64 [ 0, %for.cond509.preheader ], [ %indvars.iv.next.3, %for.body511 ]
  %sad.2700 = phi i32 [ 0, %for.cond509.preheader ], [ %add516.3, %for.body511 ]
  %arrayidx513 = getelementptr inbounds i32, i32* %diff, i64 %indvars.iv
  %74 = load i32, i32* %arrayidx513, align 4, !tbaa !13
  %idxprom514 = sext i32 %74 to i64
  %arrayidx515 = getelementptr inbounds i32, i32* %1, i64 %idxprom514
  %75 = load i32, i32* %arrayidx515, align 4, !tbaa !13
  %add516 = add i32 %75, %sad.2700
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx513.1 = getelementptr inbounds i32, i32* %diff, i64 %indvars.iv.next
  %76 = load i32, i32* %arrayidx513.1, align 4, !tbaa !13
  %idxprom514.1 = sext i32 %76 to i64
  %arrayidx515.1 = getelementptr inbounds i32, i32* %1, i64 %idxprom514.1
  %77 = load i32, i32* %arrayidx515.1, align 4, !tbaa !13
  %add516.1 = add i32 %77, %add516
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx513.2 = getelementptr inbounds i32, i32* %diff, i64 %indvars.iv.next.1
  %78 = load i32, i32* %arrayidx513.2, align 4, !tbaa !13
  %idxprom514.2 = sext i32 %78 to i64
  %arrayidx515.2 = getelementptr inbounds i32, i32* %1, i64 %idxprom514.2
  %79 = load i32, i32* %arrayidx515.2, align 4, !tbaa !13
  %add516.2 = add i32 %79, %add516.1
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx513.3 = getelementptr inbounds i32, i32* %diff, i64 %indvars.iv.next.2
  %80 = load i32, i32* %arrayidx513.3, align 4, !tbaa !13
  %idxprom514.3 = sext i32 %80 to i64
  %arrayidx515.3 = getelementptr inbounds i32, i32* %1, i64 %idxprom514.3
  %81 = load i32, i32* %arrayidx515.3, align 4, !tbaa !13
  %add516.3 = add i32 %81, %add516.2
  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.3, 64
  br i1 %exitcond.3, label %if.end.loopexit, label %for.body511

if.end.loopexit:                                  ; preds = %for.body511
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %for.cond484.preheader
  %sad.3 = phi i32 [ %shr, %for.cond484.preheader ], [ %add516.3, %if.end.loopexit ]
  call void @llvm.lifetime.end(i64 256, i8* nonnull %0) #8
  ret i32 %sad.3
}

; Function Attrs: nounwind readonly uwtable
define i32 @find_SATD(i32* nocapture readonly %c_diff, i32 %blocktype) local_unnamed_addr #6 {
entry:
  switch i32 %blocktype, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb11
    i32 3, label %sw.bb11
    i32 4, label %sw.bb18
  ]

sw.bb:                                            ; preds = %entry
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i64 0, i32 6
  %1 = load i32, i32* %hadamard, align 8, !tbaa !338
  %call = tail call i32 @SATD8X8(i32* %c_diff, i32 %1)
  %arrayidx = getelementptr inbounds i32, i32* %c_diff, i64 64
  %call2 = tail call i32 @SATD8X8(i32* %arrayidx, i32 %1)
  %add = add nsw i32 %call2, %call
  %arrayidx3 = getelementptr inbounds i32, i32* %c_diff, i64 128
  %call5 = tail call i32 @SATD8X8(i32* %arrayidx3, i32 %1)
  %add6 = add nsw i32 %add, %call5
  %arrayidx7 = getelementptr inbounds i32, i32* %c_diff, i64 192
  %call9 = tail call i32 @SATD8X8(i32* %arrayidx7, i32 %1)
  %add10 = add nsw i32 %add6, %call9
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry, %entry
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %hadamard12 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 6
  %3 = load i32, i32* %hadamard12, align 8, !tbaa !338
  %call13 = tail call i32 @SATD8X8(i32* %c_diff, i32 %3)
  %arrayidx14 = getelementptr inbounds i32, i32* %c_diff, i64 64
  %call16 = tail call i32 @SATD8X8(i32* %arrayidx14, i32 %3)
  %add17 = add nsw i32 %call16, %call13
  br label %sw.epilog

sw.bb18:                                          ; preds = %entry
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %hadamard19 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i64 0, i32 6
  %5 = load i32, i32* %hadamard19, align 8, !tbaa !338
  %call20 = tail call i32 @SATD8X8(i32* %c_diff, i32 %5)
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %sw.bb18, %sw.bb11, %sw.bb
  %sad.0 = phi i32 [ %call20, %sw.bb18 ], [ %add17, %sw.bb11 ], [ %add10, %sw.bb ], [ -1, %entry ]
  ret i32 %sad.0
}

; Function Attrs: nounwind uwtable
define i32 @SubPelBlockMotionSearch(i16** nocapture readonly %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i32 %pred_mv_x, i32 %pred_mv_y, i16* nocapture %mv_x, i16* nocapture %mv_y, i32 %search_pos2, i32 %search_pos4, i32 %min_mcost, i32 %lambda_factor) local_unnamed_addr #0 {
entry:
  %c_diff = alloca [256 x i32], align 16
  %diff = alloca [16 x i32], align 16
  %0 = bitcast [256 x i32]* %c_diff to i8*
  call void @llvm.lifetime.start(i64 1024, i8* nonnull %0) #8
  %1 = bitcast [16 x i32]* %diff to i8*
  call void @llvm.lifetime.start(i64 64, i8* nonnull %1) #8
  %cmp = icmp eq i32 %blocktype, 3
  %conv = zext i1 %cmp to i32
  %mul = shl nuw nsw i32 %conv, 6
  %sub = sub nsw i32 128, %mul
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 106
  %3 = load i32, i32* %rdopt, align 8, !tbaa !309
  %tobool = icmp eq i32 %3, 0
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  br i1 %tobool, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 6
  %5 = load i32, i32* %type, align 8, !tbaa !300
  %cmp1 = icmp eq i32 %5, 1
  br i1 %cmp1, label %land.end, label %land.lhs.true3

land.lhs.true3:                                   ; preds = %land.lhs.true
  %cmp5 = icmp eq i16 %ref, 0
  %cmp8 = icmp eq i32 %blocktype, 1
  %or.cond = and i1 %cmp5, %cmp8
  br i1 %or.cond, label %land.lhs.true10, label %land.end

land.lhs.true10:                                  ; preds = %land.lhs.true3
  %6 = load i16, i16* %mv_x, align 2, !tbaa !308
  %cmp12 = icmp eq i16 %6, 0
  br i1 %cmp12, label %land.lhs.true14, label %land.end

land.lhs.true14:                                  ; preds = %land.lhs.true10
  %7 = load i16, i16* %mv_y, align 2, !tbaa !308
  %cmp16 = icmp eq i16 %7, 0
  br i1 %cmp16, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true14
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 6
  %8 = load i32, i32* %hadamard, align 8, !tbaa !338
  %tobool18 = icmp ne i32 %8, 0
  br label %land.end

land.end:                                         ; preds = %entry, %land.lhs.true, %land.rhs, %land.lhs.true14, %land.lhs.true10, %land.lhs.true3
  %9 = phi i1 [ false, %land.lhs.true14 ], [ false, %land.lhs.true10 ], [ false, %land.lhs.true3 ], [ false, %land.lhs.true ], [ %tobool18, %land.rhs ], [ false, %entry ]
  %idxprom = sext i32 %blocktype to i64
  %arrayidx19 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 21, i64 %idxprom, i64 0
  %10 = load i32, i32* %arrayidx19, align 4, !tbaa !13
  %arrayidx23 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 21, i64 %idxprom, i64 1
  %11 = load i32, i32* %arrayidx23, align 4, !tbaa !13
  %add = shl i32 %pic_pix_x, 2
  %shl = add i32 %add, 16
  %add24 = shl i32 %pic_pix_y, 2
  %shl25 = add i32 %add24, 16
  %hadamard26 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 6
  %12 = load i32, i32* %hadamard26, align 8, !tbaa !338
  %not.cmp27 = icmp ne i32 %12, 1
  %cond = zext i1 %not.cmp27 to i32
  %tobool30 = icmp eq i32 %12, 0
  %13 = icmp sgt i32 %search_pos2, 1
  %14 = or i1 %13, %tobool30
  %cond37 = select i1 %14, i32 %search_pos2, i32 1
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 55
  %15 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8, !tbaa !293
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 3
  %16 = load i32, i32* %current_mb_nr, align 4, !tbaa !294
  %idxprom38 = sext i32 %16 to i64
  %list_offset40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %15, i64 %idxprom38, i32 20
  %17 = load i32, i32* %list_offset40, align 4, !tbaa !295
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8, !tbaa !1
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i64 0, i32 19
  %19 = load i32, i32* %weighted_pred_flag, align 8, !tbaa !298
  %tobool41 = icmp eq i32 %19, 0
  br i1 %tobool41, label %lor.rhs, label %land.lhs.true42

land.lhs.true42:                                  ; preds = %land.end
  %type43 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 6
  %20 = load i32, i32* %type43, align 8, !tbaa !300
  switch i32 %20, label %lor.rhs [
    i32 0, label %lor.end
    i32 3, label %lor.end
  ]

lor.rhs:                                          ; preds = %land.lhs.true42, %land.end
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i64 0, i32 20
  %21 = load i32, i32* %weighted_bipred_idc, align 4, !tbaa !301
  %tobool49 = icmp eq i32 %21, 0
  br i1 %tobool49, label %lor.end, label %land.rhs50

land.rhs50:                                       ; preds = %lor.rhs
  %type51 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 6
  %22 = load i32, i32* %type51, align 8, !tbaa !300
  %cmp52 = icmp eq i32 %22, 1
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true42, %land.lhs.true42, %lor.rhs, %land.rhs50
  %23 = phi i1 [ true, %land.lhs.true42 ], [ false, %lor.rhs ], [ %cmp52, %land.rhs50 ], [ true, %land.lhs.true42 ]
  %cmp57 = icmp eq i32 %12, 2
  %. = select i1 %cmp57, i32 0, i32 %12
  %not.cmp65 = icmp ne i32 %12, 2
  %cond67 = zext i1 %not.cmp65 to i32
  %Transform8x8Mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 144
  %24 = load i32, i32* %Transform8x8Mode, align 4, !tbaa !339
  %tobool68 = icmp ne i32 %24, 0
  %cmp70 = icmp slt i32 %blocktype, 5
  %or.cond623 = and i1 %cmp70, %tobool68
  %tobool73 = icmp ne i32 %., 0
  %tobool73. = and i1 %or.cond623, %tobool73
  %add76 = add nsw i32 %17, %list
  %idxprom77 = sext i32 %add76 to i64
  %arrayidx78 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom77
  %25 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx78, align 8, !tbaa !1
  %idxprom79 = sext i16 %ref to i64
  %arrayidx80 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %25, i64 %idxprom79
  %26 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx80, align 8, !tbaa !1
  br i1 %23, label %land.lhs.true82, label %cond.false85

land.lhs.true82:                                  ; preds = %lor.end
  %UseWeightedReferenceME = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 56
  %27 = load i32, i32* %UseWeightedReferenceME, align 8, !tbaa !302
  %tobool83 = icmp eq i32 %27, 0
  br i1 %tobool83, label %cond.false85, label %cond.true84

cond.true84:                                      ; preds = %land.lhs.true82
  %imgY_ups_w = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %26, i64 0, i32 29
  br label %cond.end86

cond.false85:                                     ; preds = %land.lhs.true82, %lor.end
  %imgY_ups = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %26, i64 0, i32 28
  br label %cond.end86

cond.end86:                                       ; preds = %cond.false85, %cond.true84
  %imgY_ups.sink = phi i16*** [ %imgY_ups, %cond.false85 ], [ %imgY_ups_w, %cond.true84 ]
  %28 = load i16**, i16*** %imgY_ups.sink, align 8, !tbaa !1
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %26, i64 0, i32 18
  %29 = load i32, i32* %size_x, align 8, !tbaa !303
  %sub89 = shl i32 %29, 2
  %shl90 = add i32 %sub89, 28
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %26, i64 0, i32 19
  %30 = load i32, i32* %size_y, align 4, !tbaa !305
  %sub92 = shl i32 %30, 2
  %shl93 = add i32 %sub92, 28
  %sub95 = sub nsw i32 %29, %10
  %add96 = shl i32 %sub95, 2
  %shl97 = add i32 %add96, 32
  %sub99 = sub nsw i32 %30, %11
  %add100 = shl i32 %sub99, 2
  %shl101 = add i32 %add100, 32
  %31 = load i16, i16* %mv_x, align 2, !tbaa !308
  %conv102 = sext i16 %31 to i32
  %add103 = add nsw i32 %conv102, %shl
  %cmp104 = icmp sgt i32 %add103, 1
  %sub109 = add i32 %add96, 31
  %cmp110 = icmp slt i32 %add103, %sub109
  %or.cond962 = and i1 %cmp104, %cmp110
  br i1 %or.cond962, label %land.lhs.true112, label %if.end

land.lhs.true112:                                 ; preds = %cond.end86
  %32 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv113 = sext i16 %32 to i32
  %add114 = add nsw i32 %conv113, %shl25
  %cmp115 = icmp sgt i32 %add114, 1
  br i1 %cmp115, label %land.lhs.true117, label %if.end

land.lhs.true117:                                 ; preds = %land.lhs.true112
  %sub120 = add i32 %add100, 31
  %cmp121 = icmp slt i32 %add114, %sub120
  %FastLine4X.UMVLine4X = select i1 %cmp121, i16* (i16**, i32, i32, i32, i32)* @FastLine4X, i16* (i16**, i32, i32, i32, i32)* @UMVLine4X
  br label %if.end

if.end:                                           ; preds = %land.lhs.true117, %cond.end86, %land.lhs.true112
  %UMVLine4X.sink = phi i16* (i16**, i32, i32, i32, i32)* [ @UMVLine4X, %land.lhs.true112 ], [ @UMVLine4X, %cond.end86 ], [ %FastLine4X.UMVLine4X, %land.lhs.true117 ]
  store i16* (i16**, i32, i32, i32, i32)* %UMVLine4X.sink, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %cmp1231003 = icmp slt i32 %cond, %cond37
  br i1 %cmp1231003, label %for.body.lr.ph, label %if.end352

for.body.lr.ph:                                   ; preds = %if.end
  %shr151 = ashr i32 %lambda_factor, 12
  %cmp161996 = icmp sgt i32 %11, 0
  %arraydecay327 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 0
  %cmp180989 = icmp sgt i32 %10, 0
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %incdec.ptr208 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 4
  %incdec.ptr235 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 8
  %incdec.ptr262 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 12
  %33 = sext i32 %10 to i64
  %34 = sext i32 %11 to i64
  %35 = zext i1 %not.cmp27 to i64
  %36 = bitcast [16 x i32]* %diff to i8*
  %37 = bitcast i32* %incdec.ptr208 to i8*
  %38 = bitcast i32* %incdec.ptr235 to i8*
  %39 = bitcast i32* %incdec.ptr262 to i8*
  %wide.trip.count1034 = zext i32 %cond37 to i64
  %40 = bitcast [16 x i32]* %diff to <4 x i32>*
  %41 = bitcast i32* %incdec.ptr208 to <4 x i32>*
  %42 = bitcast i32* %incdec.ptr235 to <4 x i32>*
  %43 = bitcast i32* %incdec.ptr262 to <4 x i32>*
  br label %for.body

for.body:                                         ; preds = %for.inc335.for.body_crit_edge, %for.body.lr.ph
  %44 = phi i16 [ %31, %for.body.lr.ph ], [ %.pre1036, %for.inc335.for.body_crit_edge ]
  %indvars.iv1032 = phi i64 [ %35, %for.body.lr.ph ], [ %indvars.iv.next1033, %for.inc335.for.body_crit_edge ]
  %min_mcost.addr.01007 = phi i32 [ %min_mcost, %for.body.lr.ph ], [ %min_mcost.addr.1, %for.inc335.for.body_crit_edge ]
  %best_pos.01004 = phi i32 [ 0, %for.body.lr.ph ], [ %best_pos.1, %for.inc335.for.body_crit_edge ]
  %conv125 = sext i16 %44 to i32
  %45 = load i16*, i16** @spiral_hpel_search_x, align 8, !tbaa !1
  %arrayidx127 = getelementptr inbounds i16, i16* %45, i64 %indvars.iv1032
  %46 = load i16, i16* %arrayidx127, align 2, !tbaa !308
  %conv128 = sext i16 %46 to i32
  %add129 = add nsw i32 %conv128, %conv125
  %47 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv130 = sext i16 %47 to i32
  %48 = load i16*, i16** @spiral_hpel_search_y, align 8, !tbaa !1
  %arrayidx132 = getelementptr inbounds i16, i16* %48, i64 %indvars.iv1032
  %49 = load i16, i16* %arrayidx132, align 2, !tbaa !308
  %conv133 = sext i16 %49 to i32
  %add134 = add nsw i32 %conv133, %conv130
  %50 = load i32*, i32** @mvbits, align 8, !tbaa !1
  %sub136 = sub nsw i32 %add129, %pred_mv_x
  %idxprom137 = sext i32 %sub136 to i64
  %arrayidx138 = getelementptr inbounds i32, i32* %50, i64 %idxprom137
  %51 = load i32, i32* %arrayidx138, align 4, !tbaa !13
  %sub140 = sub nsw i32 %add134, %pred_mv_y
  %idxprom141 = sext i32 %sub140 to i64
  %arrayidx142 = getelementptr inbounds i32, i32* %50, i64 %idxprom141
  %52 = load i32, i32* %arrayidx142, align 4, !tbaa !13
  %add143 = add nsw i32 %52, %51
  %mul144 = mul nsw i32 %add143, %lambda_factor
  %shr = ashr i32 %mul144, 16
  %cmp147 = icmp eq i64 %indvars.iv1032, 0
  %or.cond624 = and i1 %9, %cmp147
  %sub152 = select i1 %or.cond624, i32 %shr151, i32 0
  %mcost.0 = sub nsw i32 %shr, %sub152
  %cmp154 = icmp slt i32 %mcost.0, %min_mcost.addr.01007
  br i1 %cmp154, label %if.end157, label %for.inc335

if.end157:                                        ; preds = %for.body
  %add158 = add nsw i32 %add129, %shl
  %add159 = add nsw i32 %add134, %shl25
  br i1 %cmp161996, label %for.body167.preheader, label %for.end324

for.body167.preheader:                            ; preds = %if.end157
  br label %for.body167

for.body167:                                      ; preds = %for.body167.preheader, %for.inc322
  %indvars.iv1024 = phi i64 [ %indvars.iv.next1025, %for.inc322 ], [ 0, %for.body167.preheader ]
  %mcost.11001 = phi i32 [ %mcost.4, %for.inc322 ], [ %mcost.0, %for.body167.preheader ]
  %y0.0998 = phi i32 [ %add323, %for.inc322 ], [ 0, %for.body167.preheader ]
  %cmp168 = icmp sgt i64 %indvars.iv1024, 7
  %mul170 = select i1 %cmp168, i32 %sub, i32 0
  %53 = trunc i64 %indvars.iv1024 to i32
  %shl171 = shl i32 %53, 2
  %add172 = add nsw i32 %add159, %shl171
  %add173 = add nsw i32 %add172, 4
  %add174 = add nsw i32 %add172, 8
  %add175 = add nsw i32 %add172, 12
  %54 = or i64 %indvars.iv1024, 1
  br i1 %cmp180989, label %for.body182.lr.ph, label %for.inc322

for.body182.lr.ph:                                ; preds = %for.body167
  %55 = or i64 %indvars.iv1024, 3
  %56 = add nuw nsw i64 %54, 1
  %arrayidx186 = getelementptr inbounds i16*, i16** %orig_pic, i64 %indvars.iv1024
  %arrayidx210 = getelementptr inbounds i16*, i16** %orig_pic, i64 %54
  %arrayidx237 = getelementptr inbounds i16*, i16** %orig_pic, i64 %56
  %arrayidx264 = getelementptr inbounds i16*, i16** %orig_pic, i64 %55
  %and310 = shl i32 %53, 3
  %shl311 = and i32 %and310, 32
  %57 = or i64 %indvars.iv1024, 1
  %58 = or i32 %y0.0998, 3
  %59 = sext i32 %58 to i64
  %cmp307 = icmp slt i64 %indvars.iv1024, %59
  %60 = trunc i64 %57 to i32
  %and310.1 = shl i32 %60, 3
  %shl311.1 = and i32 %and310.1, 40
  %61 = add nuw nsw i64 %57, 1
  %62 = trunc i64 %61 to i32
  %and310.2 = shl i32 %62, 3
  %shl311.2 = and i32 %and310.2, 48
  %63 = trunc i64 %indvars.iv1024 to i32
  %64 = shl i32 %63, 3
  %and310.3 = and i32 %64, 32
  br label %for.body182

for.body182:                                      ; preds = %for.body182.lr.ph, %for.inc319
  %indvars.iv1022 = phi i64 [ 0, %for.body182.lr.ph ], [ %indvars.iv.next1023, %for.inc319 ]
  %mcost.2991 = phi i32 [ %mcost.11001, %for.body182.lr.ph ], [ %mcost.3, %for.inc319 ]
  %65 = trunc i64 %indvars.iv1022 to i32
  %shl183 = shl i32 %65, 2
  %add184 = add nsw i32 %add158, %shl183
  %66 = load i16*, i16** %arrayidx186, align 8, !tbaa !1
  %arrayidx188 = getelementptr inbounds i16, i16* %66, i64 %indvars.iv1022
  %67 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call = tail call i16* %67(i16** %28, i32 %add172, i32 %add184, i32 %shl93, i32 %shl90) #8
  %68 = load i16, i16* %call, align 2, !tbaa !308
  %add.ptr = getelementptr inbounds i16, i16* %call, i64 4
  %69 = load i16, i16* %add.ptr, align 2, !tbaa !308
  %add.ptr200 = getelementptr inbounds i16, i16* %call, i64 8
  %70 = load i16, i16* %add.ptr200, align 2, !tbaa !308
  %71 = bitcast i16* %arrayidx188 to <4 x i16>*
  %72 = load <4 x i16>, <4 x i16>* %71, align 2, !tbaa !308
  %73 = zext <4 x i16> %72 to <4 x i32>
  %add.ptr205 = getelementptr inbounds i16, i16* %call, i64 12
  %74 = load i16, i16* %add.ptr205, align 2, !tbaa !308
  %75 = insertelement <4 x i16> undef, i16 %68, i32 0
  %76 = insertelement <4 x i16> %75, i16 %69, i32 1
  %77 = insertelement <4 x i16> %76, i16 %70, i32 2
  %78 = insertelement <4 x i16> %77, i16 %74, i32 3
  %79 = zext <4 x i16> %78 to <4 x i32>
  %80 = sub nsw <4 x i32> %73, %79
  store <4 x i32> %80, <4 x i32>* %40, align 16, !tbaa !13
  %81 = load i16*, i16** %arrayidx210, align 8, !tbaa !1
  %arrayidx212 = getelementptr inbounds i16, i16* %81, i64 %indvars.iv1022
  %82 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call213 = tail call i16* %82(i16** %28, i32 %add173, i32 %add184, i32 %shl93, i32 %shl90) #8
  %83 = load i16, i16* %call213, align 2, !tbaa !308
  %add.ptr221 = getelementptr inbounds i16, i16* %call213, i64 4
  %84 = load i16, i16* %add.ptr221, align 2, !tbaa !308
  %add.ptr227 = getelementptr inbounds i16, i16* %call213, i64 8
  %85 = load i16, i16* %add.ptr227, align 2, !tbaa !308
  %86 = bitcast i16* %arrayidx212 to <4 x i16>*
  %87 = load <4 x i16>, <4 x i16>* %86, align 2, !tbaa !308
  %88 = zext <4 x i16> %87 to <4 x i32>
  %add.ptr232 = getelementptr inbounds i16, i16* %call213, i64 12
  %89 = load i16, i16* %add.ptr232, align 2, !tbaa !308
  %90 = insertelement <4 x i16> undef, i16 %83, i32 0
  %91 = insertelement <4 x i16> %90, i16 %84, i32 1
  %92 = insertelement <4 x i16> %91, i16 %85, i32 2
  %93 = insertelement <4 x i16> %92, i16 %89, i32 3
  %94 = zext <4 x i16> %93 to <4 x i32>
  %95 = sub nsw <4 x i32> %88, %94
  store <4 x i32> %95, <4 x i32>* %41, align 16, !tbaa !13
  %96 = load i16*, i16** %arrayidx237, align 8, !tbaa !1
  %arrayidx239 = getelementptr inbounds i16, i16* %96, i64 %indvars.iv1022
  %97 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call240 = tail call i16* %97(i16** %28, i32 %add174, i32 %add184, i32 %shl93, i32 %shl90) #8
  %98 = load i16, i16* %call240, align 2, !tbaa !308
  %add.ptr248 = getelementptr inbounds i16, i16* %call240, i64 4
  %99 = load i16, i16* %add.ptr248, align 2, !tbaa !308
  %add.ptr254 = getelementptr inbounds i16, i16* %call240, i64 8
  %100 = load i16, i16* %add.ptr254, align 2, !tbaa !308
  %101 = bitcast i16* %arrayidx239 to <4 x i16>*
  %102 = load <4 x i16>, <4 x i16>* %101, align 2, !tbaa !308
  %103 = zext <4 x i16> %102 to <4 x i32>
  %add.ptr259 = getelementptr inbounds i16, i16* %call240, i64 12
  %104 = load i16, i16* %add.ptr259, align 2, !tbaa !308
  %105 = insertelement <4 x i16> undef, i16 %98, i32 0
  %106 = insertelement <4 x i16> %105, i16 %99, i32 1
  %107 = insertelement <4 x i16> %106, i16 %100, i32 2
  %108 = insertelement <4 x i16> %107, i16 %104, i32 3
  %109 = zext <4 x i16> %108 to <4 x i32>
  %110 = sub nsw <4 x i32> %103, %109
  store <4 x i32> %110, <4 x i32>* %42, align 16, !tbaa !13
  %111 = load i16*, i16** %arrayidx264, align 8, !tbaa !1
  %arrayidx266 = getelementptr inbounds i16, i16* %111, i64 %indvars.iv1022
  %112 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call267 = tail call i16* %112(i16** %28, i32 %add175, i32 %add184, i32 %shl93, i32 %shl90) #8
  %113 = load i16, i16* %call267, align 2, !tbaa !308
  %add.ptr275 = getelementptr inbounds i16, i16* %call267, i64 4
  %114 = load i16, i16* %add.ptr275, align 2, !tbaa !308
  %add.ptr281 = getelementptr inbounds i16, i16* %call267, i64 8
  %115 = load i16, i16* %add.ptr281, align 2, !tbaa !308
  %116 = bitcast i16* %arrayidx266 to <4 x i16>*
  %117 = load <4 x i16>, <4 x i16>* %116, align 2, !tbaa !308
  %118 = zext <4 x i16> %117 to <4 x i32>
  %add.ptr286 = getelementptr inbounds i16, i16* %call267, i64 12
  %119 = load i16, i16* %add.ptr286, align 2, !tbaa !308
  %120 = insertelement <4 x i16> undef, i16 %113, i32 0
  %121 = insertelement <4 x i16> %120, i16 %114, i32 1
  %122 = insertelement <4 x i16> %121, i16 %115, i32 2
  %123 = insertelement <4 x i16> %122, i16 %119, i32 3
  %124 = zext <4 x i16> %123 to <4 x i32>
  %125 = sub nsw <4 x i32> %118, %124
  store <4 x i32> %125, <4 x i32>* %43, align 16, !tbaa !13
  br i1 %tobool73., label %if.else299, label %if.then291

if.then291:                                       ; preds = %for.body182
  %call293 = call i32 @SATD(i32* nonnull %arraydecay, i32 %.)
  %add294 = add nsw i32 %call293, %mcost.2991
  %cmp295 = icmp sgt i32 %add294, %min_mcost.addr.01007
  br i1 %cmp295, label %if.end330.loopexit, label %for.inc319

if.else299:                                       ; preds = %for.body182
  %and = and i32 %65, 4
  %cmp300 = icmp sgt i64 %indvars.iv1022, 7
  %conv301 = zext i1 %cmp300 to i32
  %mul302 = shl nuw nsw i32 %conv301, 6
  %add303 = or i32 %mul302, %and
  %add304 = add nuw nsw i32 %add303, %mul170
  %add312 = or i32 %shl311, %add304
  %126 = zext i32 %add312 to i64
  %arrayidx314 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %126
  %127 = bitcast i32* %arrayidx314 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* nonnull %36, i64 16, i32 4, i1 false)
  br i1 %cmp307, label %for.body309.1, label %for.inc319

for.inc319:                                       ; preds = %if.else299, %for.body309.1, %if.then291
  %mcost.3 = phi i32 [ %add294, %if.then291 ], [ %mcost.2991, %for.body309.1 ], [ %mcost.2991, %if.else299 ]
  %indvars.iv.next1023 = add nuw i64 %indvars.iv1022, 4
  %cmp180 = icmp slt i64 %indvars.iv.next1023, %33
  br i1 %cmp180, label %for.body182, label %for.inc322.loopexit

for.inc322.loopexit:                              ; preds = %for.inc319
  br label %for.inc322

for.inc322:                                       ; preds = %for.inc322.loopexit, %for.body167
  %mcost.4 = phi i32 [ %mcost.11001, %for.body167 ], [ %mcost.3, %for.inc322.loopexit ]
  %indvars.iv.next1025 = add nuw i64 %indvars.iv1024, 4
  %add323 = add nuw nsw i32 %y0.0998, 4
  %cmp161 = icmp slt i64 %indvars.iv.next1025, %34
  br i1 %cmp161, label %for.body167, label %for.end324.loopexit

for.end324.loopexit:                              ; preds = %for.inc322
  br label %for.end324

for.end324:                                       ; preds = %for.end324.loopexit, %if.end157
  %mcost.1.lcssa = phi i32 [ %mcost.0, %if.end157 ], [ %mcost.4, %for.end324.loopexit ]
  br i1 %tobool73., label %if.then326, label %if.end330

if.then326:                                       ; preds = %for.end324
  %call328 = call i32 @find_SATD(i32* nonnull %arraydecay327, i32 %blocktype)
  %add329 = add nsw i32 %call328, %mcost.1.lcssa
  br label %if.end330

if.end330.loopexit:                               ; preds = %if.then291
  br label %if.end330

if.end330:                                        ; preds = %if.end330.loopexit, %if.then326, %for.end324
  %mcost.5 = phi i32 [ %add329, %if.then326 ], [ %mcost.1.lcssa, %for.end324 ], [ %add294, %if.end330.loopexit ]
  %cmp331 = icmp slt i32 %mcost.5, %min_mcost.addr.01007
  %128 = trunc i64 %indvars.iv1032 to i32
  %pos.0.best_pos.0 = select i1 %cmp331, i32 %128, i32 %best_pos.01004
  %mcost.5.min_mcost.addr.0 = select i1 %cmp331, i32 %mcost.5, i32 %min_mcost.addr.01007
  br label %for.inc335

for.inc335:                                       ; preds = %if.end330, %for.body
  %best_pos.1 = phi i32 [ %best_pos.01004, %for.body ], [ %pos.0.best_pos.0, %if.end330 ]
  %min_mcost.addr.1 = phi i32 [ %min_mcost.addr.01007, %for.body ], [ %mcost.5.min_mcost.addr.0, %if.end330 ]
  %indvars.iv.next1033 = add nuw nsw i64 %indvars.iv1032, 1
  %exitcond1035 = icmp eq i64 %indvars.iv.next1033, %wide.trip.count1034
  br i1 %exitcond1035, label %for.end337, label %for.inc335.for.body_crit_edge

for.inc335.for.body_crit_edge:                    ; preds = %for.inc335
  %.pre1036 = load i16, i16* %mv_x, align 2, !tbaa !308
  br label %for.body

for.end337:                                       ; preds = %for.inc335
  %tobool338 = icmp eq i32 %best_pos.1, 0
  br i1 %tobool338, label %if.end352, label %if.then339

if.then339:                                       ; preds = %for.end337
  %129 = load i16*, i16** @spiral_hpel_search_x, align 8, !tbaa !1
  %idxprom340 = sext i32 %best_pos.1 to i64
  %arrayidx341 = getelementptr inbounds i16, i16* %129, i64 %idxprom340
  %130 = load i16, i16* %arrayidx341, align 2, !tbaa !308
  %131 = load i16, i16* %mv_x, align 2, !tbaa !308
  %add344 = add i16 %131, %130
  store i16 %add344, i16* %mv_x, align 2, !tbaa !308
  %132 = load i16*, i16** @spiral_hpel_search_y, align 8, !tbaa !1
  %arrayidx347 = getelementptr inbounds i16, i16* %132, i64 %idxprom340
  %133 = load i16, i16* %arrayidx347, align 2, !tbaa !308
  %134 = load i16, i16* %mv_y, align 2, !tbaa !308
  %add350 = add i16 %134, %133
  store i16 %add350, i16* %mv_y, align 2, !tbaa !308
  br label %if.end352

if.end352:                                        ; preds = %if.end, %for.end337, %if.then339
  %min_mcost.addr.0.lcssa1045 = phi i32 [ %min_mcost.addr.1, %for.end337 ], [ %min_mcost.addr.1, %if.then339 ], [ %min_mcost, %if.end ]
  %135 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %hadamard353 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %135, i64 0, i32 6
  %136 = load i32, i32* %hadamard353, align 8, !tbaa !338
  %cmp354 = icmp eq i32 %136, 2
  %.min_mcost.addr.0 = select i1 %cmp354, i32 2147483647, i32 %min_mcost.addr.0.lcssa1045
  %Transform8x8Mode358 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %135, i64 0, i32 144
  %137 = load i32, i32* %Transform8x8Mode358, align 4, !tbaa !339
  %tobool359 = icmp ne i32 %137, 0
  %or.cond625 = and i1 %cmp70, %tobool359
  %tobool365 = icmp ne i32 %136, 0
  %tobool365. = and i1 %tobool365, %or.cond625
  %138 = load i16, i16* %mv_x, align 2, !tbaa !308
  %conv368 = sext i16 %138 to i32
  %add369 = add nsw i32 %conv368, %shl
  %cmp370 = icmp sgt i32 %add369, 0
  %cmp375 = icmp slt i32 %add369, %shl97
  %or.cond964 = and i1 %cmp370, %cmp375
  br i1 %or.cond964, label %land.lhs.true377, label %if.end389

land.lhs.true377:                                 ; preds = %if.end352
  %139 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv378 = sext i16 %139 to i32
  %add379 = add nsw i32 %conv378, %shl25
  %cmp380 = icmp sgt i32 %add379, 0
  br i1 %cmp380, label %land.lhs.true382, label %if.end389

land.lhs.true382:                                 ; preds = %land.lhs.true377
  %cmp385 = icmp slt i32 %add379, %shl101
  %FastLine4X.UMVLine4X627 = select i1 %cmp385, i16* (i16**, i32, i32, i32, i32)* @FastLine4X, i16* (i16**, i32, i32, i32, i32)* @UMVLine4X
  br label %if.end389

if.end389:                                        ; preds = %land.lhs.true382, %if.end352, %land.lhs.true377
  %UMVLine4X.sink626 = phi i16* (i16**, i32, i32, i32, i32)* [ @UMVLine4X, %land.lhs.true377 ], [ @UMVLine4X, %if.end352 ], [ %FastLine4X.UMVLine4X627, %land.lhs.true382 ]
  store i16* (i16**, i32, i32, i32, i32)* %UMVLine4X.sink626, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %cmp391981 = icmp slt i32 %cond67, %search_pos4
  br i1 %cmp391981, label %for.body393.lr.ph, label %if.end622

for.body393.lr.ph:                                ; preds = %if.end389
  %cmp422974 = icmp sgt i32 %11, 0
  %arraydecay597 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 0
  %cmp442968 = icmp sgt i32 %10, 0
  %arraydecay447 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %incdec.ptr474 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 4
  %incdec.ptr501 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 8
  %incdec.ptr528 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 12
  %140 = sext i32 %10 to i64
  %141 = sext i32 %11 to i64
  %142 = zext i1 %not.cmp65 to i64
  %143 = bitcast [16 x i32]* %diff to i8*
  %144 = bitcast i32* %incdec.ptr474 to i8*
  %145 = bitcast i32* %incdec.ptr501 to i8*
  %146 = bitcast i32* %incdec.ptr528 to i8*
  %wide.trip.count = zext i32 %search_pos4 to i64
  %147 = bitcast [16 x i32]* %diff to <4 x i32>*
  %148 = bitcast i32* %incdec.ptr474 to <4 x i32>*
  %149 = bitcast i32* %incdec.ptr501 to <4 x i32>*
  %150 = bitcast i32* %incdec.ptr528 to <4 x i32>*
  br label %for.body393

for.body393:                                      ; preds = %for.inc605.for.body393_crit_edge, %for.body393.lr.ph
  %151 = phi i16 [ %138, %for.body393.lr.ph ], [ %.pre1037, %for.inc605.for.body393_crit_edge ]
  %indvars.iv1018 = phi i64 [ %142, %for.body393.lr.ph ], [ %indvars.iv.next1019, %for.inc605.for.body393_crit_edge ]
  %min_mcost.addr.3985 = phi i32 [ %.min_mcost.addr.0, %for.body393.lr.ph ], [ %min_mcost.addr.4, %for.inc605.for.body393_crit_edge ]
  %best_pos.2982 = phi i32 [ 0, %for.body393.lr.ph ], [ %best_pos.3, %for.inc605.for.body393_crit_edge ]
  %conv394 = sext i16 %151 to i32
  %152 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  %arrayidx396 = getelementptr inbounds i16, i16* %152, i64 %indvars.iv1018
  %153 = load i16, i16* %arrayidx396, align 2, !tbaa !308
  %conv397 = sext i16 %153 to i32
  %add398 = add nsw i32 %conv397, %conv394
  %154 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv399 = sext i16 %154 to i32
  %155 = load i16*, i16** @spiral_search_y, align 8, !tbaa !1
  %arrayidx401 = getelementptr inbounds i16, i16* %155, i64 %indvars.iv1018
  %156 = load i16, i16* %arrayidx401, align 2, !tbaa !308
  %conv402 = sext i16 %156 to i32
  %add403 = add nsw i32 %conv402, %conv399
  %157 = load i32*, i32** @mvbits, align 8, !tbaa !1
  %sub405 = sub nsw i32 %add398, %pred_mv_x
  %idxprom406 = sext i32 %sub405 to i64
  %arrayidx407 = getelementptr inbounds i32, i32* %157, i64 %idxprom406
  %158 = load i32, i32* %arrayidx407, align 4, !tbaa !13
  %sub409 = sub nsw i32 %add403, %pred_mv_y
  %idxprom410 = sext i32 %sub409 to i64
  %arrayidx411 = getelementptr inbounds i32, i32* %157, i64 %idxprom410
  %159 = load i32, i32* %arrayidx411, align 4, !tbaa !13
  %add412 = add nsw i32 %159, %158
  %mul413 = mul nsw i32 %add412, %lambda_factor
  %shr414 = ashr i32 %mul413, 16
  %cmp415 = icmp slt i32 %shr414, %min_mcost.addr.3985
  br i1 %cmp415, label %if.end418, label %for.inc605

if.end418:                                        ; preds = %for.body393
  %add419 = add nsw i32 %add398, %shl
  %add420 = add nsw i32 %add403, %shl25
  br i1 %cmp422974, label %for.body429.preheader, label %for.end594

for.body429.preheader:                            ; preds = %if.end418
  br label %for.body429

for.body429:                                      ; preds = %for.body429.preheader, %for.inc592
  %indvars.iv1010 = phi i64 [ %indvars.iv.next1011, %for.inc592 ], [ 0, %for.body429.preheader ]
  %mcost.6979 = phi i32 [ %mcost.9, %for.inc592 ], [ %shr414, %for.body429.preheader ]
  %y0.1976 = phi i32 [ %add593, %for.inc592 ], [ 0, %for.body429.preheader ]
  %cmp430 = icmp sgt i64 %indvars.iv1010, 7
  %mul432 = select i1 %cmp430, i32 %sub, i32 0
  %160 = trunc i64 %indvars.iv1010 to i32
  %shl433 = shl i32 %160, 2
  %add434 = add nsw i32 %add420, %shl433
  %add435 = add nsw i32 %add434, 4
  %add436 = add nsw i32 %add434, 8
  %add437 = add nsw i32 %add434, 12
  %161 = or i64 %indvars.iv1010, 1
  br i1 %cmp442968, label %for.body444.lr.ph, label %for.inc592

for.body444.lr.ph:                                ; preds = %for.body429
  %162 = or i64 %indvars.iv1010, 3
  %163 = add nuw nsw i64 %161, 1
  %arrayidx449 = getelementptr inbounds i16*, i16** %orig_pic, i64 %indvars.iv1010
  %arrayidx476 = getelementptr inbounds i16*, i16** %orig_pic, i64 %161
  %arrayidx503 = getelementptr inbounds i16*, i16** %orig_pic, i64 %163
  %arrayidx530 = getelementptr inbounds i16*, i16** %orig_pic, i64 %162
  %and577 = shl i32 %160, 3
  %shl578 = and i32 %and577, 32
  %164 = or i64 %indvars.iv1010, 1
  %165 = or i32 %y0.1976, 3
  %166 = sext i32 %165 to i64
  %cmp574 = icmp slt i64 %indvars.iv1010, %166
  %167 = trunc i64 %164 to i32
  %and577.1 = shl i32 %167, 3
  %shl578.1 = and i32 %and577.1, 40
  %168 = add nuw nsw i64 %164, 1
  %169 = trunc i64 %168 to i32
  %and577.2 = shl i32 %169, 3
  %shl578.2 = and i32 %and577.2, 48
  %170 = trunc i64 %indvars.iv1010 to i32
  %171 = shl i32 %170, 3
  %and577.3 = and i32 %171, 32
  br label %for.body444

for.body444:                                      ; preds = %for.body444.lr.ph, %for.inc589
  %indvars.iv = phi i64 [ 0, %for.body444.lr.ph ], [ %indvars.iv.next, %for.inc589 ]
  %mcost.7970 = phi i32 [ %mcost.6979, %for.body444.lr.ph ], [ %mcost.8, %for.inc589 ]
  %172 = trunc i64 %indvars.iv to i32
  %shl445 = shl i32 %172, 2
  %add446 = add nsw i32 %add419, %shl445
  %173 = load i16*, i16** %arrayidx449, align 8, !tbaa !1
  %arrayidx451 = getelementptr inbounds i16, i16* %173, i64 %indvars.iv
  %174 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call452 = tail call i16* %174(i16** %28, i32 %add434, i32 %add446, i32 %shl93, i32 %shl90) #8
  %175 = load i16, i16* %call452, align 2, !tbaa !308
  %add.ptr460 = getelementptr inbounds i16, i16* %call452, i64 4
  %176 = load i16, i16* %add.ptr460, align 2, !tbaa !308
  %add.ptr466 = getelementptr inbounds i16, i16* %call452, i64 8
  %177 = load i16, i16* %add.ptr466, align 2, !tbaa !308
  %178 = bitcast i16* %arrayidx451 to <4 x i16>*
  %179 = load <4 x i16>, <4 x i16>* %178, align 2, !tbaa !308
  %180 = zext <4 x i16> %179 to <4 x i32>
  %add.ptr471 = getelementptr inbounds i16, i16* %call452, i64 12
  %181 = load i16, i16* %add.ptr471, align 2, !tbaa !308
  %182 = insertelement <4 x i16> undef, i16 %175, i32 0
  %183 = insertelement <4 x i16> %182, i16 %176, i32 1
  %184 = insertelement <4 x i16> %183, i16 %177, i32 2
  %185 = insertelement <4 x i16> %184, i16 %181, i32 3
  %186 = zext <4 x i16> %185 to <4 x i32>
  %187 = sub nsw <4 x i32> %180, %186
  store <4 x i32> %187, <4 x i32>* %147, align 16, !tbaa !13
  %188 = load i16*, i16** %arrayidx476, align 8, !tbaa !1
  %arrayidx478 = getelementptr inbounds i16, i16* %188, i64 %indvars.iv
  %189 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call479 = tail call i16* %189(i16** %28, i32 %add435, i32 %add446, i32 %shl93, i32 %shl90) #8
  %190 = load i16, i16* %call479, align 2, !tbaa !308
  %add.ptr487 = getelementptr inbounds i16, i16* %call479, i64 4
  %191 = load i16, i16* %add.ptr487, align 2, !tbaa !308
  %add.ptr493 = getelementptr inbounds i16, i16* %call479, i64 8
  %192 = load i16, i16* %add.ptr493, align 2, !tbaa !308
  %193 = bitcast i16* %arrayidx478 to <4 x i16>*
  %194 = load <4 x i16>, <4 x i16>* %193, align 2, !tbaa !308
  %195 = zext <4 x i16> %194 to <4 x i32>
  %add.ptr498 = getelementptr inbounds i16, i16* %call479, i64 12
  %196 = load i16, i16* %add.ptr498, align 2, !tbaa !308
  %197 = insertelement <4 x i16> undef, i16 %190, i32 0
  %198 = insertelement <4 x i16> %197, i16 %191, i32 1
  %199 = insertelement <4 x i16> %198, i16 %192, i32 2
  %200 = insertelement <4 x i16> %199, i16 %196, i32 3
  %201 = zext <4 x i16> %200 to <4 x i32>
  %202 = sub nsw <4 x i32> %195, %201
  store <4 x i32> %202, <4 x i32>* %148, align 16, !tbaa !13
  %203 = load i16*, i16** %arrayidx503, align 8, !tbaa !1
  %arrayidx505 = getelementptr inbounds i16, i16* %203, i64 %indvars.iv
  %204 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call506 = tail call i16* %204(i16** %28, i32 %add436, i32 %add446, i32 %shl93, i32 %shl90) #8
  %205 = load i16, i16* %call506, align 2, !tbaa !308
  %add.ptr514 = getelementptr inbounds i16, i16* %call506, i64 4
  %206 = load i16, i16* %add.ptr514, align 2, !tbaa !308
  %add.ptr520 = getelementptr inbounds i16, i16* %call506, i64 8
  %207 = load i16, i16* %add.ptr520, align 2, !tbaa !308
  %208 = bitcast i16* %arrayidx505 to <4 x i16>*
  %209 = load <4 x i16>, <4 x i16>* %208, align 2, !tbaa !308
  %210 = zext <4 x i16> %209 to <4 x i32>
  %add.ptr525 = getelementptr inbounds i16, i16* %call506, i64 12
  %211 = load i16, i16* %add.ptr525, align 2, !tbaa !308
  %212 = insertelement <4 x i16> undef, i16 %205, i32 0
  %213 = insertelement <4 x i16> %212, i16 %206, i32 1
  %214 = insertelement <4 x i16> %213, i16 %207, i32 2
  %215 = insertelement <4 x i16> %214, i16 %211, i32 3
  %216 = zext <4 x i16> %215 to <4 x i32>
  %217 = sub nsw <4 x i32> %210, %216
  store <4 x i32> %217, <4 x i32>* %149, align 16, !tbaa !13
  %218 = load i16*, i16** %arrayidx530, align 8, !tbaa !1
  %arrayidx532 = getelementptr inbounds i16, i16* %218, i64 %indvars.iv
  %219 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call533 = tail call i16* %219(i16** %28, i32 %add437, i32 %add446, i32 %shl93, i32 %shl90) #8
  %220 = load i16, i16* %call533, align 2, !tbaa !308
  %add.ptr541 = getelementptr inbounds i16, i16* %call533, i64 4
  %221 = load i16, i16* %add.ptr541, align 2, !tbaa !308
  %add.ptr547 = getelementptr inbounds i16, i16* %call533, i64 8
  %222 = load i16, i16* %add.ptr547, align 2, !tbaa !308
  %223 = bitcast i16* %arrayidx532 to <4 x i16>*
  %224 = load <4 x i16>, <4 x i16>* %223, align 2, !tbaa !308
  %225 = zext <4 x i16> %224 to <4 x i32>
  %add.ptr552 = getelementptr inbounds i16, i16* %call533, i64 12
  %226 = load i16, i16* %add.ptr552, align 2, !tbaa !308
  %227 = insertelement <4 x i16> undef, i16 %220, i32 0
  %228 = insertelement <4 x i16> %227, i16 %221, i32 1
  %229 = insertelement <4 x i16> %228, i16 %222, i32 2
  %230 = insertelement <4 x i16> %229, i16 %226, i32 3
  %231 = zext <4 x i16> %230 to <4 x i32>
  %232 = sub nsw <4 x i32> %225, %231
  store <4 x i32> %232, <4 x i32>* %150, align 16, !tbaa !13
  br i1 %tobool365., label %if.else565, label %if.then556

if.then556:                                       ; preds = %for.body444
  %233 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %hadamard558 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %233, i64 0, i32 6
  %234 = load i32, i32* %hadamard558, align 8, !tbaa !338
  %call559 = call i32 @SATD(i32* nonnull %arraydecay447, i32 %234)
  %add560 = add nsw i32 %call559, %mcost.7970
  %cmp561 = icmp sgt i32 %add560, %min_mcost.addr.3985
  br i1 %cmp561, label %if.end600.loopexit, label %for.inc589

if.else565:                                       ; preds = %for.body444
  %and566 = and i32 %172, 4
  %cmp567 = icmp sgt i64 %indvars.iv, 7
  %conv568 = zext i1 %cmp567 to i32
  %mul569 = shl nuw nsw i32 %conv568, 6
  %add570 = or i32 %mul569, %and566
  %add571 = add nuw nsw i32 %add570, %mul432
  %add579 = or i32 %shl578, %add571
  %235 = zext i32 %add579 to i64
  %arrayidx581 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %235
  %236 = bitcast i32* %arrayidx581 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %236, i8* nonnull %143, i64 16, i32 4, i1 false)
  br i1 %cmp574, label %for.body576.1, label %for.inc589

for.inc589:                                       ; preds = %if.else565, %for.body576.1, %if.then556
  %mcost.8 = phi i32 [ %add560, %if.then556 ], [ %mcost.7970, %for.body576.1 ], [ %mcost.7970, %if.else565 ]
  %indvars.iv.next = add nuw i64 %indvars.iv, 4
  %cmp442 = icmp slt i64 %indvars.iv.next, %140
  br i1 %cmp442, label %for.body444, label %for.inc592.loopexit

for.inc592.loopexit:                              ; preds = %for.inc589
  br label %for.inc592

for.inc592:                                       ; preds = %for.inc592.loopexit, %for.body429
  %mcost.9 = phi i32 [ %mcost.6979, %for.body429 ], [ %mcost.8, %for.inc592.loopexit ]
  %indvars.iv.next1011 = add nuw i64 %indvars.iv1010, 4
  %add593 = add nuw nsw i32 %y0.1976, 4
  %cmp422 = icmp slt i64 %indvars.iv.next1011, %141
  br i1 %cmp422, label %for.body429, label %for.end594.loopexit

for.end594.loopexit:                              ; preds = %for.inc592
  br label %for.end594

for.end594:                                       ; preds = %for.end594.loopexit, %if.end418
  %mcost.6.lcssa = phi i32 [ %shr414, %if.end418 ], [ %mcost.9, %for.end594.loopexit ]
  br i1 %tobool365., label %if.then596, label %if.end600

if.then596:                                       ; preds = %for.end594
  %call598 = call i32 @find_SATD(i32* nonnull %arraydecay597, i32 %blocktype)
  %add599 = add nsw i32 %call598, %mcost.6.lcssa
  br label %if.end600

if.end600.loopexit:                               ; preds = %if.then556
  br label %if.end600

if.end600:                                        ; preds = %if.end600.loopexit, %if.then596, %for.end594
  %mcost.10 = phi i32 [ %add599, %if.then596 ], [ %mcost.6.lcssa, %for.end594 ], [ %add560, %if.end600.loopexit ]
  %cmp601 = icmp slt i32 %mcost.10, %min_mcost.addr.3985
  %237 = trunc i64 %indvars.iv1018 to i32
  %pos.1.best_pos.2 = select i1 %cmp601, i32 %237, i32 %best_pos.2982
  %mcost.10.min_mcost.addr.3 = select i1 %cmp601, i32 %mcost.10, i32 %min_mcost.addr.3985
  br label %for.inc605

for.inc605:                                       ; preds = %if.end600, %for.body393
  %best_pos.3 = phi i32 [ %best_pos.2982, %for.body393 ], [ %pos.1.best_pos.2, %if.end600 ]
  %min_mcost.addr.4 = phi i32 [ %min_mcost.addr.3985, %for.body393 ], [ %mcost.10.min_mcost.addr.3, %if.end600 ]
  %indvars.iv.next1019 = add nuw nsw i64 %indvars.iv1018, 1
  %exitcond = icmp eq i64 %indvars.iv.next1019, %wide.trip.count
  br i1 %exitcond, label %for.end607, label %for.inc605.for.body393_crit_edge

for.inc605.for.body393_crit_edge:                 ; preds = %for.inc605
  %.pre1037 = load i16, i16* %mv_x, align 2, !tbaa !308
  br label %for.body393

for.end607:                                       ; preds = %for.inc605
  %tobool608 = icmp eq i32 %best_pos.3, 0
  br i1 %tobool608, label %if.end622, label %if.then609

if.then609:                                       ; preds = %for.end607
  %238 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  %idxprom610 = sext i32 %best_pos.3 to i64
  %arrayidx611 = getelementptr inbounds i16, i16* %238, i64 %idxprom610
  %239 = load i16, i16* %arrayidx611, align 2, !tbaa !308
  %240 = load i16, i16* %mv_x, align 2, !tbaa !308
  %add614 = add i16 %240, %239
  store i16 %add614, i16* %mv_x, align 2, !tbaa !308
  %241 = load i16*, i16** @spiral_search_y, align 8, !tbaa !1
  %arrayidx617 = getelementptr inbounds i16, i16* %241, i64 %idxprom610
  %242 = load i16, i16* %arrayidx617, align 2, !tbaa !308
  %243 = load i16, i16* %mv_y, align 2, !tbaa !308
  %add620 = add i16 %243, %242
  store i16 %add620, i16* %mv_y, align 2, !tbaa !308
  br label %if.end622

if.end622:                                        ; preds = %if.end389, %for.end607, %if.then609
  %min_mcost.addr.3.lcssa1053 = phi i32 [ %min_mcost.addr.4, %for.end607 ], [ %min_mcost.addr.4, %if.then609 ], [ %.min_mcost.addr.0, %if.end389 ]
  call void @llvm.lifetime.end(i64 64, i8* nonnull %1) #8
  call void @llvm.lifetime.end(i64 1024, i8* nonnull %0) #8
  ret i32 %min_mcost.addr.3.lcssa1053

for.body576.1:                                    ; preds = %if.else565
  %add579.1 = or i32 %shl578.1, %add571
  %244 = zext i32 %add579.1 to i64
  %arrayidx581.1 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %244
  %245 = bitcast i32* %arrayidx581.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %245, i8* %144, i64 16, i32 4, i1 false)
  %add579.2 = or i32 %shl578.2, %add571
  %246 = zext i32 %add579.2 to i64
  %arrayidx581.2 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %246
  %247 = bitcast i32* %arrayidx581.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %247, i8* %145, i64 16, i32 4, i1 false)
  %shl578.3 = or i32 %and577.3, %add571
  %add579.3 = or i32 %shl578.3, 24
  %248 = zext i32 %add579.3 to i64
  %arrayidx581.3 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %248
  %249 = bitcast i32* %arrayidx581.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %249, i8* %146, i64 16, i32 4, i1 false)
  br label %for.inc589

for.body309.1:                                    ; preds = %if.else299
  %add312.1 = or i32 %shl311.1, %add304
  %250 = zext i32 %add312.1 to i64
  %arrayidx314.1 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %250
  %251 = bitcast i32* %arrayidx314.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %251, i8* %37, i64 16, i32 4, i1 false)
  %add312.2 = or i32 %shl311.2, %add304
  %252 = zext i32 %add312.2 to i64
  %arrayidx314.2 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %252
  %253 = bitcast i32* %arrayidx314.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %253, i8* %38, i64 16, i32 4, i1 false)
  %shl311.3 = or i32 %and310.3, %add304
  %add312.3 = or i32 %shl311.3, 24
  %254 = zext i32 %add312.3 to i64
  %arrayidx314.3 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %254
  %255 = bitcast i32* %arrayidx314.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %255, i8* %39, i64 16, i32 4, i1 false)
  br label %for.inc319
}

declare i16* @FastLine4X(i16**, i32, i32, i32, i32) #3

declare i16* @UMVLine4X(i16**, i32, i32, i32, i32) #3

; Function Attrs: nounwind uwtable
define i32 @simplified_FastFullSubPelBlockMotionSearch(i16** nocapture readonly %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i32 %pred_mv_x, i32 %pred_mv_y, i16* nocapture %mv_x, i16* nocapture %mv_y, i32 %search_pos2, i32 %search_pos4, i32 %min_mcost, i32 %lambda_factor) local_unnamed_addr #0 {
entry:
  %c_diff = alloca [256 x i32], align 16
  %diff = alloca [16 x i32], align 16
  %0 = bitcast [256 x i32]* %c_diff to i8*
  call void @llvm.lifetime.start(i64 1024, i8* nonnull %0) #8
  %1 = bitcast [16 x i32]* %diff to i8*
  call void @llvm.lifetime.start(i64 64, i8* nonnull %1) #8
  %cmp = icmp eq i32 %blocktype, 3
  %conv = zext i1 %cmp to i32
  %mul = shl nuw nsw i32 %conv, 6
  %sub = sub nsw i32 128, %mul
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 106
  %3 = load i32, i32* %rdopt, align 8, !tbaa !309
  %tobool = icmp eq i32 %3, 0
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  br i1 %tobool, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 6
  %5 = load i32, i32* %type, align 8, !tbaa !300
  %cmp1 = icmp eq i32 %5, 1
  br i1 %cmp1, label %land.end, label %land.lhs.true3

land.lhs.true3:                                   ; preds = %land.lhs.true
  %cmp5 = icmp eq i16 %ref, 0
  %cmp8 = icmp eq i32 %blocktype, 1
  %or.cond = and i1 %cmp5, %cmp8
  br i1 %or.cond, label %land.lhs.true10, label %land.end

land.lhs.true10:                                  ; preds = %land.lhs.true3
  %6 = load i16, i16* %mv_x, align 2, !tbaa !308
  %cmp12 = icmp eq i16 %6, 0
  br i1 %cmp12, label %land.lhs.true14, label %land.end

land.lhs.true14:                                  ; preds = %land.lhs.true10
  %7 = load i16, i16* %mv_y, align 2, !tbaa !308
  %cmp16 = icmp eq i16 %7, 0
  br i1 %cmp16, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true14
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 6
  %8 = load i32, i32* %hadamard, align 8, !tbaa !338
  %tobool18 = icmp ne i32 %8, 0
  br label %land.end

land.end:                                         ; preds = %entry, %land.lhs.true, %land.rhs, %land.lhs.true14, %land.lhs.true10, %land.lhs.true3
  %9 = phi i1 [ false, %land.lhs.true14 ], [ false, %land.lhs.true10 ], [ false, %land.lhs.true3 ], [ false, %land.lhs.true ], [ %tobool18, %land.rhs ], [ false, %entry ]
  %idxprom = sext i32 %blocktype to i64
  %arrayidx19 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 21, i64 %idxprom, i64 0
  %10 = load i32, i32* %arrayidx19, align 4, !tbaa !13
  %arrayidx23 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 21, i64 %idxprom, i64 1
  %11 = load i32, i32* %arrayidx23, align 4, !tbaa !13
  %add = shl i32 %pic_pix_x, 2
  %shl = add i32 %add, 16
  %add24 = shl i32 %pic_pix_y, 2
  %shl25 = add i32 %add24, 16
  %hadamard26 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 6
  %12 = load i32, i32* %hadamard26, align 8, !tbaa !338
  %not.cmp27 = icmp ne i32 %12, 1
  %cond = zext i1 %not.cmp27 to i32
  %tobool30 = icmp eq i32 %12, 0
  %13 = icmp sgt i32 %search_pos2, 1
  %14 = or i1 %13, %tobool30
  %cond37 = select i1 %14, i32 %search_pos2, i32 1
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 55
  %15 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8, !tbaa !293
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 3
  %16 = load i32, i32* %current_mb_nr, align 4, !tbaa !294
  %idxprom38 = sext i32 %16 to i64
  %list_offset40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %15, i64 %idxprom38, i32 20
  %17 = load i32, i32* %list_offset40, align 4, !tbaa !295
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8, !tbaa !1
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i64 0, i32 19
  %19 = load i32, i32* %weighted_pred_flag, align 8, !tbaa !298
  %tobool41 = icmp eq i32 %19, 0
  br i1 %tobool41, label %lor.rhs, label %land.lhs.true42

land.lhs.true42:                                  ; preds = %land.end
  %type43 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 6
  %20 = load i32, i32* %type43, align 8, !tbaa !300
  switch i32 %20, label %lor.rhs [
    i32 0, label %lor.end
    i32 3, label %lor.end
  ]

lor.rhs:                                          ; preds = %land.lhs.true42, %land.end
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i64 0, i32 20
  %21 = load i32, i32* %weighted_bipred_idc, align 4, !tbaa !301
  %tobool49 = icmp eq i32 %21, 0
  br i1 %tobool49, label %lor.end, label %land.rhs50

land.rhs50:                                       ; preds = %lor.rhs
  %type51 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 6
  %22 = load i32, i32* %type51, align 8, !tbaa !300
  %cmp52 = icmp eq i32 %22, 1
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true42, %land.lhs.true42, %lor.rhs, %land.rhs50
  %23 = phi i1 [ true, %land.lhs.true42 ], [ false, %lor.rhs ], [ %cmp52, %land.rhs50 ], [ true, %land.lhs.true42 ]
  %cmp57 = icmp eq i32 %12, 2
  %. = select i1 %cmp57, i32 0, i32 %12
  %not.cmp65 = icmp ne i32 %12, 2
  %cond67 = zext i1 %not.cmp65 to i32
  %Transform8x8Mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 144
  %24 = load i32, i32* %Transform8x8Mode, align 4, !tbaa !339
  %tobool68 = icmp ne i32 %24, 0
  %cmp70 = icmp slt i32 %blocktype, 5
  %or.cond709 = and i1 %cmp70, %tobool68
  %tobool73 = icmp ne i32 %., 0
  %tobool73. = and i1 %or.cond709, %tobool73
  %add76 = add nsw i32 %17, %list
  %idxprom77 = sext i32 %add76 to i64
  %arrayidx78 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom77
  %25 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx78, align 8, !tbaa !1
  %idxprom79 = sext i16 %ref to i64
  %arrayidx80 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %25, i64 %idxprom79
  %26 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx80, align 8, !tbaa !1
  br i1 %23, label %land.lhs.true82, label %cond.false85

land.lhs.true82:                                  ; preds = %lor.end
  %UseWeightedReferenceME = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 56
  %27 = load i32, i32* %UseWeightedReferenceME, align 8, !tbaa !302
  %tobool83 = icmp eq i32 %27, 0
  br i1 %tobool83, label %cond.false85, label %cond.true84

cond.true84:                                      ; preds = %land.lhs.true82
  %imgY_ups_w = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %26, i64 0, i32 29
  br label %cond.end86

cond.false85:                                     ; preds = %land.lhs.true82, %lor.end
  %imgY_ups = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %26, i64 0, i32 28
  br label %cond.end86

cond.end86:                                       ; preds = %cond.false85, %cond.true84
  %imgY_ups.sink = phi i16*** [ %imgY_ups, %cond.false85 ], [ %imgY_ups_w, %cond.true84 ]
  %28 = load i16**, i16*** %imgY_ups.sink, align 8, !tbaa !1
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %26, i64 0, i32 18
  %29 = load i32, i32* %size_x, align 8, !tbaa !303
  %sub89 = shl i32 %29, 2
  %shl90 = add i32 %sub89, 28
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %26, i64 0, i32 19
  %30 = load i32, i32* %size_y, align 4, !tbaa !305
  %sub92 = shl i32 %30, 2
  %shl93 = add i32 %sub92, 28
  %sub95 = sub nsw i32 %29, %10
  %add96 = shl i32 %sub95, 2
  %shl97 = add i32 %add96, 32
  %sub99 = sub nsw i32 %30, %11
  %add100 = shl i32 %sub99, 2
  %shl101 = add i32 %add100, 32
  %31 = load i16, i16* %mv_x, align 2, !tbaa !308
  %conv102 = sext i16 %31 to i32
  %add103 = add nsw i32 %conv102, %shl
  %cmp104 = icmp sgt i32 %add103, 1
  %sub109 = add i32 %add96, 31
  %cmp110 = icmp slt i32 %add103, %sub109
  %or.cond1061 = and i1 %cmp104, %cmp110
  br i1 %or.cond1061, label %land.lhs.true112, label %if.end

land.lhs.true112:                                 ; preds = %cond.end86
  %32 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv113 = sext i16 %32 to i32
  %add114 = add nsw i32 %conv113, %shl25
  %cmp115 = icmp sgt i32 %add114, 1
  br i1 %cmp115, label %land.lhs.true117, label %if.end

land.lhs.true117:                                 ; preds = %land.lhs.true112
  %sub120 = add i32 %add100, 31
  %cmp121 = icmp slt i32 %add114, %sub120
  %FastLine4X.UMVLine4X = select i1 %cmp121, i16* (i16**, i32, i32, i32, i32)* @FastLine4X, i16* (i16**, i32, i32, i32, i32)* @UMVLine4X
  br label %if.end

if.end:                                           ; preds = %land.lhs.true117, %cond.end86, %land.lhs.true112
  %UMVLine4X.sink = phi i16* (i16**, i32, i32, i32, i32)* [ @UMVLine4X, %land.lhs.true112 ], [ @UMVLine4X, %cond.end86 ], [ %FastLine4X.UMVLine4X, %land.lhs.true117 ]
  store i16* (i16**, i32, i32, i32, i32)* %UMVLine4X.sink, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %cmp1231104 = icmp slt i32 %cond, %cond37
  br i1 %cmp1231104, label %for.body.lr.ph, label %if.end361

for.body.lr.ph:                                   ; preds = %if.end
  %shr151 = ashr i32 %lambda_factor, 12
  %cmp1611097 = icmp sgt i32 %11, 0
  %arraydecay327 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 0
  %arrayidx337 = getelementptr inbounds [8 x i16], [8 x i16]* @block_type_shift_factor, i64 0, i64 %idxprom
  %cmp1801090 = icmp sgt i32 %10, 0
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %incdec.ptr208 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 4
  %incdec.ptr235 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 8
  %incdec.ptr262 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 12
  %33 = sext i32 %10 to i64
  %34 = sext i32 %11 to i64
  %35 = zext i1 %not.cmp27 to i64
  %36 = sext i32 %cond37 to i64
  %37 = bitcast [16 x i32]* %diff to i8*
  %38 = bitcast i32* %incdec.ptr208 to i8*
  %39 = bitcast i32* %incdec.ptr235 to i8*
  %40 = bitcast i32* %incdec.ptr262 to i8*
  %41 = bitcast [16 x i32]* %diff to <4 x i32>*
  %42 = bitcast i32* %incdec.ptr208 to <4 x i32>*
  %43 = bitcast i32* %incdec.ptr235 to <4 x i32>*
  %44 = bitcast i32* %incdec.ptr262 to <4 x i32>*
  br label %for.body

for.body:                                         ; preds = %for.inc344.for.body_crit_edge, %for.body.lr.ph
  %45 = phi i16 [ %31, %for.body.lr.ph ], [ %.pre1137, %for.inc344.for.body_crit_edge ]
  %indvars.iv1135 = phi i64 [ %35, %for.body.lr.ph ], [ %indvars.iv.next1136, %for.inc344.for.body_crit_edge ]
  %min_mcost.addr.01108 = phi i32 [ %min_mcost, %for.body.lr.ph ], [ %min_mcost.addr.2, %for.inc344.for.body_crit_edge ]
  %best_pos.01105 = phi i32 [ 0, %for.body.lr.ph ], [ %best_pos.2, %for.inc344.for.body_crit_edge ]
  %conv125 = sext i16 %45 to i32
  %46 = load i16*, i16** @spiral_hpel_search_x, align 8, !tbaa !1
  %arrayidx127 = getelementptr inbounds i16, i16* %46, i64 %indvars.iv1135
  %47 = load i16, i16* %arrayidx127, align 2, !tbaa !308
  %conv128 = sext i16 %47 to i32
  %add129 = add nsw i32 %conv128, %conv125
  %48 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv130 = sext i16 %48 to i32
  %49 = load i16*, i16** @spiral_hpel_search_y, align 8, !tbaa !1
  %arrayidx132 = getelementptr inbounds i16, i16* %49, i64 %indvars.iv1135
  %50 = load i16, i16* %arrayidx132, align 2, !tbaa !308
  %conv133 = sext i16 %50 to i32
  %add134 = add nsw i32 %conv133, %conv130
  %51 = load i32*, i32** @mvbits, align 8, !tbaa !1
  %sub136 = sub nsw i32 %add129, %pred_mv_x
  %idxprom137 = sext i32 %sub136 to i64
  %arrayidx138 = getelementptr inbounds i32, i32* %51, i64 %idxprom137
  %52 = load i32, i32* %arrayidx138, align 4, !tbaa !13
  %sub140 = sub nsw i32 %add134, %pred_mv_y
  %idxprom141 = sext i32 %sub140 to i64
  %arrayidx142 = getelementptr inbounds i32, i32* %51, i64 %idxprom141
  %53 = load i32, i32* %arrayidx142, align 4, !tbaa !13
  %add143 = add nsw i32 %53, %52
  %mul144 = mul nsw i32 %add143, %lambda_factor
  %shr = ashr i32 %mul144, 16
  %cmp147 = icmp eq i64 %indvars.iv1135, 0
  %or.cond710 = and i1 %9, %cmp147
  %sub152 = select i1 %or.cond710, i32 %shr151, i32 0
  %mcost.0 = sub nsw i32 %shr, %sub152
  %cmp154 = icmp slt i32 %mcost.0, %min_mcost.addr.01108
  br i1 %cmp154, label %if.end157, label %for.inc344

if.end157:                                        ; preds = %for.body
  %add158 = add nsw i32 %add129, %shl
  %add159 = add nsw i32 %add134, %shl25
  br i1 %cmp1611097, label %for.body167.preheader, label %for.end324

for.body167.preheader:                            ; preds = %if.end157
  br label %for.body167

for.body167:                                      ; preds = %for.body167.preheader, %for.inc322
  %indvars.iv1127 = phi i64 [ %indvars.iv.next1128, %for.inc322 ], [ 0, %for.body167.preheader ]
  %mcost.11102 = phi i32 [ %mcost.4, %for.inc322 ], [ %mcost.0, %for.body167.preheader ]
  %y0.01099 = phi i32 [ %add323, %for.inc322 ], [ 0, %for.body167.preheader ]
  %cmp168 = icmp sgt i64 %indvars.iv1127, 7
  %mul170 = select i1 %cmp168, i32 %sub, i32 0
  %54 = trunc i64 %indvars.iv1127 to i32
  %shl171 = shl i32 %54, 2
  %add172 = add nsw i32 %add159, %shl171
  %add173 = add nsw i32 %add172, 4
  %add174 = add nsw i32 %add172, 8
  %add175 = add nsw i32 %add172, 12
  %55 = or i64 %indvars.iv1127, 1
  br i1 %cmp1801090, label %for.body182.lr.ph, label %for.inc322

for.body182.lr.ph:                                ; preds = %for.body167
  %56 = or i64 %indvars.iv1127, 3
  %57 = add nuw nsw i64 %55, 1
  %arrayidx186 = getelementptr inbounds i16*, i16** %orig_pic, i64 %indvars.iv1127
  %arrayidx210 = getelementptr inbounds i16*, i16** %orig_pic, i64 %55
  %arrayidx237 = getelementptr inbounds i16*, i16** %orig_pic, i64 %57
  %arrayidx264 = getelementptr inbounds i16*, i16** %orig_pic, i64 %56
  %and310 = shl i32 %54, 3
  %shl311 = and i32 %and310, 32
  %58 = or i64 %indvars.iv1127, 1
  %59 = or i32 %y0.01099, 3
  %60 = sext i32 %59 to i64
  %cmp307 = icmp slt i64 %indvars.iv1127, %60
  %61 = trunc i64 %58 to i32
  %and310.1 = shl i32 %61, 3
  %shl311.1 = and i32 %and310.1, 40
  %62 = add nuw nsw i64 %58, 1
  %63 = trunc i64 %62 to i32
  %and310.2 = shl i32 %63, 3
  %shl311.2 = and i32 %and310.2, 48
  %64 = trunc i64 %indvars.iv1127 to i32
  %65 = shl i32 %64, 3
  %and310.3 = and i32 %65, 32
  br label %for.body182

for.body182:                                      ; preds = %for.body182.lr.ph, %for.inc319
  %indvars.iv1125 = phi i64 [ 0, %for.body182.lr.ph ], [ %indvars.iv.next1126, %for.inc319 ]
  %mcost.21092 = phi i32 [ %mcost.11102, %for.body182.lr.ph ], [ %mcost.3, %for.inc319 ]
  %66 = trunc i64 %indvars.iv1125 to i32
  %shl183 = shl i32 %66, 2
  %add184 = add nsw i32 %add158, %shl183
  %67 = load i16*, i16** %arrayidx186, align 8, !tbaa !1
  %arrayidx188 = getelementptr inbounds i16, i16* %67, i64 %indvars.iv1125
  %68 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call = tail call i16* %68(i16** %28, i32 %add172, i32 %add184, i32 %shl93, i32 %shl90) #8
  %69 = load i16, i16* %call, align 2, !tbaa !308
  %add.ptr = getelementptr inbounds i16, i16* %call, i64 4
  %70 = load i16, i16* %add.ptr, align 2, !tbaa !308
  %add.ptr200 = getelementptr inbounds i16, i16* %call, i64 8
  %71 = load i16, i16* %add.ptr200, align 2, !tbaa !308
  %72 = bitcast i16* %arrayidx188 to <4 x i16>*
  %73 = load <4 x i16>, <4 x i16>* %72, align 2, !tbaa !308
  %74 = zext <4 x i16> %73 to <4 x i32>
  %add.ptr205 = getelementptr inbounds i16, i16* %call, i64 12
  %75 = load i16, i16* %add.ptr205, align 2, !tbaa !308
  %76 = insertelement <4 x i16> undef, i16 %69, i32 0
  %77 = insertelement <4 x i16> %76, i16 %70, i32 1
  %78 = insertelement <4 x i16> %77, i16 %71, i32 2
  %79 = insertelement <4 x i16> %78, i16 %75, i32 3
  %80 = zext <4 x i16> %79 to <4 x i32>
  %81 = sub nsw <4 x i32> %74, %80
  store <4 x i32> %81, <4 x i32>* %41, align 16, !tbaa !13
  %82 = load i16*, i16** %arrayidx210, align 8, !tbaa !1
  %arrayidx212 = getelementptr inbounds i16, i16* %82, i64 %indvars.iv1125
  %83 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call213 = tail call i16* %83(i16** %28, i32 %add173, i32 %add184, i32 %shl93, i32 %shl90) #8
  %84 = load i16, i16* %call213, align 2, !tbaa !308
  %add.ptr221 = getelementptr inbounds i16, i16* %call213, i64 4
  %85 = load i16, i16* %add.ptr221, align 2, !tbaa !308
  %add.ptr227 = getelementptr inbounds i16, i16* %call213, i64 8
  %86 = load i16, i16* %add.ptr227, align 2, !tbaa !308
  %87 = bitcast i16* %arrayidx212 to <4 x i16>*
  %88 = load <4 x i16>, <4 x i16>* %87, align 2, !tbaa !308
  %89 = zext <4 x i16> %88 to <4 x i32>
  %add.ptr232 = getelementptr inbounds i16, i16* %call213, i64 12
  %90 = load i16, i16* %add.ptr232, align 2, !tbaa !308
  %91 = insertelement <4 x i16> undef, i16 %84, i32 0
  %92 = insertelement <4 x i16> %91, i16 %85, i32 1
  %93 = insertelement <4 x i16> %92, i16 %86, i32 2
  %94 = insertelement <4 x i16> %93, i16 %90, i32 3
  %95 = zext <4 x i16> %94 to <4 x i32>
  %96 = sub nsw <4 x i32> %89, %95
  store <4 x i32> %96, <4 x i32>* %42, align 16, !tbaa !13
  %97 = load i16*, i16** %arrayidx237, align 8, !tbaa !1
  %arrayidx239 = getelementptr inbounds i16, i16* %97, i64 %indvars.iv1125
  %98 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call240 = tail call i16* %98(i16** %28, i32 %add174, i32 %add184, i32 %shl93, i32 %shl90) #8
  %99 = load i16, i16* %call240, align 2, !tbaa !308
  %add.ptr248 = getelementptr inbounds i16, i16* %call240, i64 4
  %100 = load i16, i16* %add.ptr248, align 2, !tbaa !308
  %add.ptr254 = getelementptr inbounds i16, i16* %call240, i64 8
  %101 = load i16, i16* %add.ptr254, align 2, !tbaa !308
  %102 = bitcast i16* %arrayidx239 to <4 x i16>*
  %103 = load <4 x i16>, <4 x i16>* %102, align 2, !tbaa !308
  %104 = zext <4 x i16> %103 to <4 x i32>
  %add.ptr259 = getelementptr inbounds i16, i16* %call240, i64 12
  %105 = load i16, i16* %add.ptr259, align 2, !tbaa !308
  %106 = insertelement <4 x i16> undef, i16 %99, i32 0
  %107 = insertelement <4 x i16> %106, i16 %100, i32 1
  %108 = insertelement <4 x i16> %107, i16 %101, i32 2
  %109 = insertelement <4 x i16> %108, i16 %105, i32 3
  %110 = zext <4 x i16> %109 to <4 x i32>
  %111 = sub nsw <4 x i32> %104, %110
  store <4 x i32> %111, <4 x i32>* %43, align 16, !tbaa !13
  %112 = load i16*, i16** %arrayidx264, align 8, !tbaa !1
  %arrayidx266 = getelementptr inbounds i16, i16* %112, i64 %indvars.iv1125
  %113 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call267 = tail call i16* %113(i16** %28, i32 %add175, i32 %add184, i32 %shl93, i32 %shl90) #8
  %114 = load i16, i16* %call267, align 2, !tbaa !308
  %add.ptr275 = getelementptr inbounds i16, i16* %call267, i64 4
  %115 = load i16, i16* %add.ptr275, align 2, !tbaa !308
  %add.ptr281 = getelementptr inbounds i16, i16* %call267, i64 8
  %116 = load i16, i16* %add.ptr281, align 2, !tbaa !308
  %117 = bitcast i16* %arrayidx266 to <4 x i16>*
  %118 = load <4 x i16>, <4 x i16>* %117, align 2, !tbaa !308
  %119 = zext <4 x i16> %118 to <4 x i32>
  %add.ptr286 = getelementptr inbounds i16, i16* %call267, i64 12
  %120 = load i16, i16* %add.ptr286, align 2, !tbaa !308
  %121 = insertelement <4 x i16> undef, i16 %114, i32 0
  %122 = insertelement <4 x i16> %121, i16 %115, i32 1
  %123 = insertelement <4 x i16> %122, i16 %116, i32 2
  %124 = insertelement <4 x i16> %123, i16 %120, i32 3
  %125 = zext <4 x i16> %124 to <4 x i32>
  %126 = sub nsw <4 x i32> %119, %125
  store <4 x i32> %126, <4 x i32>* %44, align 16, !tbaa !13
  br i1 %tobool73., label %if.else299, label %if.then291

if.then291:                                       ; preds = %for.body182
  %call293 = call i32 @SATD(i32* nonnull %arraydecay, i32 %.)
  %add294 = add nsw i32 %call293, %mcost.21092
  %cmp295 = icmp slt i32 %add294, %min_mcost.addr.01108
  br i1 %cmp295, label %for.inc319, label %if.end330.loopexit

if.else299:                                       ; preds = %for.body182
  %and = and i32 %66, 4
  %cmp300 = icmp sgt i64 %indvars.iv1125, 7
  %conv301 = zext i1 %cmp300 to i32
  %mul302 = shl nuw nsw i32 %conv301, 6
  %add303 = or i32 %mul302, %and
  %add304 = add nuw nsw i32 %add303, %mul170
  %add312 = or i32 %shl311, %add304
  %127 = zext i32 %add312 to i64
  %arrayidx314 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %127
  %128 = bitcast i32* %arrayidx314 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* nonnull %37, i64 16, i32 4, i1 false)
  br i1 %cmp307, label %for.body309.1, label %for.inc319

for.inc319:                                       ; preds = %if.else299, %for.body309.1, %if.then291
  %mcost.3 = phi i32 [ %add294, %if.then291 ], [ %mcost.21092, %for.body309.1 ], [ %mcost.21092, %if.else299 ]
  %indvars.iv.next1126 = add nuw i64 %indvars.iv1125, 4
  %cmp180 = icmp slt i64 %indvars.iv.next1126, %33
  br i1 %cmp180, label %for.body182, label %for.inc322.loopexit

for.inc322.loopexit:                              ; preds = %for.inc319
  br label %for.inc322

for.inc322:                                       ; preds = %for.inc322.loopexit, %for.body167
  %mcost.4 = phi i32 [ %mcost.11102, %for.body167 ], [ %mcost.3, %for.inc322.loopexit ]
  %indvars.iv.next1128 = add nuw i64 %indvars.iv1127, 4
  %add323 = add nuw nsw i32 %y0.01099, 4
  %cmp161 = icmp slt i64 %indvars.iv.next1128, %34
  br i1 %cmp161, label %for.body167, label %for.end324.loopexit

for.end324.loopexit:                              ; preds = %for.inc322
  br label %for.end324

for.end324:                                       ; preds = %for.end324.loopexit, %if.end157
  %mcost.1.lcssa = phi i32 [ %mcost.0, %if.end157 ], [ %mcost.4, %for.end324.loopexit ]
  br i1 %tobool73., label %if.then326, label %if.end330

if.then326:                                       ; preds = %for.end324
  %call328 = call i32 @find_SATD(i32* nonnull %arraydecay327, i32 %blocktype)
  %add329 = add nsw i32 %call328, %mcost.1.lcssa
  br label %if.end330

if.end330.loopexit:                               ; preds = %if.then291
  br label %if.end330

if.end330:                                        ; preds = %if.end330.loopexit, %if.then326, %for.end324
  %mcost.5 = phi i32 [ %add329, %if.then326 ], [ %mcost.1.lcssa, %for.end324 ], [ %add294, %if.end330.loopexit ]
  %cmp331 = icmp slt i32 %mcost.5, %min_mcost.addr.01108
  %129 = trunc i64 %indvars.iv1135 to i32
  %pos.0.best_pos.0 = select i1 %cmp331, i32 %129, i32 %best_pos.01105
  %mcost.5.min_mcost.addr.0 = select i1 %cmp331, i32 %mcost.5, i32 %min_mcost.addr.01108
  %130 = load i16, i16* @SubPelThreshold3, align 2, !tbaa !308
  %conv335 = zext i16 %130 to i32
  %131 = load i16, i16* %arrayidx337, align 2, !tbaa !308
  %conv338 = sext i16 %131 to i32
  %shr339 = lshr i32 %conv335, %conv338
  %cmp340 = icmp slt i32 %mcost.5.min_mcost.addr.0, %shr339
  br i1 %cmp340, label %for.end346, label %for.inc344

for.inc344:                                       ; preds = %for.body, %if.end330
  %best_pos.2 = phi i32 [ %best_pos.01105, %for.body ], [ %pos.0.best_pos.0, %if.end330 ]
  %min_mcost.addr.2 = phi i32 [ %min_mcost.addr.01108, %for.body ], [ %mcost.5.min_mcost.addr.0, %if.end330 ]
  %indvars.iv.next1136 = add nuw nsw i64 %indvars.iv1135, 1
  %cmp123 = icmp slt i64 %indvars.iv.next1136, %36
  br i1 %cmp123, label %for.inc344.for.body_crit_edge, label %for.end346

for.inc344.for.body_crit_edge:                    ; preds = %for.inc344
  %.pre1137 = load i16, i16* %mv_x, align 2, !tbaa !308
  br label %for.body

for.end346:                                       ; preds = %for.inc344, %if.end330
  %best_pos.3 = phi i32 [ %best_pos.2, %for.inc344 ], [ %pos.0.best_pos.0, %if.end330 ]
  %min_mcost.addr.3 = phi i32 [ %min_mcost.addr.2, %for.inc344 ], [ %mcost.5.min_mcost.addr.0, %if.end330 ]
  %tobool347 = icmp eq i32 %best_pos.3, 0
  br i1 %tobool347, label %if.end361, label %if.then348

if.then348:                                       ; preds = %for.end346
  %132 = load i16*, i16** @spiral_hpel_search_x, align 8, !tbaa !1
  %idxprom349 = sext i32 %best_pos.3 to i64
  %arrayidx350 = getelementptr inbounds i16, i16* %132, i64 %idxprom349
  %133 = load i16, i16* %arrayidx350, align 2, !tbaa !308
  %134 = load i16, i16* %mv_x, align 2, !tbaa !308
  %add353 = add i16 %134, %133
  store i16 %add353, i16* %mv_x, align 2, !tbaa !308
  %135 = load i16*, i16** @spiral_hpel_search_y, align 8, !tbaa !1
  %arrayidx356 = getelementptr inbounds i16, i16* %135, i64 %idxprom349
  %136 = load i16, i16* %arrayidx356, align 2, !tbaa !308
  %137 = load i16, i16* %mv_y, align 2, !tbaa !308
  %add359 = add i16 %137, %136
  store i16 %add359, i16* %mv_y, align 2, !tbaa !308
  br label %if.end361

if.end361:                                        ; preds = %if.end, %for.end346, %if.then348
  %min_mcost.addr.31146 = phi i32 [ %min_mcost.addr.3, %for.end346 ], [ %min_mcost.addr.3, %if.then348 ], [ %min_mcost, %if.end ]
  %138 = load i16, i16* %mv_x, align 2, !tbaa !308
  %cmp363 = icmp eq i16 %138, 0
  br i1 %cmp363, label %land.lhs.true365, label %if.end384

land.lhs.true365:                                 ; preds = %if.end361
  %139 = load i16, i16* %mv_y, align 2, !tbaa !308
  %cmp367 = icmp eq i16 %139, 0
  %140 = or i32 %pred_mv_y, %pred_mv_x
  %141 = icmp eq i32 %140, 0
  %142 = and i1 %141, %cmp367
  br i1 %142, label %land.lhs.true375, label %if.end384

land.lhs.true375:                                 ; preds = %land.lhs.true365
  %143 = load i16, i16* @SubPelThreshold1, align 2, !tbaa !308
  %conv376 = zext i16 %143 to i32
  %arrayidx378 = getelementptr inbounds [8 x i16], [8 x i16]* @block_type_shift_factor, i64 0, i64 %idxprom
  %144 = load i16, i16* %arrayidx378, align 2, !tbaa !308
  %conv379 = sext i16 %144 to i32
  %shr380 = lshr i32 %conv376, %conv379
  %cmp381 = icmp slt i32 %min_mcost.addr.31146, %shr380
  br i1 %cmp381, label %cleanup, label %if.end384

if.end384:                                        ; preds = %land.lhs.true375, %land.lhs.true365, %if.end361
  %145 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %hadamard385 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %145, i64 0, i32 6
  %146 = load i32, i32* %hadamard385, align 8, !tbaa !338
  %cmp386 = icmp eq i32 %146, 2
  %.min_mcost.addr.3 = select i1 %cmp386, i32 2147483647, i32 %min_mcost.addr.31146
  %Transform8x8Mode390 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %145, i64 0, i32 144
  %147 = load i32, i32* %Transform8x8Mode390, align 4, !tbaa !339
  %tobool391 = icmp ne i32 %147, 0
  %or.cond713 = and i1 %cmp70, %tobool391
  %tobool397 = icmp ne i32 %146, 0
  %tobool397. = and i1 %tobool397, %or.cond713
  %conv400 = sext i16 %138 to i32
  %add401 = add nsw i32 %conv400, %shl
  %cmp402 = icmp sgt i32 %add401, 0
  %cmp407 = icmp slt i32 %add401, %shl97
  %or.cond1063 = and i1 %cmp402, %cmp407
  br i1 %or.cond1063, label %land.lhs.true409, label %if.end421

land.lhs.true409:                                 ; preds = %if.end384
  %148 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv410 = sext i16 %148 to i32
  %add411 = add nsw i32 %conv410, %shl25
  %cmp412 = icmp sgt i32 %add411, 0
  br i1 %cmp412, label %land.lhs.true414, label %if.end421

land.lhs.true414:                                 ; preds = %land.lhs.true409
  %cmp417 = icmp slt i32 %add411, %shl101
  %FastLine4X.UMVLine4X715 = select i1 %cmp417, i16* (i16**, i32, i32, i32, i32)* @FastLine4X, i16* (i16**, i32, i32, i32, i32)* @UMVLine4X
  br label %if.end421

if.end421:                                        ; preds = %land.lhs.true414, %if.end384, %land.lhs.true409
  %UMVLine4X.sink714 = phi i16* (i16**, i32, i32, i32, i32)* [ @UMVLine4X, %land.lhs.true409 ], [ @UMVLine4X, %if.end384 ], [ %FastLine4X.UMVLine4X715, %land.lhs.true414 ]
  store i16* (i16**, i32, i32, i32, i32)* %UMVLine4X.sink714, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %cmp4231080 = icmp slt i32 %cond67, %search_pos4
  br i1 %cmp4231080, label %for.body425.lr.ph, label %cleanup

for.body425.lr.ph:                                ; preds = %if.end421
  %cmp4541073 = icmp sgt i32 %11, 0
  %arraydecay629 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 0
  %arrayidx639 = getelementptr inbounds [8 x i16], [8 x i16]* @block_type_shift_factor, i64 0, i64 %idxprom
  %cmp4741067 = icmp sgt i32 %10, 0
  %arraydecay479 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %incdec.ptr506 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 4
  %incdec.ptr533 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 8
  %incdec.ptr560 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 12
  %149 = sext i32 %10 to i64
  %150 = sext i32 %11 to i64
  %151 = zext i1 %not.cmp65 to i64
  %152 = sext i32 %search_pos4 to i64
  %153 = bitcast [16 x i32]* %diff to i8*
  %154 = bitcast i32* %incdec.ptr506 to i8*
  %155 = bitcast i32* %incdec.ptr533 to i8*
  %156 = bitcast i32* %incdec.ptr560 to i8*
  %157 = bitcast [16 x i32]* %diff to <4 x i32>*
  %158 = bitcast i32* %incdec.ptr506 to <4 x i32>*
  %159 = bitcast i32* %incdec.ptr533 to <4 x i32>*
  %160 = bitcast i32* %incdec.ptr560 to <4 x i32>*
  br label %for.body425

for.body425:                                      ; preds = %for.inc646.for.body425_crit_edge, %for.body425.lr.ph
  %161 = phi i16 [ %138, %for.body425.lr.ph ], [ %.pre1138, %for.inc646.for.body425_crit_edge ]
  %indvars.iv1121 = phi i64 [ %151, %for.body425.lr.ph ], [ %indvars.iv.next1122, %for.inc646.for.body425_crit_edge ]
  %min_mcost.addr.51084 = phi i32 [ %.min_mcost.addr.3, %for.body425.lr.ph ], [ %min_mcost.addr.7, %for.inc646.for.body425_crit_edge ]
  %best_pos.41081 = phi i32 [ 0, %for.body425.lr.ph ], [ %best_pos.6, %for.inc646.for.body425_crit_edge ]
  %conv426 = sext i16 %161 to i32
  %162 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  %arrayidx428 = getelementptr inbounds i16, i16* %162, i64 %indvars.iv1121
  %163 = load i16, i16* %arrayidx428, align 2, !tbaa !308
  %conv429 = sext i16 %163 to i32
  %add430 = add nsw i32 %conv429, %conv426
  %164 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv431 = sext i16 %164 to i32
  %165 = load i16*, i16** @spiral_search_y, align 8, !tbaa !1
  %arrayidx433 = getelementptr inbounds i16, i16* %165, i64 %indvars.iv1121
  %166 = load i16, i16* %arrayidx433, align 2, !tbaa !308
  %conv434 = sext i16 %166 to i32
  %add435 = add nsw i32 %conv434, %conv431
  %167 = load i32*, i32** @mvbits, align 8, !tbaa !1
  %sub437 = sub nsw i32 %add430, %pred_mv_x
  %idxprom438 = sext i32 %sub437 to i64
  %arrayidx439 = getelementptr inbounds i32, i32* %167, i64 %idxprom438
  %168 = load i32, i32* %arrayidx439, align 4, !tbaa !13
  %sub441 = sub nsw i32 %add435, %pred_mv_y
  %idxprom442 = sext i32 %sub441 to i64
  %arrayidx443 = getelementptr inbounds i32, i32* %167, i64 %idxprom442
  %169 = load i32, i32* %arrayidx443, align 4, !tbaa !13
  %add444 = add nsw i32 %169, %168
  %mul445 = mul nsw i32 %add444, %lambda_factor
  %shr446 = ashr i32 %mul445, 16
  %cmp447 = icmp slt i32 %shr446, %min_mcost.addr.51084
  br i1 %cmp447, label %if.end450, label %for.inc646

if.end450:                                        ; preds = %for.body425
  %add451 = add nsw i32 %add430, %shl
  %add452 = add nsw i32 %add435, %shl25
  br i1 %cmp4541073, label %for.body461.preheader, label %for.end626

for.body461.preheader:                            ; preds = %if.end450
  br label %for.body461

for.body461:                                      ; preds = %for.body461.preheader, %for.inc624
  %indvars.iv1113 = phi i64 [ %indvars.iv.next1114, %for.inc624 ], [ 0, %for.body461.preheader ]
  %mcost.61078 = phi i32 [ %mcost.9, %for.inc624 ], [ %shr446, %for.body461.preheader ]
  %y0.11075 = phi i32 [ %add625, %for.inc624 ], [ 0, %for.body461.preheader ]
  %cmp462 = icmp sgt i64 %indvars.iv1113, 7
  %mul464 = select i1 %cmp462, i32 %sub, i32 0
  %170 = trunc i64 %indvars.iv1113 to i32
  %shl465 = shl i32 %170, 2
  %add466 = add nsw i32 %add452, %shl465
  %add467 = add nsw i32 %add466, 4
  %add468 = add nsw i32 %add466, 8
  %add469 = add nsw i32 %add466, 12
  %171 = or i64 %indvars.iv1113, 1
  br i1 %cmp4741067, label %for.body476.lr.ph, label %for.inc624

for.body476.lr.ph:                                ; preds = %for.body461
  %172 = or i64 %indvars.iv1113, 3
  %173 = add nuw nsw i64 %171, 1
  %arrayidx481 = getelementptr inbounds i16*, i16** %orig_pic, i64 %indvars.iv1113
  %arrayidx508 = getelementptr inbounds i16*, i16** %orig_pic, i64 %171
  %arrayidx535 = getelementptr inbounds i16*, i16** %orig_pic, i64 %173
  %arrayidx562 = getelementptr inbounds i16*, i16** %orig_pic, i64 %172
  %and609 = shl i32 %170, 3
  %shl610 = and i32 %and609, 32
  %174 = or i64 %indvars.iv1113, 1
  %175 = or i32 %y0.11075, 3
  %176 = sext i32 %175 to i64
  %cmp606 = icmp slt i64 %indvars.iv1113, %176
  %177 = trunc i64 %174 to i32
  %and609.1 = shl i32 %177, 3
  %shl610.1 = and i32 %and609.1, 40
  %178 = add nuw nsw i64 %174, 1
  %179 = trunc i64 %178 to i32
  %and609.2 = shl i32 %179, 3
  %shl610.2 = and i32 %and609.2, 48
  %180 = trunc i64 %indvars.iv1113 to i32
  %181 = shl i32 %180, 3
  %and609.3 = and i32 %181, 32
  br label %for.body476

for.body476:                                      ; preds = %for.body476.lr.ph, %for.inc621
  %indvars.iv = phi i64 [ 0, %for.body476.lr.ph ], [ %indvars.iv.next, %for.inc621 ]
  %mcost.71069 = phi i32 [ %mcost.61078, %for.body476.lr.ph ], [ %mcost.8, %for.inc621 ]
  %182 = trunc i64 %indvars.iv to i32
  %shl477 = shl i32 %182, 2
  %add478 = add nsw i32 %add451, %shl477
  %183 = load i16*, i16** %arrayidx481, align 8, !tbaa !1
  %arrayidx483 = getelementptr inbounds i16, i16* %183, i64 %indvars.iv
  %184 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call484 = tail call i16* %184(i16** %28, i32 %add466, i32 %add478, i32 %shl93, i32 %shl90) #8
  %185 = load i16, i16* %call484, align 2, !tbaa !308
  %add.ptr492 = getelementptr inbounds i16, i16* %call484, i64 4
  %186 = load i16, i16* %add.ptr492, align 2, !tbaa !308
  %add.ptr498 = getelementptr inbounds i16, i16* %call484, i64 8
  %187 = load i16, i16* %add.ptr498, align 2, !tbaa !308
  %188 = bitcast i16* %arrayidx483 to <4 x i16>*
  %189 = load <4 x i16>, <4 x i16>* %188, align 2, !tbaa !308
  %190 = zext <4 x i16> %189 to <4 x i32>
  %add.ptr503 = getelementptr inbounds i16, i16* %call484, i64 12
  %191 = load i16, i16* %add.ptr503, align 2, !tbaa !308
  %192 = insertelement <4 x i16> undef, i16 %185, i32 0
  %193 = insertelement <4 x i16> %192, i16 %186, i32 1
  %194 = insertelement <4 x i16> %193, i16 %187, i32 2
  %195 = insertelement <4 x i16> %194, i16 %191, i32 3
  %196 = zext <4 x i16> %195 to <4 x i32>
  %197 = sub nsw <4 x i32> %190, %196
  store <4 x i32> %197, <4 x i32>* %157, align 16, !tbaa !13
  %198 = load i16*, i16** %arrayidx508, align 8, !tbaa !1
  %arrayidx510 = getelementptr inbounds i16, i16* %198, i64 %indvars.iv
  %199 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call511 = tail call i16* %199(i16** %28, i32 %add467, i32 %add478, i32 %shl93, i32 %shl90) #8
  %200 = load i16, i16* %call511, align 2, !tbaa !308
  %add.ptr519 = getelementptr inbounds i16, i16* %call511, i64 4
  %201 = load i16, i16* %add.ptr519, align 2, !tbaa !308
  %add.ptr525 = getelementptr inbounds i16, i16* %call511, i64 8
  %202 = load i16, i16* %add.ptr525, align 2, !tbaa !308
  %203 = bitcast i16* %arrayidx510 to <4 x i16>*
  %204 = load <4 x i16>, <4 x i16>* %203, align 2, !tbaa !308
  %205 = zext <4 x i16> %204 to <4 x i32>
  %add.ptr530 = getelementptr inbounds i16, i16* %call511, i64 12
  %206 = load i16, i16* %add.ptr530, align 2, !tbaa !308
  %207 = insertelement <4 x i16> undef, i16 %200, i32 0
  %208 = insertelement <4 x i16> %207, i16 %201, i32 1
  %209 = insertelement <4 x i16> %208, i16 %202, i32 2
  %210 = insertelement <4 x i16> %209, i16 %206, i32 3
  %211 = zext <4 x i16> %210 to <4 x i32>
  %212 = sub nsw <4 x i32> %205, %211
  store <4 x i32> %212, <4 x i32>* %158, align 16, !tbaa !13
  %213 = load i16*, i16** %arrayidx535, align 8, !tbaa !1
  %arrayidx537 = getelementptr inbounds i16, i16* %213, i64 %indvars.iv
  %214 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call538 = tail call i16* %214(i16** %28, i32 %add468, i32 %add478, i32 %shl93, i32 %shl90) #8
  %215 = load i16, i16* %call538, align 2, !tbaa !308
  %add.ptr546 = getelementptr inbounds i16, i16* %call538, i64 4
  %216 = load i16, i16* %add.ptr546, align 2, !tbaa !308
  %add.ptr552 = getelementptr inbounds i16, i16* %call538, i64 8
  %217 = load i16, i16* %add.ptr552, align 2, !tbaa !308
  %218 = bitcast i16* %arrayidx537 to <4 x i16>*
  %219 = load <4 x i16>, <4 x i16>* %218, align 2, !tbaa !308
  %220 = zext <4 x i16> %219 to <4 x i32>
  %add.ptr557 = getelementptr inbounds i16, i16* %call538, i64 12
  %221 = load i16, i16* %add.ptr557, align 2, !tbaa !308
  %222 = insertelement <4 x i16> undef, i16 %215, i32 0
  %223 = insertelement <4 x i16> %222, i16 %216, i32 1
  %224 = insertelement <4 x i16> %223, i16 %217, i32 2
  %225 = insertelement <4 x i16> %224, i16 %221, i32 3
  %226 = zext <4 x i16> %225 to <4 x i32>
  %227 = sub nsw <4 x i32> %220, %226
  store <4 x i32> %227, <4 x i32>* %159, align 16, !tbaa !13
  %228 = load i16*, i16** %arrayidx562, align 8, !tbaa !1
  %arrayidx564 = getelementptr inbounds i16, i16* %228, i64 %indvars.iv
  %229 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line, align 8, !tbaa !1
  %call565 = tail call i16* %229(i16** %28, i32 %add469, i32 %add478, i32 %shl93, i32 %shl90) #8
  %230 = load i16, i16* %call565, align 2, !tbaa !308
  %add.ptr573 = getelementptr inbounds i16, i16* %call565, i64 4
  %231 = load i16, i16* %add.ptr573, align 2, !tbaa !308
  %add.ptr579 = getelementptr inbounds i16, i16* %call565, i64 8
  %232 = load i16, i16* %add.ptr579, align 2, !tbaa !308
  %233 = bitcast i16* %arrayidx564 to <4 x i16>*
  %234 = load <4 x i16>, <4 x i16>* %233, align 2, !tbaa !308
  %235 = zext <4 x i16> %234 to <4 x i32>
  %add.ptr584 = getelementptr inbounds i16, i16* %call565, i64 12
  %236 = load i16, i16* %add.ptr584, align 2, !tbaa !308
  %237 = insertelement <4 x i16> undef, i16 %230, i32 0
  %238 = insertelement <4 x i16> %237, i16 %231, i32 1
  %239 = insertelement <4 x i16> %238, i16 %232, i32 2
  %240 = insertelement <4 x i16> %239, i16 %236, i32 3
  %241 = zext <4 x i16> %240 to <4 x i32>
  %242 = sub nsw <4 x i32> %235, %241
  store <4 x i32> %242, <4 x i32>* %160, align 16, !tbaa !13
  br i1 %tobool397., label %if.else597, label %if.then588

if.then588:                                       ; preds = %for.body476
  %243 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %hadamard590 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %243, i64 0, i32 6
  %244 = load i32, i32* %hadamard590, align 8, !tbaa !338
  %call591 = call i32 @SATD(i32* nonnull %arraydecay479, i32 %244)
  %add592 = add nsw i32 %call591, %mcost.71069
  %cmp593 = icmp slt i32 %add592, %min_mcost.addr.51084
  br i1 %cmp593, label %for.inc621, label %if.end632.loopexit

if.else597:                                       ; preds = %for.body476
  %and598 = and i32 %182, 4
  %cmp599 = icmp sgt i64 %indvars.iv, 7
  %conv600 = zext i1 %cmp599 to i32
  %mul601 = shl nuw nsw i32 %conv600, 6
  %add602 = or i32 %mul601, %and598
  %add603 = add nuw nsw i32 %add602, %mul464
  %add611 = or i32 %shl610, %add603
  %245 = zext i32 %add611 to i64
  %arrayidx613 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %245
  %246 = bitcast i32* %arrayidx613 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %246, i8* nonnull %153, i64 16, i32 4, i1 false)
  br i1 %cmp606, label %for.body608.1, label %for.inc621

for.inc621:                                       ; preds = %if.else597, %for.body608.1, %if.then588
  %mcost.8 = phi i32 [ %add592, %if.then588 ], [ %mcost.71069, %for.body608.1 ], [ %mcost.71069, %if.else597 ]
  %indvars.iv.next = add nuw i64 %indvars.iv, 4
  %cmp474 = icmp slt i64 %indvars.iv.next, %149
  br i1 %cmp474, label %for.body476, label %for.inc624.loopexit

for.inc624.loopexit:                              ; preds = %for.inc621
  br label %for.inc624

for.inc624:                                       ; preds = %for.inc624.loopexit, %for.body461
  %mcost.9 = phi i32 [ %mcost.61078, %for.body461 ], [ %mcost.8, %for.inc624.loopexit ]
  %indvars.iv.next1114 = add nuw i64 %indvars.iv1113, 4
  %add625 = add nuw nsw i32 %y0.11075, 4
  %cmp454 = icmp slt i64 %indvars.iv.next1114, %150
  br i1 %cmp454, label %for.body461, label %for.end626.loopexit

for.end626.loopexit:                              ; preds = %for.inc624
  br label %for.end626

for.end626:                                       ; preds = %for.end626.loopexit, %if.end450
  %mcost.6.lcssa = phi i32 [ %shr446, %if.end450 ], [ %mcost.9, %for.end626.loopexit ]
  br i1 %tobool397., label %if.then628, label %if.end632

if.then628:                                       ; preds = %for.end626
  %call630 = call i32 @find_SATD(i32* nonnull %arraydecay629, i32 %blocktype)
  %add631 = add nsw i32 %call630, %mcost.6.lcssa
  br label %if.end632

if.end632.loopexit:                               ; preds = %if.then588
  br label %if.end632

if.end632:                                        ; preds = %if.end632.loopexit, %if.then628, %for.end626
  %mcost.10 = phi i32 [ %add631, %if.then628 ], [ %mcost.6.lcssa, %for.end626 ], [ %add592, %if.end632.loopexit ]
  %cmp633 = icmp slt i32 %mcost.10, %min_mcost.addr.51084
  %247 = trunc i64 %indvars.iv1121 to i32
  %pos.1.best_pos.4 = select i1 %cmp633, i32 %247, i32 %best_pos.41081
  %mcost.10.min_mcost.addr.5 = select i1 %cmp633, i32 %mcost.10, i32 %min_mcost.addr.51084
  %248 = load i16, i16* @SubPelThreshold3, align 2, !tbaa !308
  %conv637 = zext i16 %248 to i32
  %249 = load i16, i16* %arrayidx639, align 2, !tbaa !308
  %conv640 = sext i16 %249 to i32
  %shr641 = lshr i32 %conv637, %conv640
  %cmp642 = icmp slt i32 %mcost.10.min_mcost.addr.5, %shr641
  br i1 %cmp642, label %for.end648, label %for.inc646

for.inc646:                                       ; preds = %for.body425, %if.end632
  %best_pos.6 = phi i32 [ %best_pos.41081, %for.body425 ], [ %pos.1.best_pos.4, %if.end632 ]
  %min_mcost.addr.7 = phi i32 [ %min_mcost.addr.51084, %for.body425 ], [ %mcost.10.min_mcost.addr.5, %if.end632 ]
  %indvars.iv.next1122 = add nuw nsw i64 %indvars.iv1121, 1
  %cmp423 = icmp slt i64 %indvars.iv.next1122, %152
  br i1 %cmp423, label %for.inc646.for.body425_crit_edge, label %for.end648

for.inc646.for.body425_crit_edge:                 ; preds = %for.inc646
  %.pre1138 = load i16, i16* %mv_x, align 2, !tbaa !308
  br label %for.body425

for.end648:                                       ; preds = %for.inc646, %if.end632
  %best_pos.7 = phi i32 [ %best_pos.6, %for.inc646 ], [ %pos.1.best_pos.4, %if.end632 ]
  %min_mcost.addr.8 = phi i32 [ %min_mcost.addr.7, %for.inc646 ], [ %mcost.10.min_mcost.addr.5, %if.end632 ]
  %tobool649 = icmp eq i32 %best_pos.7, 0
  br i1 %tobool649, label %cleanup, label %if.then650

if.then650:                                       ; preds = %for.end648
  %250 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  %idxprom651 = sext i32 %best_pos.7 to i64
  %arrayidx652 = getelementptr inbounds i16, i16* %250, i64 %idxprom651
  %251 = load i16, i16* %arrayidx652, align 2, !tbaa !308
  %252 = load i16, i16* %mv_x, align 2, !tbaa !308
  %add655 = add i16 %252, %251
  store i16 %add655, i16* %mv_x, align 2, !tbaa !308
  %253 = load i16*, i16** @spiral_search_y, align 8, !tbaa !1
  %arrayidx658 = getelementptr inbounds i16, i16* %253, i64 %idxprom651
  %254 = load i16, i16* %arrayidx658, align 2, !tbaa !308
  %255 = load i16, i16* %mv_y, align 2, !tbaa !308
  %add661 = add i16 %255, %254
  store i16 %add661, i16* %mv_y, align 2, !tbaa !308
  br label %cleanup

cleanup:                                          ; preds = %if.end421, %if.then650, %for.end648, %land.lhs.true375
  %retval.0 = phi i32 [ %min_mcost.addr.31146, %land.lhs.true375 ], [ %min_mcost.addr.8, %for.end648 ], [ %min_mcost.addr.8, %if.then650 ], [ %.min_mcost.addr.3, %if.end421 ]
  call void @llvm.lifetime.end(i64 64, i8* nonnull %1) #8
  call void @llvm.lifetime.end(i64 1024, i8* nonnull %0) #8
  ret i32 %retval.0

for.body608.1:                                    ; preds = %if.else597
  %add611.1 = or i32 %shl610.1, %add603
  %256 = zext i32 %add611.1 to i64
  %arrayidx613.1 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %256
  %257 = bitcast i32* %arrayidx613.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %257, i8* %154, i64 16, i32 4, i1 false)
  %add611.2 = or i32 %shl610.2, %add603
  %258 = zext i32 %add611.2 to i64
  %arrayidx613.2 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %258
  %259 = bitcast i32* %arrayidx613.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %259, i8* %155, i64 16, i32 4, i1 false)
  %shl610.3 = or i32 %and609.3, %add603
  %add611.3 = or i32 %shl610.3, 24
  %260 = zext i32 %add611.3 to i64
  %arrayidx613.3 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %260
  %261 = bitcast i32* %arrayidx613.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %261, i8* %156, i64 16, i32 4, i1 false)
  br label %for.inc621

for.body309.1:                                    ; preds = %if.else299
  %add312.1 = or i32 %shl311.1, %add304
  %262 = zext i32 %add312.1 to i64
  %arrayidx314.1 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %262
  %263 = bitcast i32* %arrayidx314.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %263, i8* %38, i64 16, i32 4, i1 false)
  %add312.2 = or i32 %shl311.2, %add304
  %264 = zext i32 %add312.2 to i64
  %arrayidx314.2 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %264
  %265 = bitcast i32* %arrayidx314.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %265, i8* %39, i64 16, i32 4, i1 false)
  %shl311.3 = or i32 %and310.3, %add304
  %add312.3 = or i32 %shl311.3, 24
  %266 = zext i32 %add312.3 to i64
  %arrayidx314.3 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %266
  %267 = bitcast i32* %arrayidx314.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %267, i8* %40, i64 16, i32 4, i1 false)
  br label %for.inc319
}

; Function Attrs: nounwind uwtable
define i32 @FullPelBlockMotionBiPred(i16** nocapture readonly %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x1, i16 signext %pred_mv_y1, i16 signext %pred_mv_x2, i16 signext %pred_mv_y2, i16* nocapture %mv_x, i16* nocapture %mv_y, i16* nocapture readonly %s_mv_x, i16* nocapture readonly %s_mv_y, i32 %search_range, i32 %min_mcost, i32 %lambda_factor) local_unnamed_addr #0 {
entry:
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 55
  %1 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8, !tbaa !293
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 3
  %2 = load i32, i32* %current_mb_nr, align 4, !tbaa !294
  %idxprom = sext i32 %2 to i64
  %list_offset1 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 %idxprom, i32 20
  %3 = load i32, i32* %list_offset1, align 4, !tbaa !295
  %add = add nsw i32 %3, %list
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom2
  %4 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx3, align 8, !tbaa !1
  %idxprom4 = sext i16 %ref to i64
  %arrayidx5 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %4, i64 %idxprom4
  %5 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx5, align 8, !tbaa !1
  %imgY_11 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %5, i64 0, i32 26
  %6 = load i16*, i16** %imgY_11, align 8, !tbaa !340
  %cmp = icmp eq i32 %list, 0
  %add6 = add nsw i32 %3, 1
  %cond = select i1 %cmp, i32 %add6, i32 %3
  %idxprom7 = sext i32 %cond to i64
  %arrayidx8 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom7
  %7 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx8, align 8, !tbaa !1
  %8 = load %struct.storable_picture*, %struct.storable_picture** %7, align 8, !tbaa !1
  %imgY_1110 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %8, i64 0, i32 26
  %9 = load i16*, i16** %imgY_1110, align 8, !tbaa !340
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %5, i64 0, i32 18
  %10 = load i32, i32* %size_x, align 8, !tbaa !303
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %5, i64 0, i32 19
  %11 = load i32, i32* %size_y, align 4, !tbaa !305
  %mul = shl nsw i32 %search_range, 1
  %add21 = or i32 %mul, 1
  %mul24 = mul nsw i32 %add21, %add21
  %12 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %idxprom25 = sext i32 %blocktype to i64
  %arrayidx27 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %12, i64 0, i32 21, i64 %idxprom25, i64 1
  %13 = load i32, i32* %arrayidx27, align 4, !tbaa !13
  %arrayidx31 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %12, i64 0, i32 21, i64 %idxprom25, i64 0
  %14 = load i32, i32* %arrayidx31, align 4, !tbaa !13
  %shr = ashr i32 %14, 2
  %shl = shl i32 %pic_pix_x, 2
  %conv = sext i16 %pred_mv_x1 to i32
  %shl33 = shl i32 %pic_pix_y, 2
  %conv34 = sext i16 %pred_mv_y1 to i32
  %conv37 = sext i16 %pred_mv_x2 to i32
  %conv40 = sext i16 %pred_mv_y2 to i32
  %15 = load i16, i16* %mv_x, align 2, !tbaa !308
  %conv42832 = zext i16 %15 to i32
  %add43 = add i32 %conv42832, %pic_pix_x
  %16 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv45833 = zext i16 %16 to i32
  %add46 = add i32 %conv45833, %pic_pix_y
  %17 = load i16, i16* %s_mv_x, align 2, !tbaa !308
  %conv48834 = zext i16 %17 to i32
  %add49 = add i32 %conv48834, %pic_pix_x
  %18 = load i16, i16* %s_mv_y, align 2, !tbaa !308
  %conv51835 = zext i16 %18 to i32
  %add52 = add i32 %conv51835, %pic_pix_y
  %19 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8, !tbaa !1
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %19, i64 0, i32 20
  %20 = load i32, i32* %weighted_bipred_idc, align 4, !tbaa !301
  %cmp54 = icmp ne i32 %20, 0
  br i1 %cmp54, label %cond.true58, label %cond.end130

cond.true58:                                      ; preds = %entry
  %21 = load i32****, i32***** @wbp_weight, align 8, !tbaa !1
  br i1 %cmp, label %cond.true138, label %cond.false145

cond.end130:                                      ; preds = %entry
  %22 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %shl79 = shl i32 1, %22
  br label %cond.end153

cond.true138:                                     ; preds = %cond.true58
  %idxprom62 = sext i32 %3 to i64
  %arrayidx63 = getelementptr inbounds i32***, i32**** %21, i64 %idxprom62
  %23 = load i32***, i32**** %arrayidx63, align 8, !tbaa !1
  %arrayidx65 = getelementptr inbounds i32**, i32*** %23, i64 %idxprom4
  %24 = load i32**, i32*** %arrayidx65, align 8, !tbaa !1
  %idxprom90 = sext i32 %add6 to i64
  %arrayidx91 = getelementptr inbounds i32***, i32**** %21, i64 %idxprom90
  %25 = load i32***, i32**** %arrayidx91, align 8, !tbaa !1
  %arrayidx93 = getelementptr inbounds i32**, i32*** %25, i64 %idxprom4
  %26 = load i32**, i32*** %arrayidx93, align 8, !tbaa !1
  %27 = load i32***, i32**** @wp_offset, align 8, !tbaa !1
  %arrayidx117 = getelementptr inbounds i32**, i32*** %27, i64 %idxprom62
  %28 = load i32**, i32*** %arrayidx117, align 8, !tbaa !1
  %arrayidx119 = getelementptr inbounds i32*, i32** %28, i64 %idxprom4
  %arrayidx141 = getelementptr inbounds i32**, i32*** %27, i64 %idxprom90
  %29 = load i32**, i32*** %arrayidx141, align 8, !tbaa !1
  %arrayidx143 = getelementptr inbounds i32*, i32** %29, i64 %idxprom4
  br label %cond.end150

cond.false145:                                    ; preds = %cond.true58
  %idxprom70 = sext i32 %add6 to i64
  %arrayidx71 = getelementptr inbounds i32***, i32**** %21, i64 %idxprom70
  %30 = load i32***, i32**** %arrayidx71, align 8, !tbaa !1
  %31 = load i32**, i32*** %30, align 8, !tbaa !1
  %arrayidx74 = getelementptr inbounds i32*, i32** %31, i64 %idxprom4
  %idxprom97 = sext i32 %3 to i64
  %arrayidx98 = getelementptr inbounds i32***, i32**** %21, i64 %idxprom97
  %32 = load i32***, i32**** %arrayidx98, align 8, !tbaa !1
  %33 = load i32**, i32*** %32, align 8, !tbaa !1
  %arrayidx101 = getelementptr inbounds i32*, i32** %33, i64 %idxprom4
  %34 = load i32***, i32**** @wp_offset, align 8, !tbaa !1
  %arrayidx124 = getelementptr inbounds i32**, i32*** %34, i64 %idxprom70
  %35 = load i32**, i32*** %arrayidx124, align 8, !tbaa !1
  %arrayidx147 = getelementptr inbounds i32**, i32*** %34, i64 %idxprom97
  %36 = load i32**, i32*** %arrayidx147, align 8, !tbaa !1
  br label %cond.end150

cond.end150:                                      ; preds = %cond.false145, %cond.true138
  %.in.in = phi i32** [ %35, %cond.false145 ], [ %arrayidx119, %cond.true138 ]
  %.in879.in = phi i32** [ %arrayidx74, %cond.false145 ], [ %24, %cond.true138 ]
  %.in880.in = phi i32** [ %arrayidx101, %cond.false145 ], [ %26, %cond.true138 ]
  %arrayidx148.sink = phi i32** [ %36, %cond.false145 ], [ %arrayidx143, %cond.true138 ]
  %.in880 = load i32*, i32** %.in880.in, align 8, !tbaa !1
  %.in879 = load i32*, i32** %.in879.in, align 8, !tbaa !1
  %.in = load i32*, i32** %.in.in, align 8, !tbaa !1
  %37 = load i32, i32* %.in880, align 4, !tbaa !13
  %38 = load i32, i32* %.in879, align 4, !tbaa !13
  %39 = load i32, i32* %.in, align 4, !tbaa !13
  %40 = load i32*, i32** %arrayidx148.sink, align 8, !tbaa !1
  %41 = load i32, i32* %40, align 4, !tbaa !13
  %phitmp = shl i32 %41, 16
  %phitmp928 = ashr exact i32 %phitmp, 16
  %phitmp929 = shl i32 %39, 16
  %phitmp930 = ashr exact i32 %phitmp929, 16
  br label %cond.end153

cond.end153:                                      ; preds = %cond.end130, %cond.end150
  %cond131877 = phi i32 [ %phitmp930, %cond.end150 ], [ 0, %cond.end130 ]
  %cond81867869875 = phi i32 [ %38, %cond.end150 ], [ %shl79, %cond.end130 ]
  %cond108871873 = phi i32 [ %37, %cond.end150 ], [ %shl79, %cond.end130 ]
  %cond154 = phi i32 [ %phitmp928, %cond.end150 ], [ 0, %cond.end130 ]
  %add158 = add nsw i32 %cond154, %cond131877
  %sext838 = shl i32 %add43, 16
  %conv162 = ashr exact i32 %sext838, 16
  %cmp163 = icmp sgt i32 %conv162, %search_range
  br i1 %cmp163, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %cond.end153
  %sub = xor i32 %search_range, -1
  %sub166 = add i32 %10, %sub
  %sub167 = sub i32 %sub166, %14
  %cmp168 = icmp slt i32 %conv162, %sub167
  br i1 %cmp168, label %land.lhs.true170, label %if.else

land.lhs.true170:                                 ; preds = %land.lhs.true
  %sext866 = shl i32 %add46, 16
  %conv171 = ashr exact i32 %sext866, 16
  %cmp172 = icmp sgt i32 %conv171, %search_range
  br i1 %cmp172, label %land.lhs.true174, label %if.else

land.lhs.true174:                                 ; preds = %land.lhs.true170
  %sub177 = add i32 %11, %sub
  %sub178 = sub i32 %sub177, %13
  %cmp179 = icmp slt i32 %conv171, %sub178
  br i1 %cmp179, label %if.end, label %if.else

if.else:                                          ; preds = %land.lhs.true174, %land.lhs.true170, %land.lhs.true, %cond.end153
  br label %if.end

if.end:                                           ; preds = %land.lhs.true174, %if.else
  %get_ref_line2.0 = phi i16* (i32, i16*, i32, i32, i32, i32)* [ @UMVLineX, %if.else ], [ @FastLineX, %land.lhs.true174 ]
  %sext839 = shl i32 %add49, 16
  %conv181 = ashr exact i32 %sext839, 16
  %cmp182 = icmp sgt i32 %conv181, %search_range
  br i1 %cmp182, label %land.lhs.true184, label %if.else203

land.lhs.true184:                                 ; preds = %if.end
  %sub186 = xor i32 %search_range, -1
  %sub187 = add i32 %10, %sub186
  %sub188 = sub i32 %sub187, %14
  %cmp189 = icmp slt i32 %conv181, %sub188
  br i1 %cmp189, label %land.lhs.true191, label %if.else203

land.lhs.true191:                                 ; preds = %land.lhs.true184
  %sext865 = shl i32 %add52, 16
  %conv192 = ashr exact i32 %sext865, 16
  %cmp193 = icmp sgt i32 %conv192, %search_range
  br i1 %cmp193, label %land.lhs.true195, label %if.else203

land.lhs.true195:                                 ; preds = %land.lhs.true191
  %sub198 = add i32 %11, %sub186
  %sub199 = sub i32 %sub198, %13
  %cmp200 = icmp slt i32 %conv192, %sub199
  br i1 %cmp200, label %if.end204, label %if.else203

if.else203:                                       ; preds = %land.lhs.true195, %land.lhs.true191, %land.lhs.true184, %if.end
  %.pre = shl i32 %add52, 16
  %.pre925 = ashr exact i32 %.pre, 16
  br label %if.end204

if.end204:                                        ; preds = %land.lhs.true195, %if.else203
  %conv222.pre-phi = phi i32 [ %conv192, %land.lhs.true195 ], [ %.pre925, %if.else203 ]
  %sext845.pre-phi = phi i32 [ %sext865, %land.lhs.true195 ], [ %.pre, %if.else203 ]
  %get_ref_line1.0 = phi i16* (i32, i16*, i32, i32, i32, i32)* [ @FastLineX, %land.lhs.true195 ], [ @UMVLineX, %if.else203 ]
  %sext844 = shl i32 %add46, 16
  %conv212 = ashr exact i32 %sext844, 16
  %shl218 = ashr exact i32 %sext839, 14
  %sum = add i32 %conv, %shl
  %sub219 = sub i32 %shl218, %sum
  %idxprom220 = sext i32 %sub219 to i64
  %shl223 = ashr exact i32 %sext845.pre-phi, 14
  %sum911 = add i32 %conv34, %shl33
  %sub224 = sub i32 %shl223, %sum911
  %idxprom225 = sext i32 %sub224 to i64
  %sum912 = add i32 %conv37, %shl
  %sum913 = add i32 %conv40, %shl33
  %cmp249902 = icmp sgt i32 %13, 0
  %cmp260895 = icmp sgt i32 %shr, 0
  %sext850 = shl i32 %cond81867869875, 16
  %sext851 = shl i32 %cond108871873, 16
  %add159 = shl nsw i32 %add158, 15
  %42 = add i32 %add159, 32768
  %conv279 = ashr i32 %42, 16
  %43 = sext i32 %conv222.pre-phi to i64
  %44 = sext i32 %13 to i64
  %45 = zext i32 %mul24 to i64
  br label %for.body

for.body:                                         ; preds = %if.end204, %for.inc584
  %indvars.iv923 = phi i64 [ 0, %if.end204 ], [ %indvars.iv.next924, %for.inc584 ]
  %min_mcost.addr.0910 = phi i32 [ %min_mcost, %if.end204 ], [ %min_mcost.addr.1, %for.inc584 ]
  %best_pos.0907 = phi i32 [ 0, %if.end204 ], [ %best_pos.1, %for.inc584 ]
  %46 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  %arrayidx209 = getelementptr inbounds i16, i16* %46, i64 %indvars.iv923
  %47 = load i16, i16* %arrayidx209, align 2, !tbaa !308
  %conv210 = sext i16 %47 to i32
  %add211 = add nsw i32 %conv210, %conv162
  %48 = load i16*, i16** @spiral_search_y, align 8, !tbaa !1
  %arrayidx214 = getelementptr inbounds i16, i16* %48, i64 %indvars.iv923
  %49 = load i16, i16* %arrayidx214, align 2, !tbaa !308
  %conv215 = sext i16 %49 to i32
  %add216 = add nsw i32 %conv215, %conv212
  %50 = load i32*, i32** @mvbits, align 8, !tbaa !1
  %arrayidx221 = getelementptr inbounds i32, i32* %50, i64 %idxprom220
  %51 = load i32, i32* %arrayidx221, align 4, !tbaa !13
  %arrayidx226 = getelementptr inbounds i32, i32* %50, i64 %idxprom225
  %52 = load i32, i32* %arrayidx226, align 4, !tbaa !13
  %add227 = add nsw i32 %52, %51
  %mul228 = mul nsw i32 %add227, %lambda_factor
  %shr229 = ashr i32 %mul228, 16
  %shl230 = shl nsw i32 %add211, 2
  %sub231 = sub i32 %shl230, %sum912
  %idxprom232 = sext i32 %sub231 to i64
  %arrayidx233 = getelementptr inbounds i32, i32* %50, i64 %idxprom232
  %53 = load i32, i32* %arrayidx233, align 4, !tbaa !13
  %shl234 = shl nsw i32 %add216, 2
  %sub235 = sub i32 %shl234, %sum913
  %idxprom236 = sext i32 %sub235 to i64
  %arrayidx237 = getelementptr inbounds i32, i32* %50, i64 %idxprom236
  %54 = load i32, i32* %arrayidx237, align 4, !tbaa !13
  %add238 = add nsw i32 %54, %53
  %mul239 = mul nsw i32 %add238, %lambda_factor
  %shr240 = ashr i32 %mul239, 16
  %add241 = add nsw i32 %shr240, %shr229
  %cmp242 = icmp slt i32 %add241, %min_mcost.addr.0910
  br i1 %cmp242, label %if.end245, label %for.inc584

if.end245:                                        ; preds = %for.body
  br i1 %cmp54, label %for.cond248.preheader, label %for.cond505.preheader

for.cond505.preheader:                            ; preds = %if.end245
  br i1 %cmp249902, label %for.body508.preheader, label %if.end579

for.body508.preheader:                            ; preds = %for.cond505.preheader
  %55 = zext i32 %add216 to i64
  br label %for.body508

for.cond248.preheader:                            ; preds = %if.end245
  br i1 %cmp249902, label %for.body251.preheader, label %if.end579

for.body251.preheader:                            ; preds = %for.cond248.preheader
  %56 = zext i32 %add216 to i64
  br label %for.body251

for.body251:                                      ; preds = %for.end, %for.body251.preheader
  %indvars.iv919 = phi i64 [ %indvars.iv.next920, %for.end ], [ 0, %for.body251.preheader ]
  %mcost.0903 = phi i32 [ %mcost.1.lcssa, %for.end ], [ %add241, %for.body251.preheader ]
  %57 = add i64 %indvars.iv919, %56
  %58 = trunc i64 %57 to i32
  %call = tail call i16* %get_ref_line2.0(i32 %14, i16* %9, i32 %58, i32 %add211, i32 %11, i32 %10) #8
  %59 = add nsw i64 %indvars.iv919, %43
  %60 = trunc i64 %59 to i32
  %call256 = tail call i16* %get_ref_line1.0(i32 %14, i16* %6, i32 %60, i32 %conv181, i32 %11, i32 %10) #8
  br i1 %cmp260895, label %for.body262.lr.ph, label %for.end

for.body262.lr.ph:                                ; preds = %for.body251
  %arrayidx258 = getelementptr inbounds i16*, i16** %orig_pic, i64 %indvars.iv919
  %61 = load i16*, i16** %arrayidx258, align 8, !tbaa !1
  %62 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul275 = shl i32 %62, 1
  %63 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add277 = add nsw i32 %63, 1
  %64 = load i32*, i32** @byte_abs, align 8, !tbaa !1
  %65 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value470 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %65, i64 0, i32 163
  br label %for.body262

for.body262:                                      ; preds = %cond.end487, %for.body262.lr.ph
  %x4.0900 = phi i32 [ 0, %for.body262.lr.ph ], [ %inc, %cond.end487 ]
  %mcost.1899 = phi i32 [ %mcost.0903, %for.body262.lr.ph ], [ %add496, %cond.end487 ]
  %orig_line.0898 = phi i16* [ %61, %for.body262.lr.ph ], [ %incdec.ptr490, %cond.end487 ]
  %ref2_line.0897 = phi i16* [ %call, %for.body262.lr.ph ], [ %incdec.ptr444, %cond.end487 ]
  %ref1_line.0896 = phi i16* [ %call256, %for.body262.lr.ph ], [ %incdec.ptr439, %cond.end487 ]
  %incdec.ptr = getelementptr inbounds i16, i16* %ref1_line.0896, i64 1
  %66 = load i16, i16* %ref1_line.0896, align 2, !tbaa !308
  %conv264 = zext i16 %66 to i32
  %incdec.ptr268 = getelementptr inbounds i16, i16* %ref2_line.0897, i64 1
  %67 = load i16, i16* %ref2_line.0897, align 2, !tbaa !308
  %conv269 = zext i16 %67 to i32
  %sext852 = mul i32 %sext850, %conv264
  %conv272 = ashr exact i32 %sext852, 16
  %sext853 = mul i32 %sext851, %conv269
  %conv273 = ashr exact i32 %sext853, 16
  %add274 = add i32 %conv272, %mul275
  %add276 = add i32 %add274, %conv273
  %shr278 = ashr i32 %add276, %add277
  %add280 = add nsw i32 %shr278, %conv279
  %cmp281 = icmp slt i32 %add280, 0
  br i1 %cmp281, label %cond.end310, label %cond.false284

cond.false284:                                    ; preds = %for.body262
  %68 = load i32, i32* %max_imgpel_value470, align 4, !tbaa !331
  %cmp294 = icmp sgt i32 %add280, %68
  %.add280 = select i1 %cmp294, i32 %68, i32 %add280
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false284, %for.body262
  %cond311 = phi i32 [ 0, %for.body262 ], [ %.add280, %cond.false284 ]
  %incdec.ptr313 = getelementptr inbounds i16, i16* %orig_line.0898, i64 1
  %69 = load i16, i16* %orig_line.0898, align 2, !tbaa !308
  %conv314 = zext i16 %69 to i32
  %sext855 = shl i32 %cond311, 16
  %conv315 = ashr exact i32 %sext855, 16
  %sub316 = sub nsw i32 %conv314, %conv315
  %idxprom317 = sext i32 %sub316 to i64
  %arrayidx318 = getelementptr inbounds i32, i32* %64, i64 %idxprom317
  %70 = load i32, i32* %arrayidx318, align 4, !tbaa !13
  %add319 = add i32 %70, %mcost.1899
  %incdec.ptr321 = getelementptr inbounds i16, i16* %ref1_line.0896, i64 2
  %71 = load i16, i16* %incdec.ptr, align 2, !tbaa !308
  %conv322 = zext i16 %71 to i32
  %incdec.ptr326 = getelementptr inbounds i16, i16* %ref2_line.0897, i64 2
  %72 = load i16, i16* %incdec.ptr268, align 2, !tbaa !308
  %conv327 = zext i16 %72 to i32
  %sext856 = mul i32 %sext850, %conv322
  %conv330 = ashr exact i32 %sext856, 16
  %sext857 = mul i32 %sext851, %conv327
  %conv331 = ashr exact i32 %sext857, 16
  %add332 = add i32 %conv330, %mul275
  %add334 = add i32 %add332, %conv331
  %shr336 = ashr i32 %add334, %add277
  %add338 = add nsw i32 %shr336, %conv279
  %cmp339 = icmp slt i32 %add338, 0
  br i1 %cmp339, label %cond.end369, label %cond.false342

cond.false342:                                    ; preds = %cond.end310
  %73 = load i32, i32* %max_imgpel_value470, align 4, !tbaa !331
  %cmp353 = icmp sgt i32 %add338, %73
  %.add338 = select i1 %cmp353, i32 %73, i32 %add338
  br label %cond.end369

cond.end369:                                      ; preds = %cond.false342, %cond.end310
  %cond370 = phi i32 [ 0, %cond.end310 ], [ %.add338, %cond.false342 ]
  %incdec.ptr372 = getelementptr inbounds i16, i16* %orig_line.0898, i64 2
  %74 = load i16, i16* %incdec.ptr313, align 2, !tbaa !308
  %conv373 = zext i16 %74 to i32
  %sext858 = shl i32 %cond370, 16
  %conv374 = ashr exact i32 %sext858, 16
  %sub375 = sub nsw i32 %conv373, %conv374
  %idxprom376 = sext i32 %sub375 to i64
  %arrayidx377 = getelementptr inbounds i32, i32* %64, i64 %idxprom376
  %75 = load i32, i32* %arrayidx377, align 4, !tbaa !13
  %add378 = add i32 %add319, %75
  %incdec.ptr380 = getelementptr inbounds i16, i16* %ref1_line.0896, i64 3
  %76 = load i16, i16* %incdec.ptr321, align 2, !tbaa !308
  %conv381 = zext i16 %76 to i32
  %incdec.ptr385 = getelementptr inbounds i16, i16* %ref2_line.0897, i64 3
  %77 = load i16, i16* %incdec.ptr326, align 2, !tbaa !308
  %conv386 = zext i16 %77 to i32
  %sext859 = mul i32 %sext850, %conv381
  %conv389 = ashr exact i32 %sext859, 16
  %sext860 = mul i32 %sext851, %conv386
  %conv390 = ashr exact i32 %sext860, 16
  %add391 = add i32 %conv389, %mul275
  %add393 = add i32 %add391, %conv390
  %shr395 = ashr i32 %add393, %add277
  %add397 = add nsw i32 %shr395, %conv279
  %cmp398 = icmp slt i32 %add397, 0
  br i1 %cmp398, label %cond.end428, label %cond.false401

cond.false401:                                    ; preds = %cond.end369
  %78 = load i32, i32* %max_imgpel_value470, align 4, !tbaa !331
  %cmp412 = icmp sgt i32 %add397, %78
  %.add397 = select i1 %cmp412, i32 %78, i32 %add397
  br label %cond.end428

cond.end428:                                      ; preds = %cond.false401, %cond.end369
  %cond429 = phi i32 [ 0, %cond.end369 ], [ %.add397, %cond.false401 ]
  %incdec.ptr431 = getelementptr inbounds i16, i16* %orig_line.0898, i64 3
  %79 = load i16, i16* %incdec.ptr372, align 2, !tbaa !308
  %conv432 = zext i16 %79 to i32
  %sext861 = shl i32 %cond429, 16
  %conv433 = ashr exact i32 %sext861, 16
  %sub434 = sub nsw i32 %conv432, %conv433
  %idxprom435 = sext i32 %sub434 to i64
  %arrayidx436 = getelementptr inbounds i32, i32* %64, i64 %idxprom435
  %80 = load i32, i32* %arrayidx436, align 4, !tbaa !13
  %add437 = add i32 %add378, %80
  %incdec.ptr439 = getelementptr inbounds i16, i16* %ref1_line.0896, i64 4
  %81 = load i16, i16* %incdec.ptr380, align 2, !tbaa !308
  %conv440 = zext i16 %81 to i32
  %incdec.ptr444 = getelementptr inbounds i16, i16* %ref2_line.0897, i64 4
  %82 = load i16, i16* %incdec.ptr385, align 2, !tbaa !308
  %conv445 = zext i16 %82 to i32
  %sext862 = mul i32 %sext850, %conv440
  %conv448 = ashr exact i32 %sext862, 16
  %sext863 = mul i32 %sext851, %conv445
  %conv449 = ashr exact i32 %sext863, 16
  %add450 = add i32 %conv448, %mul275
  %add452 = add i32 %add450, %conv449
  %shr454 = ashr i32 %add452, %add277
  %add456 = add nsw i32 %shr454, %conv279
  %cmp457 = icmp slt i32 %add456, 0
  br i1 %cmp457, label %cond.end487, label %cond.false460

cond.false460:                                    ; preds = %cond.end428
  %83 = load i32, i32* %max_imgpel_value470, align 4, !tbaa !331
  %cmp471 = icmp sgt i32 %add456, %83
  %.add456 = select i1 %cmp471, i32 %83, i32 %add456
  br label %cond.end487

cond.end487:                                      ; preds = %cond.false460, %cond.end428
  %cond488 = phi i32 [ 0, %cond.end428 ], [ %.add456, %cond.false460 ]
  %incdec.ptr490 = getelementptr inbounds i16, i16* %orig_line.0898, i64 4
  %84 = load i16, i16* %incdec.ptr431, align 2, !tbaa !308
  %conv491 = zext i16 %84 to i32
  %sext864 = shl i32 %cond488, 16
  %conv492 = ashr exact i32 %sext864, 16
  %sub493 = sub nsw i32 %conv491, %conv492
  %idxprom494 = sext i32 %sub493 to i64
  %arrayidx495 = getelementptr inbounds i32, i32* %64, i64 %idxprom494
  %85 = load i32, i32* %arrayidx495, align 4, !tbaa !13
  %add496 = add i32 %add437, %85
  %inc = add nuw nsw i32 %x4.0900, 1
  %exitcond918 = icmp eq i32 %inc, %shr
  br i1 %exitcond918, label %for.end.loopexit, label %for.body262

for.end.loopexit:                                 ; preds = %cond.end487
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.body251
  %mcost.1.lcssa = phi i32 [ %mcost.0903, %for.body251 ], [ %add496, %for.end.loopexit ]
  %cmp497 = icmp slt i32 %mcost.1.lcssa, %min_mcost.addr.0910
  %indvars.iv.next920 = add nuw nsw i64 %indvars.iv919, 1
  %cmp249 = icmp slt i64 %indvars.iv.next920, %44
  %or.cond = and i1 %cmp497, %cmp249
  br i1 %or.cond, label %for.body251, label %if.end579.loopexit

for.body508:                                      ; preds = %for.end571, %for.body508.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end571 ], [ 0, %for.body508.preheader ]
  %mcost.2891 = phi i32 [ %mcost.3.lcssa, %for.end571 ], [ %add241, %for.body508.preheader ]
  %86 = add i64 %indvars.iv, %55
  %87 = trunc i64 %86 to i32
  %call510 = tail call i16* %get_ref_line2.0(i32 %14, i16* %9, i32 %87, i32 %add211, i32 %11, i32 %10) #8
  %88 = add nsw i64 %indvars.iv, %43
  %89 = trunc i64 %88 to i32
  %call514 = tail call i16* %get_ref_line1.0(i32 %14, i16* %6, i32 %89, i32 %conv181, i32 %11, i32 %10) #8
  br i1 %cmp260895, label %for.body520.lr.ph, label %for.end571

for.body520.lr.ph:                                ; preds = %for.body508
  %arrayidx516 = getelementptr inbounds i16*, i16** %orig_pic, i64 %indvars.iv
  %90 = load i16*, i16** %arrayidx516, align 8, !tbaa !1
  %91 = load i32*, i32** @byte_abs, align 8, !tbaa !1
  br label %for.body520

for.body520:                                      ; preds = %for.body520, %for.body520.lr.ph
  %x4.1889 = phi i32 [ 0, %for.body520.lr.ph ], [ %inc570, %for.body520 ]
  %mcost.3888 = phi i32 [ %mcost.2891, %for.body520.lr.ph ], [ %add568, %for.body520 ]
  %orig_line.1887 = phi i16* [ %90, %for.body520.lr.ph ], [ %incdec.ptr557, %for.body520 ]
  %ref2_line.1886 = phi i16* [ %call510, %for.body520.lr.ph ], [ %incdec.ptr561, %for.body520 ]
  %ref1_line.1885 = phi i16* [ %call514, %for.body520.lr.ph ], [ %incdec.ptr559, %for.body520 ]
  %92 = bitcast i16* %orig_line.1887 to <4 x i16>*
  %93 = load <4 x i16>, <4 x i16>* %92, align 2, !tbaa !308
  %94 = zext <4 x i16> %93 to <4 x i32>
  %95 = bitcast i16* %ref1_line.1885 to <4 x i16>*
  %96 = load <4 x i16>, <4 x i16>* %95, align 2, !tbaa !308
  %97 = zext <4 x i16> %96 to <4 x i32>
  %98 = bitcast i16* %ref2_line.1886 to <4 x i16>*
  %99 = load <4 x i16>, <4 x i16>* %98, align 2, !tbaa !308
  %100 = zext <4 x i16> %99 to <4 x i32>
  %101 = add nuw nsw <4 x i32> %100, %97
  %102 = lshr <4 x i32> %101, <i32 1, i32 1, i32 1, i32 1>
  %103 = sub nsw <4 x i32> %94, %102
  %104 = extractelement <4 x i32> %103, i32 0
  %105 = sext i32 %104 to i64
  %arrayidx531 = getelementptr inbounds i32, i32* %91, i64 %105
  %106 = load i32, i32* %arrayidx531, align 4, !tbaa !13
  %add532 = add i32 %106, %mcost.3888
  %107 = extractelement <4 x i32> %103, i32 1
  %108 = sext i32 %107 to i64
  %arrayidx543 = getelementptr inbounds i32, i32* %91, i64 %108
  %109 = load i32, i32* %arrayidx543, align 4, !tbaa !13
  %add544 = add i32 %add532, %109
  %110 = extractelement <4 x i32> %103, i32 2
  %111 = sext i32 %110 to i64
  %arrayidx555 = getelementptr inbounds i32, i32* %91, i64 %111
  %112 = load i32, i32* %arrayidx555, align 4, !tbaa !13
  %add556 = add i32 %add544, %112
  %incdec.ptr557 = getelementptr inbounds i16, i16* %orig_line.1887, i64 4
  %incdec.ptr559 = getelementptr inbounds i16, i16* %ref1_line.1885, i64 4
  %incdec.ptr561 = getelementptr inbounds i16, i16* %ref2_line.1886, i64 4
  %113 = extractelement <4 x i32> %103, i32 3
  %114 = sext i32 %113 to i64
  %arrayidx567 = getelementptr inbounds i32, i32* %91, i64 %114
  %115 = load i32, i32* %arrayidx567, align 4, !tbaa !13
  %add568 = add i32 %add556, %115
  %inc570 = add nuw nsw i32 %x4.1889, 1
  %exitcond = icmp eq i32 %inc570, %shr
  br i1 %exitcond, label %for.end571.loopexit, label %for.body520

for.end571.loopexit:                              ; preds = %for.body520
  br label %for.end571

for.end571:                                       ; preds = %for.end571.loopexit, %for.body508
  %mcost.3.lcssa = phi i32 [ %mcost.2891, %for.body508 ], [ %add568, %for.end571.loopexit ]
  %cmp572 = icmp slt i32 %mcost.3.lcssa, %min_mcost.addr.0910
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp506 = icmp slt i64 %indvars.iv.next, %44
  %or.cond915 = and i1 %cmp572, %cmp506
  br i1 %or.cond915, label %for.body508, label %if.end579.loopexit931

if.end579.loopexit:                               ; preds = %for.end
  br label %if.end579

if.end579.loopexit931:                            ; preds = %for.end571
  br label %if.end579

if.end579:                                        ; preds = %if.end579.loopexit931, %if.end579.loopexit, %for.cond505.preheader, %for.cond248.preheader
  %mcost.4 = phi i32 [ %add241, %for.cond248.preheader ], [ %add241, %for.cond505.preheader ], [ %mcost.1.lcssa, %if.end579.loopexit ], [ %mcost.3.lcssa, %if.end579.loopexit931 ]
  %cmp580 = icmp slt i32 %mcost.4, %min_mcost.addr.0910
  %116 = trunc i64 %indvars.iv923 to i32
  %pos.0.best_pos.0 = select i1 %cmp580, i32 %116, i32 %best_pos.0907
  %mcost.4.min_mcost.addr.0 = select i1 %cmp580, i32 %mcost.4, i32 %min_mcost.addr.0910
  br label %for.inc584

for.inc584:                                       ; preds = %if.end579, %for.body
  %best_pos.1 = phi i32 [ %best_pos.0907, %for.body ], [ %pos.0.best_pos.0, %if.end579 ]
  %min_mcost.addr.1 = phi i32 [ %min_mcost.addr.0910, %for.body ], [ %mcost.4.min_mcost.addr.0, %if.end579 ]
  %indvars.iv.next924 = add nuw nsw i64 %indvars.iv923, 1
  %cmp205 = icmp slt i64 %indvars.iv.next924, %45
  br i1 %cmp205, label %for.body, label %for.end586

for.end586:                                       ; preds = %for.inc584
  %tobool587 = icmp eq i32 %best_pos.1, 0
  br i1 %tobool587, label %if.end601, label %if.then588

if.then588:                                       ; preds = %for.end586
  %117 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  %idxprom589 = sext i32 %best_pos.1 to i64
  %arrayidx590 = getelementptr inbounds i16, i16* %117, i64 %idxprom589
  %118 = load i16, i16* %arrayidx590, align 2, !tbaa !308
  %119 = load i16, i16* %mv_x, align 2, !tbaa !308
  %add593 = add i16 %119, %118
  store i16 %add593, i16* %mv_x, align 2, !tbaa !308
  %120 = load i16*, i16** @spiral_search_y, align 8, !tbaa !1
  %arrayidx596 = getelementptr inbounds i16, i16* %120, i64 %idxprom589
  %121 = load i16, i16* %arrayidx596, align 2, !tbaa !308
  %122 = load i16, i16* %mv_y, align 2, !tbaa !308
  %add599 = add i16 %122, %121
  store i16 %add599, i16* %mv_y, align 2, !tbaa !308
  br label %if.end601

if.end601:                                        ; preds = %for.end586, %if.then588
  ret i32 %min_mcost.addr.1
}

; Function Attrs: nounwind uwtable
define i32 @SubPelBlockSearchBiPred(i16** nocapture readonly %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* nocapture %mv_x, i16* nocapture %mv_y, i16* nocapture readonly %s_mv_x, i16* nocapture readonly %s_mv_y, i32 %search_pos2, i32 %search_pos4, i32 %min_mcost, i32 %lambda_factor) local_unnamed_addr #0 {
entry:
  %c_diff = alloca [256 x i32], align 16
  %diff = alloca [16 x i32], align 16
  %0 = bitcast [256 x i32]* %c_diff to i8*
  call void @llvm.lifetime.start(i64 1024, i8* nonnull %0) #8
  %1 = bitcast [16 x i32]* %diff to i8*
  call void @llvm.lifetime.start(i64 64, i8* nonnull %1) #8
  %cmp = icmp eq i32 %blocktype, 3
  %conv = zext i1 %cmp to i32
  %mul = shl nuw nsw i32 %conv, 6
  %sub = sub nsw i32 128, %mul
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %idxprom = sext i32 %blocktype to i64
  %arrayidx1 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 21, i64 %idxprom, i64 0
  %3 = load i32, i32* %arrayidx1, align 4, !tbaa !13
  %arrayidx5 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 21, i64 %idxprom, i64 1
  %4 = load i32, i32* %arrayidx5, align 4, !tbaa !13
  %add = shl i32 %pic_pix_x, 2
  %shl = add i32 %add, 16
  %add6 = shl i32 %pic_pix_y, 2
  %shl7 = add i32 %add6, 16
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 6
  %5 = load i32, i32* %hadamard, align 8, !tbaa !338
  %tobool = icmp ne i32 %5, 0
  %not.tobool = xor i1 %tobool, true
  %cond = zext i1 %not.tobool to i32
  %6 = icmp sgt i32 %search_pos2, 1
  %cond13 = select i1 %6, i32 %search_pos2, i32 1
  %cond16 = select i1 %tobool, i32 %cond13, i32 %search_pos2
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i64 0, i32 55
  %8 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8, !tbaa !293
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i64 0, i32 3
  %9 = load i32, i32* %current_mb_nr, align 4, !tbaa !294
  %idxprom17 = sext i32 %9 to i64
  %list_offset19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %8, i64 %idxprom17, i32 20
  %10 = load i32, i32* %list_offset19, align 4, !tbaa !295
  %11 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8, !tbaa !1
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %11, i64 0, i32 20
  %12 = load i32, i32* %weighted_bipred_idc, align 4, !tbaa !301
  %tobool20 = icmp ne i32 %12, 0
  br i1 %tobool20, label %cond.true21, label %cond.end111

cond.true21:                                      ; preds = %entry
  %cmp22 = icmp eq i32 %list, 0
  %13 = load i32****, i32***** @wbp_weight, align 8, !tbaa !1
  br i1 %cmp22, label %cond.true96, label %cond.false103

cond.true96:                                      ; preds = %cond.true21
  %idxprom25 = sext i32 %10 to i64
  %arrayidx26 = getelementptr inbounds i32***, i32**** %13, i64 %idxprom25
  %14 = load i32***, i32**** %arrayidx26, align 8, !tbaa !1
  %idxprom27 = sext i16 %ref to i64
  %arrayidx28 = getelementptr inbounds i32**, i32*** %14, i64 %idxprom27
  %15 = load i32**, i32*** %arrayidx28, align 8, !tbaa !1
  %add50 = add nsw i32 %10, 1
  %idxprom51 = sext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds i32***, i32**** %13, i64 %idxprom51
  %16 = load i32***, i32**** %arrayidx52, align 8, !tbaa !1
  %arrayidx54 = getelementptr inbounds i32**, i32*** %16, i64 %idxprom27
  %17 = load i32**, i32*** %arrayidx54, align 8, !tbaa !1
  %18 = load i32***, i32**** @wp_offset, align 8, !tbaa !1
  %arrayidx76 = getelementptr inbounds i32**, i32*** %18, i64 %idxprom25
  %19 = load i32**, i32*** %arrayidx76, align 8, !tbaa !1
  %arrayidx78 = getelementptr inbounds i32*, i32** %19, i64 %idxprom27
  %arrayidx99 = getelementptr inbounds i32**, i32*** %18, i64 %idxprom51
  %20 = load i32**, i32*** %arrayidx99, align 8, !tbaa !1
  %arrayidx101 = getelementptr inbounds i32*, i32** %20, i64 %idxprom27
  br label %cond.end108

cond.false103:                                    ; preds = %cond.true21
  %add32 = add nsw i32 %10, 1
  %idxprom33 = sext i32 %add32 to i64
  %arrayidx34 = getelementptr inbounds i32***, i32**** %13, i64 %idxprom33
  %21 = load i32***, i32**** %arrayidx34, align 8, !tbaa !1
  %22 = load i32**, i32*** %21, align 8, !tbaa !1
  %idxprom36 = sext i16 %ref to i64
  %arrayidx37 = getelementptr inbounds i32*, i32** %22, i64 %idxprom36
  %idxprom58 = sext i32 %10 to i64
  %arrayidx59 = getelementptr inbounds i32***, i32**** %13, i64 %idxprom58
  %23 = load i32***, i32**** %arrayidx59, align 8, !tbaa !1
  %24 = load i32**, i32*** %23, align 8, !tbaa !1
  %arrayidx62 = getelementptr inbounds i32*, i32** %24, i64 %idxprom36
  %25 = load i32***, i32**** @wp_offset, align 8, !tbaa !1
  %arrayidx83 = getelementptr inbounds i32**, i32*** %25, i64 %idxprom33
  %26 = load i32**, i32*** %arrayidx83, align 8, !tbaa !1
  %arrayidx105 = getelementptr inbounds i32**, i32*** %25, i64 %idxprom58
  %27 = load i32**, i32*** %arrayidx105, align 8, !tbaa !1
  br label %cond.end108

cond.end108:                                      ; preds = %cond.false103, %cond.true96
  %.in.in = phi i32** [ %26, %cond.false103 ], [ %arrayidx78, %cond.true96 ]
  %phitmp2618263226412654.in.in.in.in = phi i32** [ %arrayidx37, %cond.false103 ], [ %15, %cond.true96 ]
  %phitmp262026432652.in.in.in.in = phi i32** [ %arrayidx62, %cond.false103 ], [ %17, %cond.true96 ]
  %arrayidx106.sink = phi i32** [ %27, %cond.false103 ], [ %arrayidx101, %cond.true96 ]
  %phitmp262026432652.in.in.in = load i32*, i32** %phitmp262026432652.in.in.in.in, align 8, !tbaa !1
  %phitmp2618263226412654.in.in.in = load i32*, i32** %phitmp2618263226412654.in.in.in.in, align 8, !tbaa !1
  %phitmp262026432652.in.in = load i32, i32* %phitmp262026432652.in.in.in, align 4, !tbaa !13
  %phitmp2618263226412654.in.in = load i32, i32* %phitmp2618263226412654.in.in.in, align 4, !tbaa !13
  %phitmp262026432652.in = shl i32 %phitmp262026432652.in.in, 16
  %phitmp2618263226412654.in = shl i32 %phitmp2618263226412654.in.in, 16
  %.in = load i32*, i32** %.in.in, align 8, !tbaa !1
  %phitmp262026432652 = ashr exact i32 %phitmp262026432652.in, 16
  %phitmp2618263226412654 = ashr exact i32 %phitmp2618263226412654.in, 16
  %28 = load i32, i32* %.in, align 4, !tbaa !13
  %29 = load i32*, i32** %arrayidx106.sink, align 8, !tbaa !1
  %30 = load i32, i32* %29, align 4, !tbaa !13
  %phitmp = shl i32 %30, 16
  %phitmp2801 = ashr exact i32 %phitmp, 16
  %phitmp2802 = shl i32 %28, 16
  %phitmp2803 = ashr exact i32 %phitmp2802, 16
  %phitmp2804 = add nsw i32 %phitmp2803, 1
  br label %cond.end111

cond.end111:                                      ; preds = %entry, %cond.end108
  %cond902649 = phi i32 [ %phitmp2804, %cond.end108 ], [ 1, %entry ]
  %cond43262726342647 = phi i32 [ %phitmp2618263226412654, %cond.end108 ], [ 1, %entry ]
  %cond6826362645 = phi i32 [ %phitmp262026432652, %cond.end108 ], [ 1, %entry ]
  %cond112 = phi i32 [ %phitmp2801, %cond.end108 ], [ 0, %entry ]
  %add117 = add nsw i32 %cond902649, %cond112
  %shr2571 = lshr i32 %add117, 1
  %Transform8x8Mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 144
  %31 = load i32, i32* %Transform8x8Mode, align 4, !tbaa !339
  %tobool119 = icmp ne i32 %31, 0
  %cmp120 = icmp slt i32 %blocktype, 5
  %or.cond = and i1 %cmp120, %tobool119
  %tobool. = and i1 %or.cond, %tobool
  %32 = load i16, i16* %s_mv_x, align 2, !tbaa !308
  %conv124 = sext i16 %32 to i32
  %add125 = add nsw i32 %conv124, %shl
  %33 = load i16, i16* %s_mv_y, align 2, !tbaa !308
  %conv126 = sext i16 %33 to i32
  %add127 = add nsw i32 %conv126, %shl7
  %add128 = add nsw i32 %10, %list
  %idxprom129 = sext i32 %add128 to i64
  %arrayidx130 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom129
  %34 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx130, align 8, !tbaa !1
  %idxprom131 = sext i16 %ref to i64
  %arrayidx132 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %34, i64 %idxprom131
  %35 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx132, align 8, !tbaa !1
  %imgY_ups = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %35, i64 0, i32 28
  %36 = load i16**, i16*** %imgY_ups, align 8, !tbaa !341
  %cmp133 = icmp eq i32 %list, 0
  %add136 = zext i1 %cmp133 to i32
  %cond139 = add nsw i32 %10, %add136
  %idxprom140 = sext i32 %cond139 to i64
  %arrayidx141 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom140
  %37 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx141, align 8, !tbaa !1
  %38 = load %struct.storable_picture*, %struct.storable_picture** %37, align 8, !tbaa !1
  %imgY_ups143 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %38, i64 0, i32 28
  %39 = load i16**, i16*** %imgY_ups143, align 8, !tbaa !341
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %35, i64 0, i32 18
  %40 = load i32, i32* %size_x, align 8, !tbaa !303
  %sub145 = shl i32 %40, 2
  %shl146 = add i32 %sub145, 28
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %35, i64 0, i32 19
  %41 = load i32, i32* %size_y, align 4, !tbaa !305
  %sub148 = shl i32 %41, 2
  %shl149 = add i32 %sub148, 28
  %sub151 = sub nsw i32 %40, %3
  %add152 = shl i32 %sub151, 2
  %shl153 = add i32 %add152, 32
  %sub155 = sub nsw i32 %41, %4
  %add156 = shl i32 %sub155, 2
  %shl157 = add i32 %add156, 32
  %42 = load i16, i16* %mv_x, align 2, !tbaa !308
  %conv158 = sext i16 %42 to i32
  %add159 = add nsw i32 %conv158, %shl
  %cmp160 = icmp sgt i32 %add159, 2
  %sub165 = add i32 %add152, 31
  %cmp166 = icmp slt i32 %add159, %sub165
  %or.cond2621 = and i1 %cmp160, %cmp166
  br i1 %or.cond2621, label %land.lhs.true168, label %if.end

land.lhs.true168:                                 ; preds = %cond.end111
  %43 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv169 = sext i16 %43 to i32
  %add170 = add nsw i32 %conv169, %shl7
  %cmp171 = icmp sgt i32 %add170, 2
  br i1 %cmp171, label %land.lhs.true173, label %if.end

land.lhs.true173:                                 ; preds = %land.lhs.true168
  %sub176 = add i32 %add156, 31
  %cmp177 = icmp slt i32 %add170, %sub176
  %FastLine4X.UMVLine4X = select i1 %cmp177, i16* (i16**, i32, i32, i32, i32)* @FastLine4X, i16* (i16**, i32, i32, i32, i32)* @UMVLine4X
  br label %if.end

if.end:                                           ; preds = %land.lhs.true173, %cond.end111, %land.lhs.true168
  %UMVLine4X.sink = phi i16* (i16**, i32, i32, i32, i32)* [ @UMVLine4X, %land.lhs.true168 ], [ @UMVLine4X, %cond.end111 ], [ %FastLine4X.UMVLine4X, %land.lhs.true173 ]
  store i16* (i16**, i32, i32, i32, i32)* %UMVLine4X.sink, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %cmp181 = icmp sgt i32 %add125, 2
  %cmp187 = icmp slt i32 %add125, %sub165
  %or.cond2622 = and i1 %cmp181, %cmp187
  %cmp192 = icmp sgt i32 %add127, 2
  %or.cond2796 = and i1 %or.cond2622, %cmp192
  br i1 %or.cond2796, label %land.lhs.true194, label %if.end202

land.lhs.true194:                                 ; preds = %if.end
  %sub197 = add i32 %add156, 31
  %cmp198 = icmp slt i32 %add127, %sub197
  %FastLine4X.UMVLine4X1720 = select i1 %cmp198, i16* (i16**, i32, i32, i32, i32)* @FastLine4X, i16* (i16**, i32, i32, i32, i32)* @UMVLine4X
  br label %if.end202

if.end202:                                        ; preds = %land.lhs.true194, %if.end
  %UMVLine4X.sink1716 = phi i16* (i16**, i32, i32, i32, i32)* [ @UMVLine4X, %if.end ], [ %FastLine4X.UMVLine4X1720, %land.lhs.true194 ]
  store i16* (i16**, i32, i32, i32, i32)* %UMVLine4X.sink1716, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %cmp2032722 = icmp slt i32 %cond, %cond16
  br i1 %cmp2032722, label %for.body.lr.ph, label %if.end926

for.body.lr.ph:                                   ; preds = %if.end202
  %conv216 = sext i16 %pred_mv_x to i32
  %conv221 = sext i16 %pred_mv_y to i32
  %cmp2352713 = icmp sgt i32 %4, 0
  %arraydecay901 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 0
  %cmp2612706 = icmp sgt i32 %3, 0
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %sext2617 = shl i32 %shr2571, 16
  %conv284 = ashr exact i32 %sext2617, 16
  %incdec.ptr291 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 1
  %incdec.ptr312 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 2
  %incdec.ptr334 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 3
  %incdec.ptr355 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 4
  %incdec.ptr381 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 5
  %incdec.ptr403 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 6
  %incdec.ptr425 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 7
  %incdec.ptr446 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 8
  %incdec.ptr472 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 9
  %incdec.ptr494 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 10
  %incdec.ptr516 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 11
  %incdec.ptr537 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 12
  %incdec.ptr563 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 13
  %incdec.ptr585 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 14
  %incdec.ptr607 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 15
  %44 = sext i32 %3 to i64
  %45 = sext i32 %4 to i64
  %46 = zext i1 %not.tobool to i64
  %47 = bitcast [16 x i32]* %diff to i8*
  %48 = bitcast i32* %incdec.ptr355 to i8*
  %49 = bitcast i32* %incdec.ptr446 to i8*
  %50 = bitcast i32* %incdec.ptr537 to i8*
  %51 = bitcast [16 x i32]* %diff to i8*
  %52 = bitcast i32* %incdec.ptr355 to i8*
  %53 = bitcast i32* %incdec.ptr446 to i8*
  %54 = bitcast i32* %incdec.ptr537 to i8*
  %wide.trip.count2773 = zext i32 %cond16 to i64
  %55 = bitcast [16 x i32]* %diff to <4 x i32>*
  %56 = bitcast i32* %incdec.ptr355 to <4 x i32>*
  %57 = bitcast i32* %incdec.ptr446 to <4 x i32>*
  %58 = bitcast i32* %incdec.ptr537 to <4 x i32>*
  br label %for.body

for.body:                                         ; preds = %for.inc909.for.body_crit_edge, %for.body.lr.ph
  %59 = phi i16 [ %42, %for.body.lr.ph ], [ %.pre, %for.inc909.for.body_crit_edge ]
  %indvars.iv2771 = phi i64 [ %46, %for.body.lr.ph ], [ %indvars.iv.next2772, %for.inc909.for.body_crit_edge ]
  %min_mcost.addr.02726 = phi i32 [ %min_mcost, %for.body.lr.ph ], [ %min_mcost.addr.1, %for.inc909.for.body_crit_edge ]
  %best_pos.02723 = phi i32 [ 0, %for.body.lr.ph ], [ %best_pos.1, %for.inc909.for.body_crit_edge ]
  %conv205 = sext i16 %59 to i32
  %60 = load i16*, i16** @spiral_hpel_search_x, align 8, !tbaa !1
  %arrayidx207 = getelementptr inbounds i16, i16* %60, i64 %indvars.iv2771
  %61 = load i16, i16* %arrayidx207, align 2, !tbaa !308
  %conv208 = sext i16 %61 to i32
  %add209 = add nsw i32 %conv208, %conv205
  %62 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv210 = sext i16 %62 to i32
  %63 = load i16*, i16** @spiral_hpel_search_y, align 8, !tbaa !1
  %arrayidx212 = getelementptr inbounds i16, i16* %63, i64 %indvars.iv2771
  %64 = load i16, i16* %arrayidx212, align 2, !tbaa !308
  %conv213 = sext i16 %64 to i32
  %add214 = add nsw i32 %conv213, %conv210
  %65 = load i32*, i32** @mvbits, align 8, !tbaa !1
  %sub217 = sub nsw i32 %add209, %conv216
  %idxprom218 = sext i32 %sub217 to i64
  %arrayidx219 = getelementptr inbounds i32, i32* %65, i64 %idxprom218
  %66 = load i32, i32* %arrayidx219, align 4, !tbaa !13
  %sub222 = sub nsw i32 %add214, %conv221
  %idxprom223 = sext i32 %sub222 to i64
  %arrayidx224 = getelementptr inbounds i32, i32* %65, i64 %idxprom223
  %67 = load i32, i32* %arrayidx224, align 4, !tbaa !13
  %add225 = add nsw i32 %67, %66
  %mul226 = mul nsw i32 %add225, %lambda_factor
  %shr227 = ashr i32 %mul226, 16
  %cmp228 = icmp slt i32 %shr227, %min_mcost.addr.02726
  br i1 %cmp228, label %if.end231, label %for.inc909

if.end231:                                        ; preds = %for.body
  %add232 = add nsw i32 %add209, %shl
  %add233 = add nsw i32 %add214, %shl7
  br i1 %cmp2352713, label %for.body241.preheader, label %for.end898

for.body241.preheader:                            ; preds = %if.end231
  br label %for.body241

for.body241:                                      ; preds = %for.body241.preheader, %for.inc896
  %indvars.iv2760 = phi i64 [ %indvars.iv.next2761, %for.inc896 ], [ 0, %for.body241.preheader ]
  %mcost.02720 = phi i32 [ %mcost.5, %for.inc896 ], [ %shr227, %for.body241.preheader ]
  %y0.02715 = phi i32 [ %add897, %for.inc896 ], [ 0, %for.body241.preheader ]
  %cmp242 = icmp sgt i64 %indvars.iv2760, 7
  %mul244 = select i1 %cmp242, i32 %sub, i32 0
  %68 = trunc i64 %indvars.iv2760 to i32
  %shl245 = shl i32 %68, 2
  %add246 = add nsw i32 %add233, %shl245
  %add247 = add nsw i32 %add246, 4
  %add248 = add nsw i32 %add246, 8
  %add249 = add nsw i32 %add246, 12
  %add251 = add nsw i32 %shl245, %add127
  %add252 = add nsw i32 %add251, 4
  %add253 = add nsw i32 %add251, 8
  %add254 = add nsw i32 %add251, 12
  %69 = or i64 %indvars.iv2760, 1
  %70 = add nuw nsw i64 %69, 1
  %71 = or i64 %indvars.iv2760, 3
  br i1 %tobool20, label %for.cond260.preheader, label %for.cond662.preheader

for.cond662.preheader:                            ; preds = %for.body241
  br i1 %cmp2612706, label %for.body665.lr.ph, label %for.inc896

for.body665.lr.ph:                                ; preds = %for.cond662.preheader
  %arrayidx672 = getelementptr inbounds i16*, i16** %orig_pic, i64 %indvars.iv2760
  %arrayidx719 = getelementptr inbounds i16*, i16** %orig_pic, i64 %69
  %arrayidx766 = getelementptr inbounds i16*, i16** %orig_pic, i64 %70
  %arrayidx813 = getelementptr inbounds i16*, i16** %orig_pic, i64 %71
  %and880 = shl i32 %68, 3
  %shl881 = and i32 %and880, 32
  %72 = or i64 %indvars.iv2760, 1
  %73 = or i32 %y0.02715, 3
  %74 = sext i32 %73 to i64
  %cmp877 = icmp slt i64 %indvars.iv2760, %74
  %75 = trunc i64 %72 to i32
  %and880.1 = shl i32 %75, 3
  %shl881.1 = and i32 %and880.1, 40
  %76 = add nuw nsw i64 %72, 1
  %77 = trunc i64 %76 to i32
  %and880.2 = shl i32 %77, 3
  %shl881.2 = and i32 %and880.2, 48
  %78 = trunc i64 %indvars.iv2760 to i32
  %79 = shl i32 %78, 3
  %and880.3 = and i32 %79, 32
  br label %for.body665

for.cond260.preheader:                            ; preds = %for.body241
  br i1 %cmp2612706, label %for.body263.lr.ph, label %for.inc896

for.body263.lr.ph:                                ; preds = %for.cond260.preheader
  %arrayidx269 = getelementptr inbounds i16*, i16** %orig_pic, i64 %indvars.iv2760
  %arrayidx357 = getelementptr inbounds i16*, i16** %orig_pic, i64 %69
  %arrayidx448 = getelementptr inbounds i16*, i16** %orig_pic, i64 %70
  %arrayidx539 = getelementptr inbounds i16*, i16** %orig_pic, i64 %71
  %and649 = shl i32 %68, 3
  %shl650 = and i32 %and649, 32
  %80 = or i64 %indvars.iv2760, 1
  %81 = or i32 %y0.02715, 3
  %82 = sext i32 %81 to i64
  %cmp646 = icmp slt i64 %indvars.iv2760, %82
  %83 = trunc i64 %80 to i32
  %and649.1 = shl i32 %83, 3
  %shl650.1 = and i32 %and649.1, 40
  %84 = add nuw nsw i64 %80, 1
  %85 = trunc i64 %84 to i32
  %and649.2 = shl i32 %85, 3
  %shl650.2 = and i32 %and649.2, 48
  %86 = trunc i64 %indvars.iv2760 to i32
  %87 = shl i32 %86, 3
  %and649.3 = and i32 %87, 32
  br label %for.body263

for.body263:                                      ; preds = %for.body263.lr.ph, %for.inc658
  %indvars.iv2758 = phi i64 [ 0, %for.body263.lr.ph ], [ %indvars.iv.next2759, %for.inc658 ]
  %mcost.12708 = phi i32 [ %mcost.02720, %for.body263.lr.ph ], [ %mcost.2, %for.inc658 ]
  %88 = trunc i64 %indvars.iv2758 to i32
  %shl264 = shl i32 %88, 2
  %add265 = add nsw i32 %shl264, %add232
  %add267 = add nsw i32 %shl264, %add125
  %89 = load i16*, i16** %arrayidx269, align 8, !tbaa !1
  %arrayidx271 = getelementptr inbounds i16, i16* %89, i64 %indvars.iv2758
  %90 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call = tail call i16* %90(i16** %36, i32 %add251, i32 %add267, i32 %shl149, i32 %shl146) #8
  %91 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call272 = tail call i16* %91(i16** %39, i32 %add246, i32 %add265, i32 %shl149, i32 %shl146) #8
  %92 = load i16, i16* %call, align 2, !tbaa !308
  %conv274 = zext i16 %92 to i32
  %mul275 = mul nsw i32 %conv274, %cond43262726342647
  %93 = load i16, i16* %call272, align 2, !tbaa !308
  %conv277 = zext i16 %93 to i32
  %mul278 = mul nsw i32 %conv277, %cond6826362645
  %add279 = add nsw i32 %mul278, %mul275
  %94 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul280 = shl i32 %94, 1
  %add281 = add nsw i32 %add279, %mul280
  %95 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add282 = add nsw i32 %95, 1
  %shr283 = ashr i32 %add281, %add282
  %add285 = add nsw i32 %shr283, %conv284
  %call286 = tail call i32 @clip1a(i32 %add285) #8
  %incdec.ptr = getelementptr inbounds i16, i16* %arrayidx271, i64 1
  %96 = load i16, i16* %arrayidx271, align 2, !tbaa !308
  %conv288 = zext i16 %96 to i32
  %conv289 = and i32 %call286, 65535
  %sub290 = sub nsw i32 %conv288, %conv289
  store i32 %sub290, i32* %arraydecay, align 16, !tbaa !13
  %add.ptr = getelementptr inbounds i16, i16* %call, i64 4
  %97 = load i16, i16* %add.ptr, align 2, !tbaa !308
  %conv293 = zext i16 %97 to i32
  %mul294 = mul nsw i32 %conv293, %cond43262726342647
  %add.ptr296 = getelementptr inbounds i16, i16* %call272, i64 4
  %98 = load i16, i16* %add.ptr296, align 2, !tbaa !308
  %conv297 = zext i16 %98 to i32
  %mul298 = mul nsw i32 %conv297, %cond6826362645
  %add299 = add nsw i32 %mul298, %mul294
  %99 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul300 = shl i32 %99, 1
  %add301 = add nsw i32 %add299, %mul300
  %100 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add302 = add nsw i32 %100, 1
  %shr303 = ashr i32 %add301, %add302
  %add305 = add nsw i32 %shr303, %conv284
  %call306 = tail call i32 @clip1a(i32 %add305) #8
  %incdec.ptr308 = getelementptr inbounds i16, i16* %incdec.ptr, i64 1
  %101 = load i16, i16* %incdec.ptr, align 2, !tbaa !308
  %conv309 = zext i16 %101 to i32
  %conv310 = and i32 %call306, 65535
  %sub311 = sub nsw i32 %conv309, %conv310
  store i32 %sub311, i32* %incdec.ptr291, align 4, !tbaa !13
  %add.ptr314 = getelementptr inbounds i16, i16* %call, i64 8
  %102 = load i16, i16* %add.ptr314, align 2, !tbaa !308
  %conv315 = zext i16 %102 to i32
  %mul316 = mul nsw i32 %conv315, %cond43262726342647
  %add.ptr318 = getelementptr inbounds i16, i16* %call272, i64 8
  %103 = load i16, i16* %add.ptr318, align 2, !tbaa !308
  %conv319 = zext i16 %103 to i32
  %mul320 = mul nsw i32 %conv319, %cond6826362645
  %add321 = add nsw i32 %mul320, %mul316
  %104 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul322 = shl i32 %104, 1
  %add323 = add nsw i32 %add321, %mul322
  %105 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add324 = add nsw i32 %105, 1
  %shr325 = ashr i32 %add323, %add324
  %add327 = add nsw i32 %shr325, %conv284
  %call328 = tail call i32 @clip1a(i32 %add327) #8
  %incdec.ptr330 = getelementptr inbounds i16, i16* %incdec.ptr308, i64 1
  %106 = load i16, i16* %incdec.ptr308, align 2, !tbaa !308
  %conv331 = zext i16 %106 to i32
  %conv332 = and i32 %call328, 65535
  %sub333 = sub nsw i32 %conv331, %conv332
  store i32 %sub333, i32* %incdec.ptr312, align 8, !tbaa !13
  %add.ptr336 = getelementptr inbounds i16, i16* %call, i64 12
  %107 = load i16, i16* %add.ptr336, align 2, !tbaa !308
  %conv337 = zext i16 %107 to i32
  %mul338 = mul nsw i32 %conv337, %cond43262726342647
  %add.ptr340 = getelementptr inbounds i16, i16* %call272, i64 12
  %108 = load i16, i16* %add.ptr340, align 2, !tbaa !308
  %conv341 = zext i16 %108 to i32
  %mul342 = mul nsw i32 %conv341, %cond6826362645
  %add343 = add nsw i32 %mul342, %mul338
  %109 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul344 = shl i32 %109, 1
  %add345 = add nsw i32 %add343, %mul344
  %110 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add346 = add nsw i32 %110, 1
  %shr347 = ashr i32 %add345, %add346
  %add349 = add nsw i32 %shr347, %conv284
  %call350 = tail call i32 @clip1a(i32 %add349) #8
  %111 = load i16, i16* %incdec.ptr330, align 2, !tbaa !308
  %conv352 = zext i16 %111 to i32
  %conv353 = and i32 %call350, 65535
  %sub354 = sub nsw i32 %conv352, %conv353
  store i32 %sub354, i32* %incdec.ptr334, align 4, !tbaa !13
  %112 = load i16*, i16** %arrayidx357, align 8, !tbaa !1
  %arrayidx359 = getelementptr inbounds i16, i16* %112, i64 %indvars.iv2758
  %113 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call360 = tail call i16* %113(i16** %36, i32 %add252, i32 %add267, i32 %shl149, i32 %shl146) #8
  %114 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call361 = tail call i16* %114(i16** %39, i32 %add247, i32 %add265, i32 %shl149, i32 %shl146) #8
  %115 = load i16, i16* %call360, align 2, !tbaa !308
  %conv363 = zext i16 %115 to i32
  %mul364 = mul nsw i32 %conv363, %cond43262726342647
  %116 = load i16, i16* %call361, align 2, !tbaa !308
  %conv366 = zext i16 %116 to i32
  %mul367 = mul nsw i32 %conv366, %cond6826362645
  %add368 = add nsw i32 %mul367, %mul364
  %117 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul369 = shl i32 %117, 1
  %add370 = add nsw i32 %add368, %mul369
  %118 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add371 = add nsw i32 %118, 1
  %shr372 = ashr i32 %add370, %add371
  %add374 = add nsw i32 %shr372, %conv284
  %call375 = tail call i32 @clip1a(i32 %add374) #8
  %incdec.ptr377 = getelementptr inbounds i16, i16* %arrayidx359, i64 1
  %119 = load i16, i16* %arrayidx359, align 2, !tbaa !308
  %conv378 = zext i16 %119 to i32
  %conv379 = and i32 %call375, 65535
  %sub380 = sub nsw i32 %conv378, %conv379
  store i32 %sub380, i32* %incdec.ptr355, align 16, !tbaa !13
  %add.ptr383 = getelementptr inbounds i16, i16* %call360, i64 4
  %120 = load i16, i16* %add.ptr383, align 2, !tbaa !308
  %conv384 = zext i16 %120 to i32
  %mul385 = mul nsw i32 %conv384, %cond43262726342647
  %add.ptr387 = getelementptr inbounds i16, i16* %call361, i64 4
  %121 = load i16, i16* %add.ptr387, align 2, !tbaa !308
  %conv388 = zext i16 %121 to i32
  %mul389 = mul nsw i32 %conv388, %cond6826362645
  %add390 = add nsw i32 %mul389, %mul385
  %122 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul391 = shl i32 %122, 1
  %add392 = add nsw i32 %add390, %mul391
  %123 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add393 = add nsw i32 %123, 1
  %shr394 = ashr i32 %add392, %add393
  %add396 = add nsw i32 %shr394, %conv284
  %call397 = tail call i32 @clip1a(i32 %add396) #8
  %incdec.ptr399 = getelementptr inbounds i16, i16* %incdec.ptr377, i64 1
  %124 = load i16, i16* %incdec.ptr377, align 2, !tbaa !308
  %conv400 = zext i16 %124 to i32
  %conv401 = and i32 %call397, 65535
  %sub402 = sub nsw i32 %conv400, %conv401
  store i32 %sub402, i32* %incdec.ptr381, align 4, !tbaa !13
  %add.ptr405 = getelementptr inbounds i16, i16* %call360, i64 8
  %125 = load i16, i16* %add.ptr405, align 2, !tbaa !308
  %conv406 = zext i16 %125 to i32
  %mul407 = mul nsw i32 %conv406, %cond43262726342647
  %add.ptr409 = getelementptr inbounds i16, i16* %call361, i64 8
  %126 = load i16, i16* %add.ptr409, align 2, !tbaa !308
  %conv410 = zext i16 %126 to i32
  %mul411 = mul nsw i32 %conv410, %cond6826362645
  %add412 = add nsw i32 %mul411, %mul407
  %127 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul413 = shl i32 %127, 1
  %add414 = add nsw i32 %add412, %mul413
  %128 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add415 = add nsw i32 %128, 1
  %shr416 = ashr i32 %add414, %add415
  %add418 = add nsw i32 %shr416, %conv284
  %call419 = tail call i32 @clip1a(i32 %add418) #8
  %incdec.ptr421 = getelementptr inbounds i16, i16* %incdec.ptr399, i64 1
  %129 = load i16, i16* %incdec.ptr399, align 2, !tbaa !308
  %conv422 = zext i16 %129 to i32
  %conv423 = and i32 %call419, 65535
  %sub424 = sub nsw i32 %conv422, %conv423
  store i32 %sub424, i32* %incdec.ptr403, align 8, !tbaa !13
  %add.ptr427 = getelementptr inbounds i16, i16* %call360, i64 12
  %130 = load i16, i16* %add.ptr427, align 2, !tbaa !308
  %conv428 = zext i16 %130 to i32
  %mul429 = mul nsw i32 %conv428, %cond43262726342647
  %add.ptr431 = getelementptr inbounds i16, i16* %call361, i64 12
  %131 = load i16, i16* %add.ptr431, align 2, !tbaa !308
  %conv432 = zext i16 %131 to i32
  %mul433 = mul nsw i32 %conv432, %cond6826362645
  %add434 = add nsw i32 %mul433, %mul429
  %132 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul435 = shl i32 %132, 1
  %add436 = add nsw i32 %add434, %mul435
  %133 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add437 = add nsw i32 %133, 1
  %shr438 = ashr i32 %add436, %add437
  %add440 = add nsw i32 %shr438, %conv284
  %call441 = tail call i32 @clip1a(i32 %add440) #8
  %134 = load i16, i16* %incdec.ptr421, align 2, !tbaa !308
  %conv443 = zext i16 %134 to i32
  %conv444 = and i32 %call441, 65535
  %sub445 = sub nsw i32 %conv443, %conv444
  store i32 %sub445, i32* %incdec.ptr425, align 4, !tbaa !13
  %135 = load i16*, i16** %arrayidx448, align 8, !tbaa !1
  %arrayidx450 = getelementptr inbounds i16, i16* %135, i64 %indvars.iv2758
  %136 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call451 = tail call i16* %136(i16** %36, i32 %add253, i32 %add267, i32 %shl149, i32 %shl146) #8
  %137 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call452 = tail call i16* %137(i16** %39, i32 %add248, i32 %add265, i32 %shl149, i32 %shl146) #8
  %138 = load i16, i16* %call451, align 2, !tbaa !308
  %conv454 = zext i16 %138 to i32
  %mul455 = mul nsw i32 %conv454, %cond43262726342647
  %139 = load i16, i16* %call452, align 2, !tbaa !308
  %conv457 = zext i16 %139 to i32
  %mul458 = mul nsw i32 %conv457, %cond6826362645
  %add459 = add nsw i32 %mul458, %mul455
  %140 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul460 = shl i32 %140, 1
  %add461 = add nsw i32 %add459, %mul460
  %141 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add462 = add nsw i32 %141, 1
  %shr463 = ashr i32 %add461, %add462
  %add465 = add nsw i32 %shr463, %conv284
  %call466 = tail call i32 @clip1a(i32 %add465) #8
  %incdec.ptr468 = getelementptr inbounds i16, i16* %arrayidx450, i64 1
  %142 = load i16, i16* %arrayidx450, align 2, !tbaa !308
  %conv469 = zext i16 %142 to i32
  %conv470 = and i32 %call466, 65535
  %sub471 = sub nsw i32 %conv469, %conv470
  store i32 %sub471, i32* %incdec.ptr446, align 16, !tbaa !13
  %add.ptr474 = getelementptr inbounds i16, i16* %call451, i64 4
  %143 = load i16, i16* %add.ptr474, align 2, !tbaa !308
  %conv475 = zext i16 %143 to i32
  %mul476 = mul nsw i32 %conv475, %cond43262726342647
  %add.ptr478 = getelementptr inbounds i16, i16* %call452, i64 4
  %144 = load i16, i16* %add.ptr478, align 2, !tbaa !308
  %conv479 = zext i16 %144 to i32
  %mul480 = mul nsw i32 %conv479, %cond6826362645
  %add481 = add nsw i32 %mul480, %mul476
  %145 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul482 = shl i32 %145, 1
  %add483 = add nsw i32 %add481, %mul482
  %146 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add484 = add nsw i32 %146, 1
  %shr485 = ashr i32 %add483, %add484
  %add487 = add nsw i32 %shr485, %conv284
  %call488 = tail call i32 @clip1a(i32 %add487) #8
  %incdec.ptr490 = getelementptr inbounds i16, i16* %incdec.ptr468, i64 1
  %147 = load i16, i16* %incdec.ptr468, align 2, !tbaa !308
  %conv491 = zext i16 %147 to i32
  %conv492 = and i32 %call488, 65535
  %sub493 = sub nsw i32 %conv491, %conv492
  store i32 %sub493, i32* %incdec.ptr472, align 4, !tbaa !13
  %add.ptr496 = getelementptr inbounds i16, i16* %call451, i64 8
  %148 = load i16, i16* %add.ptr496, align 2, !tbaa !308
  %conv497 = zext i16 %148 to i32
  %mul498 = mul nsw i32 %conv497, %cond43262726342647
  %add.ptr500 = getelementptr inbounds i16, i16* %call452, i64 8
  %149 = load i16, i16* %add.ptr500, align 2, !tbaa !308
  %conv501 = zext i16 %149 to i32
  %mul502 = mul nsw i32 %conv501, %cond6826362645
  %add503 = add nsw i32 %mul502, %mul498
  %150 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul504 = shl i32 %150, 1
  %add505 = add nsw i32 %add503, %mul504
  %151 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add506 = add nsw i32 %151, 1
  %shr507 = ashr i32 %add505, %add506
  %add509 = add nsw i32 %shr507, %conv284
  %call510 = tail call i32 @clip1a(i32 %add509) #8
  %incdec.ptr512 = getelementptr inbounds i16, i16* %incdec.ptr490, i64 1
  %152 = load i16, i16* %incdec.ptr490, align 2, !tbaa !308
  %conv513 = zext i16 %152 to i32
  %conv514 = and i32 %call510, 65535
  %sub515 = sub nsw i32 %conv513, %conv514
  store i32 %sub515, i32* %incdec.ptr494, align 8, !tbaa !13
  %add.ptr518 = getelementptr inbounds i16, i16* %call451, i64 12
  %153 = load i16, i16* %add.ptr518, align 2, !tbaa !308
  %conv519 = zext i16 %153 to i32
  %mul520 = mul nsw i32 %conv519, %cond43262726342647
  %add.ptr522 = getelementptr inbounds i16, i16* %call452, i64 12
  %154 = load i16, i16* %add.ptr522, align 2, !tbaa !308
  %conv523 = zext i16 %154 to i32
  %mul524 = mul nsw i32 %conv523, %cond6826362645
  %add525 = add nsw i32 %mul524, %mul520
  %155 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul526 = shl i32 %155, 1
  %add527 = add nsw i32 %add525, %mul526
  %156 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add528 = add nsw i32 %156, 1
  %shr529 = ashr i32 %add527, %add528
  %add531 = add nsw i32 %shr529, %conv284
  %call532 = tail call i32 @clip1a(i32 %add531) #8
  %157 = load i16, i16* %incdec.ptr512, align 2, !tbaa !308
  %conv534 = zext i16 %157 to i32
  %conv535 = and i32 %call532, 65535
  %sub536 = sub nsw i32 %conv534, %conv535
  store i32 %sub536, i32* %incdec.ptr516, align 4, !tbaa !13
  %158 = load i16*, i16** %arrayidx539, align 8, !tbaa !1
  %arrayidx541 = getelementptr inbounds i16, i16* %158, i64 %indvars.iv2758
  %159 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call542 = tail call i16* %159(i16** %36, i32 %add254, i32 %add267, i32 %shl149, i32 %shl146) #8
  %160 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call543 = tail call i16* %160(i16** %39, i32 %add249, i32 %add265, i32 %shl149, i32 %shl146) #8
  %161 = load i16, i16* %call542, align 2, !tbaa !308
  %conv545 = zext i16 %161 to i32
  %mul546 = mul nsw i32 %conv545, %cond43262726342647
  %162 = load i16, i16* %call543, align 2, !tbaa !308
  %conv548 = zext i16 %162 to i32
  %mul549 = mul nsw i32 %conv548, %cond6826362645
  %add550 = add nsw i32 %mul549, %mul546
  %163 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul551 = shl i32 %163, 1
  %add552 = add nsw i32 %add550, %mul551
  %164 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add553 = add nsw i32 %164, 1
  %shr554 = ashr i32 %add552, %add553
  %add556 = add nsw i32 %shr554, %conv284
  %call557 = tail call i32 @clip1a(i32 %add556) #8
  %incdec.ptr559 = getelementptr inbounds i16, i16* %arrayidx541, i64 1
  %165 = load i16, i16* %arrayidx541, align 2, !tbaa !308
  %conv560 = zext i16 %165 to i32
  %conv561 = and i32 %call557, 65535
  %sub562 = sub nsw i32 %conv560, %conv561
  store i32 %sub562, i32* %incdec.ptr537, align 16, !tbaa !13
  %add.ptr565 = getelementptr inbounds i16, i16* %call542, i64 4
  %166 = load i16, i16* %add.ptr565, align 2, !tbaa !308
  %conv566 = zext i16 %166 to i32
  %mul567 = mul nsw i32 %conv566, %cond43262726342647
  %add.ptr569 = getelementptr inbounds i16, i16* %call543, i64 4
  %167 = load i16, i16* %add.ptr569, align 2, !tbaa !308
  %conv570 = zext i16 %167 to i32
  %mul571 = mul nsw i32 %conv570, %cond6826362645
  %add572 = add nsw i32 %mul571, %mul567
  %168 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul573 = shl i32 %168, 1
  %add574 = add nsw i32 %add572, %mul573
  %169 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add575 = add nsw i32 %169, 1
  %shr576 = ashr i32 %add574, %add575
  %add578 = add nsw i32 %shr576, %conv284
  %call579 = tail call i32 @clip1a(i32 %add578) #8
  %incdec.ptr581 = getelementptr inbounds i16, i16* %incdec.ptr559, i64 1
  %170 = load i16, i16* %incdec.ptr559, align 2, !tbaa !308
  %conv582 = zext i16 %170 to i32
  %conv583 = and i32 %call579, 65535
  %sub584 = sub nsw i32 %conv582, %conv583
  store i32 %sub584, i32* %incdec.ptr563, align 4, !tbaa !13
  %add.ptr587 = getelementptr inbounds i16, i16* %call542, i64 8
  %171 = load i16, i16* %add.ptr587, align 2, !tbaa !308
  %conv588 = zext i16 %171 to i32
  %mul589 = mul nsw i32 %conv588, %cond43262726342647
  %add.ptr591 = getelementptr inbounds i16, i16* %call543, i64 8
  %172 = load i16, i16* %add.ptr591, align 2, !tbaa !308
  %conv592 = zext i16 %172 to i32
  %mul593 = mul nsw i32 %conv592, %cond6826362645
  %add594 = add nsw i32 %mul593, %mul589
  %173 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul595 = shl i32 %173, 1
  %add596 = add nsw i32 %add594, %mul595
  %174 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add597 = add nsw i32 %174, 1
  %shr598 = ashr i32 %add596, %add597
  %add600 = add nsw i32 %shr598, %conv284
  %call601 = tail call i32 @clip1a(i32 %add600) #8
  %incdec.ptr603 = getelementptr inbounds i16, i16* %incdec.ptr581, i64 1
  %175 = load i16, i16* %incdec.ptr581, align 2, !tbaa !308
  %conv604 = zext i16 %175 to i32
  %conv605 = and i32 %call601, 65535
  %sub606 = sub nsw i32 %conv604, %conv605
  store i32 %sub606, i32* %incdec.ptr585, align 8, !tbaa !13
  %add.ptr609 = getelementptr inbounds i16, i16* %call542, i64 12
  %176 = load i16, i16* %add.ptr609, align 2, !tbaa !308
  %conv610 = zext i16 %176 to i32
  %mul611 = mul nsw i32 %conv610, %cond43262726342647
  %add.ptr613 = getelementptr inbounds i16, i16* %call543, i64 12
  %177 = load i16, i16* %add.ptr613, align 2, !tbaa !308
  %conv614 = zext i16 %177 to i32
  %mul615 = mul nsw i32 %conv614, %cond6826362645
  %add616 = add nsw i32 %mul615, %mul611
  %178 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul617 = shl i32 %178, 1
  %add618 = add nsw i32 %add616, %mul617
  %179 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add619 = add nsw i32 %179, 1
  %shr620 = ashr i32 %add618, %add619
  %add622 = add nsw i32 %shr620, %conv284
  %call623 = tail call i32 @clip1a(i32 %add622) #8
  %180 = load i16, i16* %incdec.ptr603, align 2, !tbaa !308
  %conv625 = zext i16 %180 to i32
  %conv626 = and i32 %call623, 65535
  %sub627 = sub nsw i32 %conv625, %conv626
  store i32 %sub627, i32* %incdec.ptr607, align 4, !tbaa !13
  br i1 %tobool., label %if.else638, label %if.then629

if.then629:                                       ; preds = %for.body263
  %181 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %hadamard631 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %181, i64 0, i32 6
  %182 = load i32, i32* %hadamard631, align 8, !tbaa !338
  %call632 = call i32 @SATD(i32* nonnull %arraydecay, i32 %182)
  %add633 = add nsw i32 %call632, %mcost.12708
  %cmp634 = icmp sgt i32 %add633, %min_mcost.addr.02726
  br i1 %cmp634, label %if.end904.loopexit, label %for.inc658

if.else638:                                       ; preds = %for.body263
  %and = and i32 %88, 4
  %cmp639 = icmp sgt i64 %indvars.iv2758, 7
  %conv640 = zext i1 %cmp639 to i32
  %mul641 = shl nuw nsw i32 %conv640, 6
  %add642 = or i32 %mul641, %and
  %add643 = add nuw nsw i32 %add642, %mul244
  %add651 = or i32 %shl650, %add643
  %183 = zext i32 %add651 to i64
  %arrayidx653 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %183
  %184 = bitcast i32* %arrayidx653 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %184, i8* nonnull %47, i64 16, i32 4, i1 false)
  br i1 %cmp646, label %for.body648.1, label %for.inc658

for.inc658:                                       ; preds = %if.else638, %for.body648.1, %if.then629
  %mcost.2 = phi i32 [ %add633, %if.then629 ], [ %mcost.12708, %for.body648.1 ], [ %mcost.12708, %if.else638 ]
  %indvars.iv.next2759 = add nuw i64 %indvars.iv2758, 4
  %cmp261 = icmp slt i64 %indvars.iv.next2759, %44
  br i1 %cmp261, label %for.body263, label %for.inc896.loopexit

for.body665:                                      ; preds = %for.body665.lr.ph, %for.inc892
  %indvars.iv2754 = phi i64 [ 0, %for.body665.lr.ph ], [ %indvars.iv.next2755, %for.inc892 ]
  %mcost.32699 = phi i32 [ %mcost.02720, %for.body665.lr.ph ], [ %mcost.4, %for.inc892 ]
  %185 = trunc i64 %indvars.iv2754 to i32
  %shl666 = shl i32 %185, 2
  %add667 = add nsw i32 %shl666, %add232
  %add669 = add nsw i32 %shl666, %add125
  %186 = load i16*, i16** %arrayidx672, align 8, !tbaa !1
  %arrayidx674 = getelementptr inbounds i16, i16* %186, i64 %indvars.iv2754
  %187 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call675 = tail call i16* %187(i16** %36, i32 %add251, i32 %add669, i32 %shl149, i32 %shl146) #8
  %188 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call676 = tail call i16* %188(i16** %39, i32 %add246, i32 %add667, i32 %shl149, i32 %shl146) #8
  %189 = load i16, i16* %call675, align 2, !tbaa !308
  %190 = load i16, i16* %call676, align 2, !tbaa !308
  %add.ptr688 = getelementptr inbounds i16, i16* %call675, i64 4
  %191 = load i16, i16* %add.ptr688, align 2, !tbaa !308
  %add.ptr690 = getelementptr inbounds i16, i16* %call676, i64 4
  %192 = load i16, i16* %add.ptr690, align 2, !tbaa !308
  %add.ptr699 = getelementptr inbounds i16, i16* %call675, i64 8
  %193 = load i16, i16* %add.ptr699, align 2, !tbaa !308
  %add.ptr701 = getelementptr inbounds i16, i16* %call676, i64 8
  %194 = load i16, i16* %add.ptr701, align 2, !tbaa !308
  %195 = bitcast i16* %arrayidx674 to <4 x i16>*
  %196 = load <4 x i16>, <4 x i16>* %195, align 2, !tbaa !308
  %197 = zext <4 x i16> %196 to <4 x i32>
  %add.ptr709 = getelementptr inbounds i16, i16* %call675, i64 12
  %198 = load i16, i16* %add.ptr709, align 2, !tbaa !308
  %199 = insertelement <4 x i16> undef, i16 %189, i32 0
  %200 = insertelement <4 x i16> %199, i16 %191, i32 1
  %201 = insertelement <4 x i16> %200, i16 %193, i32 2
  %202 = insertelement <4 x i16> %201, i16 %198, i32 3
  %203 = zext <4 x i16> %202 to <4 x i32>
  %add.ptr711 = getelementptr inbounds i16, i16* %call676, i64 12
  %204 = load i16, i16* %add.ptr711, align 2, !tbaa !308
  %205 = insertelement <4 x i16> undef, i16 %190, i32 0
  %206 = insertelement <4 x i16> %205, i16 %192, i32 1
  %207 = insertelement <4 x i16> %206, i16 %194, i32 2
  %208 = insertelement <4 x i16> %207, i16 %204, i32 3
  %209 = zext <4 x i16> %208 to <4 x i32>
  %210 = add nuw nsw <4 x i32> %203, <i32 1, i32 1, i32 1, i32 1>
  %211 = add nuw nsw <4 x i32> %210, %209
  %212 = lshr <4 x i32> %211, <i32 1, i32 1, i32 1, i32 1>
  %213 = sub nsw <4 x i32> %197, %212
  store <4 x i32> %213, <4 x i32>* %55, align 16, !tbaa !13
  %214 = load i16*, i16** %arrayidx719, align 8, !tbaa !1
  %arrayidx721 = getelementptr inbounds i16, i16* %214, i64 %indvars.iv2754
  %215 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call722 = tail call i16* %215(i16** %36, i32 %add252, i32 %add669, i32 %shl149, i32 %shl146) #8
  %216 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call723 = tail call i16* %216(i16** %39, i32 %add247, i32 %add667, i32 %shl149, i32 %shl146) #8
  %217 = load i16, i16* %call722, align 2, !tbaa !308
  %218 = load i16, i16* %call723, align 2, !tbaa !308
  %add.ptr735 = getelementptr inbounds i16, i16* %call722, i64 4
  %219 = load i16, i16* %add.ptr735, align 2, !tbaa !308
  %add.ptr737 = getelementptr inbounds i16, i16* %call723, i64 4
  %220 = load i16, i16* %add.ptr737, align 2, !tbaa !308
  %add.ptr746 = getelementptr inbounds i16, i16* %call722, i64 8
  %221 = load i16, i16* %add.ptr746, align 2, !tbaa !308
  %add.ptr748 = getelementptr inbounds i16, i16* %call723, i64 8
  %222 = load i16, i16* %add.ptr748, align 2, !tbaa !308
  %223 = bitcast i16* %arrayidx721 to <4 x i16>*
  %224 = load <4 x i16>, <4 x i16>* %223, align 2, !tbaa !308
  %225 = zext <4 x i16> %224 to <4 x i32>
  %add.ptr756 = getelementptr inbounds i16, i16* %call722, i64 12
  %226 = load i16, i16* %add.ptr756, align 2, !tbaa !308
  %227 = insertelement <4 x i16> undef, i16 %217, i32 0
  %228 = insertelement <4 x i16> %227, i16 %219, i32 1
  %229 = insertelement <4 x i16> %228, i16 %221, i32 2
  %230 = insertelement <4 x i16> %229, i16 %226, i32 3
  %231 = zext <4 x i16> %230 to <4 x i32>
  %add.ptr758 = getelementptr inbounds i16, i16* %call723, i64 12
  %232 = load i16, i16* %add.ptr758, align 2, !tbaa !308
  %233 = insertelement <4 x i16> undef, i16 %218, i32 0
  %234 = insertelement <4 x i16> %233, i16 %220, i32 1
  %235 = insertelement <4 x i16> %234, i16 %222, i32 2
  %236 = insertelement <4 x i16> %235, i16 %232, i32 3
  %237 = zext <4 x i16> %236 to <4 x i32>
  %238 = add nuw nsw <4 x i32> %231, <i32 1, i32 1, i32 1, i32 1>
  %239 = add nuw nsw <4 x i32> %238, %237
  %240 = lshr <4 x i32> %239, <i32 1, i32 1, i32 1, i32 1>
  %241 = sub nsw <4 x i32> %225, %240
  store <4 x i32> %241, <4 x i32>* %56, align 16, !tbaa !13
  %242 = load i16*, i16** %arrayidx766, align 8, !tbaa !1
  %arrayidx768 = getelementptr inbounds i16, i16* %242, i64 %indvars.iv2754
  %243 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call769 = tail call i16* %243(i16** %36, i32 %add253, i32 %add669, i32 %shl149, i32 %shl146) #8
  %244 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call770 = tail call i16* %244(i16** %39, i32 %add248, i32 %add667, i32 %shl149, i32 %shl146) #8
  %245 = load i16, i16* %call769, align 2, !tbaa !308
  %246 = load i16, i16* %call770, align 2, !tbaa !308
  %add.ptr782 = getelementptr inbounds i16, i16* %call769, i64 4
  %247 = load i16, i16* %add.ptr782, align 2, !tbaa !308
  %add.ptr784 = getelementptr inbounds i16, i16* %call770, i64 4
  %248 = load i16, i16* %add.ptr784, align 2, !tbaa !308
  %add.ptr793 = getelementptr inbounds i16, i16* %call769, i64 8
  %249 = load i16, i16* %add.ptr793, align 2, !tbaa !308
  %add.ptr795 = getelementptr inbounds i16, i16* %call770, i64 8
  %250 = load i16, i16* %add.ptr795, align 2, !tbaa !308
  %251 = bitcast i16* %arrayidx768 to <4 x i16>*
  %252 = load <4 x i16>, <4 x i16>* %251, align 2, !tbaa !308
  %253 = zext <4 x i16> %252 to <4 x i32>
  %add.ptr803 = getelementptr inbounds i16, i16* %call769, i64 12
  %254 = load i16, i16* %add.ptr803, align 2, !tbaa !308
  %255 = insertelement <4 x i16> undef, i16 %245, i32 0
  %256 = insertelement <4 x i16> %255, i16 %247, i32 1
  %257 = insertelement <4 x i16> %256, i16 %249, i32 2
  %258 = insertelement <4 x i16> %257, i16 %254, i32 3
  %259 = zext <4 x i16> %258 to <4 x i32>
  %add.ptr805 = getelementptr inbounds i16, i16* %call770, i64 12
  %260 = load i16, i16* %add.ptr805, align 2, !tbaa !308
  %261 = insertelement <4 x i16> undef, i16 %246, i32 0
  %262 = insertelement <4 x i16> %261, i16 %248, i32 1
  %263 = insertelement <4 x i16> %262, i16 %250, i32 2
  %264 = insertelement <4 x i16> %263, i16 %260, i32 3
  %265 = zext <4 x i16> %264 to <4 x i32>
  %266 = add nuw nsw <4 x i32> %259, <i32 1, i32 1, i32 1, i32 1>
  %267 = add nuw nsw <4 x i32> %266, %265
  %268 = lshr <4 x i32> %267, <i32 1, i32 1, i32 1, i32 1>
  %269 = sub nsw <4 x i32> %253, %268
  store <4 x i32> %269, <4 x i32>* %57, align 16, !tbaa !13
  %270 = load i16*, i16** %arrayidx813, align 8, !tbaa !1
  %arrayidx815 = getelementptr inbounds i16, i16* %270, i64 %indvars.iv2754
  %271 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call816 = tail call i16* %271(i16** %36, i32 %add254, i32 %add669, i32 %shl149, i32 %shl146) #8
  %272 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call817 = tail call i16* %272(i16** %39, i32 %add249, i32 %add667, i32 %shl149, i32 %shl146) #8
  %273 = load i16, i16* %call816, align 2, !tbaa !308
  %274 = load i16, i16* %call817, align 2, !tbaa !308
  %add.ptr829 = getelementptr inbounds i16, i16* %call816, i64 4
  %275 = load i16, i16* %add.ptr829, align 2, !tbaa !308
  %add.ptr831 = getelementptr inbounds i16, i16* %call817, i64 4
  %276 = load i16, i16* %add.ptr831, align 2, !tbaa !308
  %add.ptr840 = getelementptr inbounds i16, i16* %call816, i64 8
  %277 = load i16, i16* %add.ptr840, align 2, !tbaa !308
  %add.ptr842 = getelementptr inbounds i16, i16* %call817, i64 8
  %278 = load i16, i16* %add.ptr842, align 2, !tbaa !308
  %279 = bitcast i16* %arrayidx815 to <4 x i16>*
  %280 = load <4 x i16>, <4 x i16>* %279, align 2, !tbaa !308
  %281 = zext <4 x i16> %280 to <4 x i32>
  %add.ptr850 = getelementptr inbounds i16, i16* %call816, i64 12
  %282 = load i16, i16* %add.ptr850, align 2, !tbaa !308
  %283 = insertelement <4 x i16> undef, i16 %273, i32 0
  %284 = insertelement <4 x i16> %283, i16 %275, i32 1
  %285 = insertelement <4 x i16> %284, i16 %277, i32 2
  %286 = insertelement <4 x i16> %285, i16 %282, i32 3
  %287 = zext <4 x i16> %286 to <4 x i32>
  %add.ptr852 = getelementptr inbounds i16, i16* %call817, i64 12
  %288 = load i16, i16* %add.ptr852, align 2, !tbaa !308
  %289 = insertelement <4 x i16> undef, i16 %274, i32 0
  %290 = insertelement <4 x i16> %289, i16 %276, i32 1
  %291 = insertelement <4 x i16> %290, i16 %278, i32 2
  %292 = insertelement <4 x i16> %291, i16 %288, i32 3
  %293 = zext <4 x i16> %292 to <4 x i32>
  %294 = add nuw nsw <4 x i32> %287, <i32 1, i32 1, i32 1, i32 1>
  %295 = add nuw nsw <4 x i32> %294, %293
  %296 = lshr <4 x i32> %295, <i32 1, i32 1, i32 1, i32 1>
  %297 = sub nsw <4 x i32> %281, %296
  store <4 x i32> %297, <4 x i32>* %58, align 16, !tbaa !13
  br i1 %tobool., label %if.else868, label %if.then859

if.then859:                                       ; preds = %for.body665
  %298 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %hadamard861 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %298, i64 0, i32 6
  %299 = load i32, i32* %hadamard861, align 8, !tbaa !338
  %call862 = call i32 @SATD(i32* nonnull %arraydecay, i32 %299)
  %add863 = add nsw i32 %call862, %mcost.32699
  %cmp864 = icmp sgt i32 %add863, %min_mcost.addr.02726
  br i1 %cmp864, label %if.end904.loopexit2807, label %for.inc892

if.else868:                                       ; preds = %for.body665
  %and869 = and i32 %185, 4
  %cmp870 = icmp sgt i64 %indvars.iv2754, 7
  %conv871 = zext i1 %cmp870 to i32
  %mul872 = shl nuw nsw i32 %conv871, 6
  %add873 = or i32 %mul872, %and869
  %add874 = add nuw nsw i32 %add873, %mul244
  %add882 = or i32 %shl881, %add874
  %300 = zext i32 %add882 to i64
  %arrayidx884 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %300
  %301 = bitcast i32* %arrayidx884 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %301, i8* nonnull %51, i64 16, i32 4, i1 false)
  br i1 %cmp877, label %for.body879.1, label %for.inc892

for.inc892:                                       ; preds = %if.else868, %for.body879.1, %if.then859
  %mcost.4 = phi i32 [ %add863, %if.then859 ], [ %mcost.32699, %for.body879.1 ], [ %mcost.32699, %if.else868 ]
  %indvars.iv.next2755 = add nuw i64 %indvars.iv2754, 4
  %cmp663 = icmp slt i64 %indvars.iv.next2755, %44
  br i1 %cmp663, label %for.body665, label %for.inc896.loopexit2808

for.inc896.loopexit:                              ; preds = %for.inc658
  br label %for.inc896

for.inc896.loopexit2808:                          ; preds = %for.inc892
  br label %for.inc896

for.inc896:                                       ; preds = %for.inc896.loopexit2808, %for.inc896.loopexit, %for.cond662.preheader, %for.cond260.preheader
  %mcost.5 = phi i32 [ %mcost.02720, %for.cond260.preheader ], [ %mcost.02720, %for.cond662.preheader ], [ %mcost.2, %for.inc896.loopexit ], [ %mcost.4, %for.inc896.loopexit2808 ]
  %indvars.iv.next2761 = add nuw i64 %indvars.iv2760, 4
  %add897 = add nuw nsw i32 %y0.02715, 4
  %cmp235 = icmp slt i64 %indvars.iv.next2761, %45
  br i1 %cmp235, label %for.body241, label %for.end898.loopexit

for.end898.loopexit:                              ; preds = %for.inc896
  br label %for.end898

for.end898:                                       ; preds = %for.end898.loopexit, %if.end231
  %mcost.0.lcssa = phi i32 [ %shr227, %if.end231 ], [ %mcost.5, %for.end898.loopexit ]
  br i1 %tobool., label %if.then900, label %if.end904

if.then900:                                       ; preds = %for.end898
  %call902 = call i32 @find_SATD(i32* nonnull %arraydecay901, i32 %blocktype)
  %add903 = add nsw i32 %call902, %mcost.0.lcssa
  br label %if.end904

if.end904.loopexit:                               ; preds = %if.then629
  br label %if.end904

if.end904.loopexit2807:                           ; preds = %if.then859
  br label %if.end904

if.end904:                                        ; preds = %if.end904.loopexit2807, %if.end904.loopexit, %if.then900, %for.end898
  %mcost.6 = phi i32 [ %add903, %if.then900 ], [ %mcost.0.lcssa, %for.end898 ], [ %add633, %if.end904.loopexit ], [ %add863, %if.end904.loopexit2807 ]
  %cmp905 = icmp slt i32 %mcost.6, %min_mcost.addr.02726
  %302 = trunc i64 %indvars.iv2771 to i32
  %pos.0.best_pos.0 = select i1 %cmp905, i32 %302, i32 %best_pos.02723
  %mcost.6.min_mcost.addr.0 = select i1 %cmp905, i32 %mcost.6, i32 %min_mcost.addr.02726
  br label %for.inc909

for.inc909:                                       ; preds = %if.end904, %for.body
  %best_pos.1 = phi i32 [ %best_pos.02723, %for.body ], [ %pos.0.best_pos.0, %if.end904 ]
  %min_mcost.addr.1 = phi i32 [ %min_mcost.addr.02726, %for.body ], [ %mcost.6.min_mcost.addr.0, %if.end904 ]
  %indvars.iv.next2772 = add nuw nsw i64 %indvars.iv2771, 1
  %exitcond2774 = icmp eq i64 %indvars.iv.next2772, %wide.trip.count2773
  br i1 %exitcond2774, label %for.end911, label %for.inc909.for.body_crit_edge

for.inc909.for.body_crit_edge:                    ; preds = %for.inc909
  %.pre = load i16, i16* %mv_x, align 2, !tbaa !308
  br label %for.body

for.end911:                                       ; preds = %for.inc909
  %tobool912 = icmp eq i32 %best_pos.1, 0
  br i1 %tobool912, label %if.end926, label %if.then913

if.then913:                                       ; preds = %for.end911
  %303 = load i16*, i16** @spiral_hpel_search_x, align 8, !tbaa !1
  %idxprom914 = sext i32 %best_pos.1 to i64
  %arrayidx915 = getelementptr inbounds i16, i16* %303, i64 %idxprom914
  %304 = load i16, i16* %arrayidx915, align 2, !tbaa !308
  %305 = load i16, i16* %mv_x, align 2, !tbaa !308
  %add918 = add i16 %305, %304
  store i16 %add918, i16* %mv_x, align 2, !tbaa !308
  %306 = load i16*, i16** @spiral_hpel_search_y, align 8, !tbaa !1
  %arrayidx921 = getelementptr inbounds i16, i16* %306, i64 %idxprom914
  %307 = load i16, i16* %arrayidx921, align 2, !tbaa !308
  %308 = load i16, i16* %mv_y, align 2, !tbaa !308
  %add924 = add i16 %308, %307
  store i16 %add924, i16* %mv_y, align 2, !tbaa !308
  br label %if.end926

if.end926:                                        ; preds = %if.end202, %for.end911, %if.then913
  %min_mcost.addr.0.lcssa2783 = phi i32 [ %min_mcost.addr.1, %for.end911 ], [ %min_mcost.addr.1, %if.then913 ], [ %min_mcost, %if.end202 ]
  %309 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %Transform8x8Mode927 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %309, i64 0, i32 144
  %310 = load i32, i32* %Transform8x8Mode927, align 4, !tbaa !339
  %tobool928 = icmp ne i32 %310, 0
  %or.cond1717 = and i1 %cmp120, %tobool928
  br i1 %or.cond1717, label %land.rhs932, label %land.end935

land.rhs932:                                      ; preds = %if.end926
  %hadamard933 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %309, i64 0, i32 6
  %311 = load i32, i32* %hadamard933, align 8, !tbaa !338
  %tobool934 = icmp ne i32 %311, 0
  br label %land.end935

land.end935:                                      ; preds = %land.rhs932, %if.end926
  %312 = phi i1 [ false, %if.end926 ], [ %tobool934, %land.rhs932 ]
  %313 = load i16, i16* %mv_x, align 2, !tbaa !308
  %conv937 = sext i16 %313 to i32
  %add938 = add nsw i32 %conv937, %shl
  %cmp939 = icmp sgt i32 %add938, 0
  %cmp944 = icmp slt i32 %add938, %shl153
  %or.cond2624 = and i1 %cmp939, %cmp944
  br i1 %or.cond2624, label %land.lhs.true946, label %if.end958

land.lhs.true946:                                 ; preds = %land.end935
  %314 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv947 = sext i16 %314 to i32
  %add948 = add nsw i32 %conv947, %shl7
  %cmp949 = icmp sgt i32 %add948, 0
  br i1 %cmp949, label %land.lhs.true951, label %if.end958

land.lhs.true951:                                 ; preds = %land.lhs.true946
  %cmp954 = icmp slt i32 %add948, %shl157
  %FastLine4X.UMVLine4X1721 = select i1 %cmp954, i16* (i16**, i32, i32, i32, i32)* @FastLine4X, i16* (i16**, i32, i32, i32, i32)* @UMVLine4X
  br label %if.end958

if.end958:                                        ; preds = %land.lhs.true951, %land.end935, %land.lhs.true946
  %UMVLine4X.sink1718 = phi i16* (i16**, i32, i32, i32, i32)* [ @UMVLine4X, %land.lhs.true946 ], [ @UMVLine4X, %land.end935 ], [ %FastLine4X.UMVLine4X1721, %land.lhs.true951 ]
  store i16* (i16**, i32, i32, i32, i32)* %UMVLine4X.sink1718, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %315 = load i16, i16* %s_mv_x, align 2, !tbaa !308
  %conv959 = sext i16 %315 to i32
  %add960 = add nsw i32 %conv959, %shl
  %cmp961 = icmp sgt i32 %add960, 0
  %cmp966 = icmp slt i32 %add960, %shl153
  %or.cond2625 = and i1 %cmp961, %cmp966
  br i1 %or.cond2625, label %land.lhs.true968, label %if.end980

land.lhs.true968:                                 ; preds = %if.end958
  %316 = load i16, i16* %s_mv_y, align 2, !tbaa !308
  %conv969 = sext i16 %316 to i32
  %add970 = add nsw i32 %conv969, %shl7
  %cmp971 = icmp sgt i32 %add970, 0
  br i1 %cmp971, label %land.lhs.true973, label %if.end980

land.lhs.true973:                                 ; preds = %land.lhs.true968
  %cmp976 = icmp slt i32 %add970, %shl157
  %FastLine4X.UMVLine4X1722 = select i1 %cmp976, i16* (i16**, i32, i32, i32, i32)* @FastLine4X, i16* (i16**, i32, i32, i32, i32)* @UMVLine4X
  br label %if.end980

if.end980:                                        ; preds = %land.lhs.true973, %if.end958, %land.lhs.true968
  %UMVLine4X.sink1719 = phi i16* (i16**, i32, i32, i32, i32)* [ @UMVLine4X, %land.lhs.true968 ], [ @UMVLine4X, %if.end958 ], [ %FastLine4X.UMVLine4X1722, %land.lhs.true973 ]
  store i16* (i16**, i32, i32, i32, i32)* %UMVLine4X.sink1719, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %cmp9822688 = icmp sgt i32 %search_pos4, 1
  br i1 %cmp9822688, label %for.body984.lr.ph, label %if.end1715

for.body984.lr.ph:                                ; preds = %if.end980
  %conv996 = sext i16 %pred_mv_x to i32
  %conv1001 = sext i16 %pred_mv_y to i32
  %cmp10152679 = icmp sgt i32 %4, 0
  %arraydecay1690 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 0
  %cmp10422672 = icmp sgt i32 %3, 0
  %arraydecay1049 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %sext2594 = shl i32 %shr2571, 16
  %conv1067 = ashr exact i32 %sext2594, 16
  %incdec.ptr1075 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 1
  %incdec.ptr1097 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 2
  %incdec.ptr1119 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 3
  %incdec.ptr1140 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 4
  %incdec.ptr1166 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 5
  %incdec.ptr1188 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 6
  %incdec.ptr1210 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 7
  %incdec.ptr1231 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 8
  %incdec.ptr1257 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 9
  %incdec.ptr1279 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 10
  %incdec.ptr1301 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 11
  %incdec.ptr1322 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 12
  %incdec.ptr1348 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 13
  %incdec.ptr1370 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 14
  %incdec.ptr1392 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 15
  %317 = sext i32 %3 to i64
  %318 = sext i32 %4 to i64
  %319 = bitcast [16 x i32]* %diff to i8*
  %320 = bitcast i32* %incdec.ptr1140 to i8*
  %321 = bitcast i32* %incdec.ptr1231 to i8*
  %322 = bitcast i32* %incdec.ptr1322 to i8*
  %323 = bitcast [16 x i32]* %diff to i8*
  %324 = bitcast i32* %incdec.ptr1140 to i8*
  %325 = bitcast i32* %incdec.ptr1231 to i8*
  %326 = bitcast i32* %incdec.ptr1322 to i8*
  %wide.trip.count = zext i32 %search_pos4 to i64
  %327 = bitcast [16 x i32]* %diff to <4 x i32>*
  %328 = bitcast i32* %incdec.ptr1140 to <4 x i32>*
  %329 = bitcast i32* %incdec.ptr1231 to <4 x i32>*
  %330 = bitcast i32* %incdec.ptr1322 to <4 x i32>*
  br label %for.body984

for.body984:                                      ; preds = %for.inc1698.for.body984_crit_edge, %for.body984.lr.ph
  %331 = phi i16 [ %313, %for.body984.lr.ph ], [ %.pre2775, %for.inc1698.for.body984_crit_edge ]
  %indvars.iv2750 = phi i64 [ 1, %for.body984.lr.ph ], [ %indvars.iv.next2751, %for.inc1698.for.body984_crit_edge ]
  %min_mcost.addr.22692 = phi i32 [ %min_mcost.addr.0.lcssa2783, %for.body984.lr.ph ], [ %min_mcost.addr.3, %for.inc1698.for.body984_crit_edge ]
  %best_pos.22689 = phi i32 [ 0, %for.body984.lr.ph ], [ %best_pos.3, %for.inc1698.for.body984_crit_edge ]
  %conv985 = sext i16 %331 to i32
  %332 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  %arrayidx987 = getelementptr inbounds i16, i16* %332, i64 %indvars.iv2750
  %333 = load i16, i16* %arrayidx987, align 2, !tbaa !308
  %conv988 = sext i16 %333 to i32
  %add989 = add nsw i32 %conv988, %conv985
  %334 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv990 = sext i16 %334 to i32
  %335 = load i16*, i16** @spiral_search_y, align 8, !tbaa !1
  %arrayidx992 = getelementptr inbounds i16, i16* %335, i64 %indvars.iv2750
  %336 = load i16, i16* %arrayidx992, align 2, !tbaa !308
  %conv993 = sext i16 %336 to i32
  %add994 = add nsw i32 %conv993, %conv990
  %337 = load i32*, i32** @mvbits, align 8, !tbaa !1
  %sub997 = sub nsw i32 %add989, %conv996
  %idxprom998 = sext i32 %sub997 to i64
  %arrayidx999 = getelementptr inbounds i32, i32* %337, i64 %idxprom998
  %338 = load i32, i32* %arrayidx999, align 4, !tbaa !13
  %sub1002 = sub nsw i32 %add994, %conv1001
  %idxprom1003 = sext i32 %sub1002 to i64
  %arrayidx1004 = getelementptr inbounds i32, i32* %337, i64 %idxprom1003
  %339 = load i32, i32* %arrayidx1004, align 4, !tbaa !13
  %add1005 = add nsw i32 %339, %338
  %mul1006 = mul nsw i32 %add1005, %lambda_factor
  %shr1007 = ashr i32 %mul1006, 16
  %cmp1008 = icmp slt i32 %shr1007, %min_mcost.addr.22692
  br i1 %cmp1008, label %if.end1011, label %for.inc1698

if.end1011:                                       ; preds = %for.body984
  %add1012 = add nsw i32 %add989, %shl
  %add1013 = add nsw i32 %add994, %shl7
  br i1 %cmp10152679, label %for.body1022.preheader, label %for.end1687

for.body1022.preheader:                           ; preds = %if.end1011
  br label %for.body1022

for.body1022:                                     ; preds = %for.body1022.preheader, %for.inc1685
  %indvars.iv2739 = phi i64 [ %indvars.iv.next2740, %for.inc1685 ], [ 0, %for.body1022.preheader ]
  %mcost.72686 = phi i32 [ %mcost.12, %for.inc1685 ], [ %shr1007, %for.body1022.preheader ]
  %y0.12681 = phi i32 [ %add1686, %for.inc1685 ], [ 0, %for.body1022.preheader ]
  %cmp1023 = icmp sgt i64 %indvars.iv2739, 7
  %mul1025 = select i1 %cmp1023, i32 %sub, i32 0
  %340 = trunc i64 %indvars.iv2739 to i32
  %shl1026 = shl i32 %340, 2
  %add1027 = add nsw i32 %add1013, %shl1026
  %add1028 = add nsw i32 %add1027, 4
  %add1029 = add nsw i32 %add1027, 8
  %add1030 = add nsw i32 %add1027, 12
  %add1032 = add nsw i32 %shl1026, %add127
  %add1033 = add nsw i32 %add1032, 4
  %add1034 = add nsw i32 %add1032, 8
  %add1035 = add nsw i32 %add1032, 12
  %341 = or i64 %indvars.iv2739, 1
  %342 = add nuw nsw i64 %341, 1
  %343 = or i64 %indvars.iv2739, 3
  br i1 %tobool20, label %for.cond1041.preheader, label %for.cond1451.preheader

for.cond1451.preheader:                           ; preds = %for.body1022
  br i1 %cmp10422672, label %for.body1454.lr.ph, label %for.inc1685

for.body1454.lr.ph:                               ; preds = %for.cond1451.preheader
  %arrayidx1461 = getelementptr inbounds i16*, i16** %orig_pic, i64 %indvars.iv2739
  %arrayidx1508 = getelementptr inbounds i16*, i16** %orig_pic, i64 %341
  %arrayidx1555 = getelementptr inbounds i16*, i16** %orig_pic, i64 %342
  %arrayidx1602 = getelementptr inbounds i16*, i16** %orig_pic, i64 %343
  %and1669 = shl i32 %340, 3
  %shl1670 = and i32 %and1669, 32
  %344 = or i64 %indvars.iv2739, 1
  %345 = or i32 %y0.12681, 3
  %346 = sext i32 %345 to i64
  %cmp1666 = icmp slt i64 %indvars.iv2739, %346
  %347 = trunc i64 %344 to i32
  %and1669.1 = shl i32 %347, 3
  %shl1670.1 = and i32 %and1669.1, 40
  %348 = add nuw nsw i64 %344, 1
  %349 = trunc i64 %348 to i32
  %and1669.2 = shl i32 %349, 3
  %shl1670.2 = and i32 %and1669.2, 48
  %350 = trunc i64 %indvars.iv2739 to i32
  %351 = shl i32 %350, 3
  %and1669.3 = and i32 %351, 32
  br label %for.body1454

for.cond1041.preheader:                           ; preds = %for.body1022
  br i1 %cmp10422672, label %for.body1044.lr.ph, label %for.inc1685

for.body1044.lr.ph:                               ; preds = %for.cond1041.preheader
  %arrayidx1051 = getelementptr inbounds i16*, i16** %orig_pic, i64 %indvars.iv2739
  %arrayidx1142 = getelementptr inbounds i16*, i16** %orig_pic, i64 %341
  %arrayidx1233 = getelementptr inbounds i16*, i16** %orig_pic, i64 %342
  %arrayidx1324 = getelementptr inbounds i16*, i16** %orig_pic, i64 %343
  %and1435 = shl i32 %340, 3
  %shl1436 = and i32 %and1435, 32
  %352 = or i64 %indvars.iv2739, 1
  %353 = or i32 %y0.12681, 3
  %354 = sext i32 %353 to i64
  %cmp1432 = icmp slt i64 %indvars.iv2739, %354
  %355 = trunc i64 %352 to i32
  %and1435.1 = shl i32 %355, 3
  %shl1436.1 = and i32 %and1435.1, 40
  %356 = add nuw nsw i64 %352, 1
  %357 = trunc i64 %356 to i32
  %and1435.2 = shl i32 %357, 3
  %shl1436.2 = and i32 %and1435.2, 48
  %358 = trunc i64 %indvars.iv2739 to i32
  %359 = shl i32 %358, 3
  %and1435.3 = and i32 %359, 32
  br label %for.body1044

for.body1044:                                     ; preds = %for.body1044.lr.ph, %for.inc1447
  %indvars.iv2737 = phi i64 [ 0, %for.body1044.lr.ph ], [ %indvars.iv.next2738, %for.inc1447 ]
  %mcost.82674 = phi i32 [ %mcost.72686, %for.body1044.lr.ph ], [ %mcost.9, %for.inc1447 ]
  %360 = trunc i64 %indvars.iv2737 to i32
  %shl1045 = shl i32 %360, 2
  %add1046 = add nsw i32 %shl1045, %add1012
  %add1048 = add nsw i32 %shl1045, %add125
  %361 = load i16*, i16** %arrayidx1051, align 8, !tbaa !1
  %arrayidx1053 = getelementptr inbounds i16, i16* %361, i64 %indvars.iv2737
  %362 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call1054 = tail call i16* %362(i16** %36, i32 %add1032, i32 %add1048, i32 %shl149, i32 %shl146) #8
  %363 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call1055 = tail call i16* %363(i16** %39, i32 %add1027, i32 %add1046, i32 %shl149, i32 %shl146) #8
  %364 = load i16, i16* %call1054, align 2, !tbaa !308
  %conv1057 = zext i16 %364 to i32
  %mul1058 = mul nsw i32 %conv1057, %cond43262726342647
  %365 = load i16, i16* %call1055, align 2, !tbaa !308
  %conv1060 = zext i16 %365 to i32
  %mul1061 = mul nsw i32 %conv1060, %cond6826362645
  %add1062 = add nsw i32 %mul1061, %mul1058
  %366 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1063 = shl i32 %366, 1
  %add1064 = add nsw i32 %add1062, %mul1063
  %367 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1065 = add nsw i32 %367, 1
  %shr1066 = ashr i32 %add1064, %add1065
  %add1068 = add nsw i32 %shr1066, %conv1067
  %call1069 = tail call i32 @clip1a(i32 %add1068) #8
  %incdec.ptr1071 = getelementptr inbounds i16, i16* %arrayidx1053, i64 1
  %368 = load i16, i16* %arrayidx1053, align 2, !tbaa !308
  %conv1072 = zext i16 %368 to i32
  %conv1073 = and i32 %call1069, 65535
  %sub1074 = sub nsw i32 %conv1072, %conv1073
  store i32 %sub1074, i32* %arraydecay1049, align 16, !tbaa !13
  %add.ptr1077 = getelementptr inbounds i16, i16* %call1054, i64 4
  %369 = load i16, i16* %add.ptr1077, align 2, !tbaa !308
  %conv1078 = zext i16 %369 to i32
  %mul1079 = mul nsw i32 %conv1078, %cond43262726342647
  %add.ptr1081 = getelementptr inbounds i16, i16* %call1055, i64 4
  %370 = load i16, i16* %add.ptr1081, align 2, !tbaa !308
  %conv1082 = zext i16 %370 to i32
  %mul1083 = mul nsw i32 %conv1082, %cond6826362645
  %add1084 = add nsw i32 %mul1083, %mul1079
  %371 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1085 = shl i32 %371, 1
  %add1086 = add nsw i32 %add1084, %mul1085
  %372 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1087 = add nsw i32 %372, 1
  %shr1088 = ashr i32 %add1086, %add1087
  %add1090 = add nsw i32 %shr1088, %conv1067
  %call1091 = tail call i32 @clip1a(i32 %add1090) #8
  %incdec.ptr1093 = getelementptr inbounds i16, i16* %incdec.ptr1071, i64 1
  %373 = load i16, i16* %incdec.ptr1071, align 2, !tbaa !308
  %conv1094 = zext i16 %373 to i32
  %conv1095 = and i32 %call1091, 65535
  %sub1096 = sub nsw i32 %conv1094, %conv1095
  store i32 %sub1096, i32* %incdec.ptr1075, align 4, !tbaa !13
  %add.ptr1099 = getelementptr inbounds i16, i16* %call1054, i64 8
  %374 = load i16, i16* %add.ptr1099, align 2, !tbaa !308
  %conv1100 = zext i16 %374 to i32
  %mul1101 = mul nsw i32 %conv1100, %cond43262726342647
  %add.ptr1103 = getelementptr inbounds i16, i16* %call1055, i64 8
  %375 = load i16, i16* %add.ptr1103, align 2, !tbaa !308
  %conv1104 = zext i16 %375 to i32
  %mul1105 = mul nsw i32 %conv1104, %cond6826362645
  %add1106 = add nsw i32 %mul1105, %mul1101
  %376 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1107 = shl i32 %376, 1
  %add1108 = add nsw i32 %add1106, %mul1107
  %377 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1109 = add nsw i32 %377, 1
  %shr1110 = ashr i32 %add1108, %add1109
  %add1112 = add nsw i32 %shr1110, %conv1067
  %call1113 = tail call i32 @clip1a(i32 %add1112) #8
  %incdec.ptr1115 = getelementptr inbounds i16, i16* %incdec.ptr1093, i64 1
  %378 = load i16, i16* %incdec.ptr1093, align 2, !tbaa !308
  %conv1116 = zext i16 %378 to i32
  %conv1117 = and i32 %call1113, 65535
  %sub1118 = sub nsw i32 %conv1116, %conv1117
  store i32 %sub1118, i32* %incdec.ptr1097, align 8, !tbaa !13
  %add.ptr1121 = getelementptr inbounds i16, i16* %call1054, i64 12
  %379 = load i16, i16* %add.ptr1121, align 2, !tbaa !308
  %conv1122 = zext i16 %379 to i32
  %mul1123 = mul nsw i32 %conv1122, %cond43262726342647
  %add.ptr1125 = getelementptr inbounds i16, i16* %call1055, i64 12
  %380 = load i16, i16* %add.ptr1125, align 2, !tbaa !308
  %conv1126 = zext i16 %380 to i32
  %mul1127 = mul nsw i32 %conv1126, %cond6826362645
  %add1128 = add nsw i32 %mul1127, %mul1123
  %381 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1129 = shl i32 %381, 1
  %add1130 = add nsw i32 %add1128, %mul1129
  %382 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1131 = add nsw i32 %382, 1
  %shr1132 = ashr i32 %add1130, %add1131
  %add1134 = add nsw i32 %shr1132, %conv1067
  %call1135 = tail call i32 @clip1a(i32 %add1134) #8
  %383 = load i16, i16* %incdec.ptr1115, align 2, !tbaa !308
  %conv1137 = zext i16 %383 to i32
  %conv1138 = and i32 %call1135, 65535
  %sub1139 = sub nsw i32 %conv1137, %conv1138
  store i32 %sub1139, i32* %incdec.ptr1119, align 4, !tbaa !13
  %384 = load i16*, i16** %arrayidx1142, align 8, !tbaa !1
  %arrayidx1144 = getelementptr inbounds i16, i16* %384, i64 %indvars.iv2737
  %385 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call1145 = tail call i16* %385(i16** %36, i32 %add1033, i32 %add1048, i32 %shl149, i32 %shl146) #8
  %386 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call1146 = tail call i16* %386(i16** %39, i32 %add1028, i32 %add1046, i32 %shl149, i32 %shl146) #8
  %387 = load i16, i16* %call1145, align 2, !tbaa !308
  %conv1148 = zext i16 %387 to i32
  %mul1149 = mul nsw i32 %conv1148, %cond43262726342647
  %388 = load i16, i16* %call1146, align 2, !tbaa !308
  %conv1151 = zext i16 %388 to i32
  %mul1152 = mul nsw i32 %conv1151, %cond6826362645
  %add1153 = add nsw i32 %mul1152, %mul1149
  %389 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1154 = shl i32 %389, 1
  %add1155 = add nsw i32 %add1153, %mul1154
  %390 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1156 = add nsw i32 %390, 1
  %shr1157 = ashr i32 %add1155, %add1156
  %add1159 = add nsw i32 %shr1157, %conv1067
  %call1160 = tail call i32 @clip1a(i32 %add1159) #8
  %incdec.ptr1162 = getelementptr inbounds i16, i16* %arrayidx1144, i64 1
  %391 = load i16, i16* %arrayidx1144, align 2, !tbaa !308
  %conv1163 = zext i16 %391 to i32
  %conv1164 = and i32 %call1160, 65535
  %sub1165 = sub nsw i32 %conv1163, %conv1164
  store i32 %sub1165, i32* %incdec.ptr1140, align 16, !tbaa !13
  %add.ptr1168 = getelementptr inbounds i16, i16* %call1145, i64 4
  %392 = load i16, i16* %add.ptr1168, align 2, !tbaa !308
  %conv1169 = zext i16 %392 to i32
  %mul1170 = mul nsw i32 %conv1169, %cond43262726342647
  %add.ptr1172 = getelementptr inbounds i16, i16* %call1146, i64 4
  %393 = load i16, i16* %add.ptr1172, align 2, !tbaa !308
  %conv1173 = zext i16 %393 to i32
  %mul1174 = mul nsw i32 %conv1173, %cond6826362645
  %add1175 = add nsw i32 %mul1174, %mul1170
  %394 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1176 = shl i32 %394, 1
  %add1177 = add nsw i32 %add1175, %mul1176
  %395 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1178 = add nsw i32 %395, 1
  %shr1179 = ashr i32 %add1177, %add1178
  %add1181 = add nsw i32 %shr1179, %conv1067
  %call1182 = tail call i32 @clip1a(i32 %add1181) #8
  %incdec.ptr1184 = getelementptr inbounds i16, i16* %incdec.ptr1162, i64 1
  %396 = load i16, i16* %incdec.ptr1162, align 2, !tbaa !308
  %conv1185 = zext i16 %396 to i32
  %conv1186 = and i32 %call1182, 65535
  %sub1187 = sub nsw i32 %conv1185, %conv1186
  store i32 %sub1187, i32* %incdec.ptr1166, align 4, !tbaa !13
  %add.ptr1190 = getelementptr inbounds i16, i16* %call1145, i64 8
  %397 = load i16, i16* %add.ptr1190, align 2, !tbaa !308
  %conv1191 = zext i16 %397 to i32
  %mul1192 = mul nsw i32 %conv1191, %cond43262726342647
  %add.ptr1194 = getelementptr inbounds i16, i16* %call1146, i64 8
  %398 = load i16, i16* %add.ptr1194, align 2, !tbaa !308
  %conv1195 = zext i16 %398 to i32
  %mul1196 = mul nsw i32 %conv1195, %cond6826362645
  %add1197 = add nsw i32 %mul1196, %mul1192
  %399 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1198 = shl i32 %399, 1
  %add1199 = add nsw i32 %add1197, %mul1198
  %400 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1200 = add nsw i32 %400, 1
  %shr1201 = ashr i32 %add1199, %add1200
  %add1203 = add nsw i32 %shr1201, %conv1067
  %call1204 = tail call i32 @clip1a(i32 %add1203) #8
  %incdec.ptr1206 = getelementptr inbounds i16, i16* %incdec.ptr1184, i64 1
  %401 = load i16, i16* %incdec.ptr1184, align 2, !tbaa !308
  %conv1207 = zext i16 %401 to i32
  %conv1208 = and i32 %call1204, 65535
  %sub1209 = sub nsw i32 %conv1207, %conv1208
  store i32 %sub1209, i32* %incdec.ptr1188, align 8, !tbaa !13
  %add.ptr1212 = getelementptr inbounds i16, i16* %call1145, i64 12
  %402 = load i16, i16* %add.ptr1212, align 2, !tbaa !308
  %conv1213 = zext i16 %402 to i32
  %mul1214 = mul nsw i32 %conv1213, %cond43262726342647
  %add.ptr1216 = getelementptr inbounds i16, i16* %call1146, i64 12
  %403 = load i16, i16* %add.ptr1216, align 2, !tbaa !308
  %conv1217 = zext i16 %403 to i32
  %mul1218 = mul nsw i32 %conv1217, %cond6826362645
  %add1219 = add nsw i32 %mul1218, %mul1214
  %404 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1220 = shl i32 %404, 1
  %add1221 = add nsw i32 %add1219, %mul1220
  %405 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1222 = add nsw i32 %405, 1
  %shr1223 = ashr i32 %add1221, %add1222
  %add1225 = add nsw i32 %shr1223, %conv1067
  %call1226 = tail call i32 @clip1a(i32 %add1225) #8
  %406 = load i16, i16* %incdec.ptr1206, align 2, !tbaa !308
  %conv1228 = zext i16 %406 to i32
  %conv1229 = and i32 %call1226, 65535
  %sub1230 = sub nsw i32 %conv1228, %conv1229
  store i32 %sub1230, i32* %incdec.ptr1210, align 4, !tbaa !13
  %407 = load i16*, i16** %arrayidx1233, align 8, !tbaa !1
  %arrayidx1235 = getelementptr inbounds i16, i16* %407, i64 %indvars.iv2737
  %408 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call1236 = tail call i16* %408(i16** %36, i32 %add1034, i32 %add1048, i32 %shl149, i32 %shl146) #8
  %409 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call1237 = tail call i16* %409(i16** %39, i32 %add1029, i32 %add1046, i32 %shl149, i32 %shl146) #8
  %410 = load i16, i16* %call1236, align 2, !tbaa !308
  %conv1239 = zext i16 %410 to i32
  %mul1240 = mul nsw i32 %conv1239, %cond43262726342647
  %411 = load i16, i16* %call1237, align 2, !tbaa !308
  %conv1242 = zext i16 %411 to i32
  %mul1243 = mul nsw i32 %conv1242, %cond6826362645
  %add1244 = add nsw i32 %mul1243, %mul1240
  %412 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1245 = shl i32 %412, 1
  %add1246 = add nsw i32 %add1244, %mul1245
  %413 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1247 = add nsw i32 %413, 1
  %shr1248 = ashr i32 %add1246, %add1247
  %add1250 = add nsw i32 %shr1248, %conv1067
  %call1251 = tail call i32 @clip1a(i32 %add1250) #8
  %incdec.ptr1253 = getelementptr inbounds i16, i16* %arrayidx1235, i64 1
  %414 = load i16, i16* %arrayidx1235, align 2, !tbaa !308
  %conv1254 = zext i16 %414 to i32
  %conv1255 = and i32 %call1251, 65535
  %sub1256 = sub nsw i32 %conv1254, %conv1255
  store i32 %sub1256, i32* %incdec.ptr1231, align 16, !tbaa !13
  %add.ptr1259 = getelementptr inbounds i16, i16* %call1236, i64 4
  %415 = load i16, i16* %add.ptr1259, align 2, !tbaa !308
  %conv1260 = zext i16 %415 to i32
  %mul1261 = mul nsw i32 %conv1260, %cond43262726342647
  %add.ptr1263 = getelementptr inbounds i16, i16* %call1237, i64 4
  %416 = load i16, i16* %add.ptr1263, align 2, !tbaa !308
  %conv1264 = zext i16 %416 to i32
  %mul1265 = mul nsw i32 %conv1264, %cond6826362645
  %add1266 = add nsw i32 %mul1265, %mul1261
  %417 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1267 = shl i32 %417, 1
  %add1268 = add nsw i32 %add1266, %mul1267
  %418 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1269 = add nsw i32 %418, 1
  %shr1270 = ashr i32 %add1268, %add1269
  %add1272 = add nsw i32 %shr1270, %conv1067
  %call1273 = tail call i32 @clip1a(i32 %add1272) #8
  %incdec.ptr1275 = getelementptr inbounds i16, i16* %incdec.ptr1253, i64 1
  %419 = load i16, i16* %incdec.ptr1253, align 2, !tbaa !308
  %conv1276 = zext i16 %419 to i32
  %conv1277 = and i32 %call1273, 65535
  %sub1278 = sub nsw i32 %conv1276, %conv1277
  store i32 %sub1278, i32* %incdec.ptr1257, align 4, !tbaa !13
  %add.ptr1281 = getelementptr inbounds i16, i16* %call1236, i64 8
  %420 = load i16, i16* %add.ptr1281, align 2, !tbaa !308
  %conv1282 = zext i16 %420 to i32
  %mul1283 = mul nsw i32 %conv1282, %cond43262726342647
  %add.ptr1285 = getelementptr inbounds i16, i16* %call1237, i64 8
  %421 = load i16, i16* %add.ptr1285, align 2, !tbaa !308
  %conv1286 = zext i16 %421 to i32
  %mul1287 = mul nsw i32 %conv1286, %cond6826362645
  %add1288 = add nsw i32 %mul1287, %mul1283
  %422 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1289 = shl i32 %422, 1
  %add1290 = add nsw i32 %add1288, %mul1289
  %423 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1291 = add nsw i32 %423, 1
  %shr1292 = ashr i32 %add1290, %add1291
  %add1294 = add nsw i32 %shr1292, %conv1067
  %call1295 = tail call i32 @clip1a(i32 %add1294) #8
  %incdec.ptr1297 = getelementptr inbounds i16, i16* %incdec.ptr1275, i64 1
  %424 = load i16, i16* %incdec.ptr1275, align 2, !tbaa !308
  %conv1298 = zext i16 %424 to i32
  %conv1299 = and i32 %call1295, 65535
  %sub1300 = sub nsw i32 %conv1298, %conv1299
  store i32 %sub1300, i32* %incdec.ptr1279, align 8, !tbaa !13
  %add.ptr1303 = getelementptr inbounds i16, i16* %call1236, i64 12
  %425 = load i16, i16* %add.ptr1303, align 2, !tbaa !308
  %conv1304 = zext i16 %425 to i32
  %mul1305 = mul nsw i32 %conv1304, %cond43262726342647
  %add.ptr1307 = getelementptr inbounds i16, i16* %call1237, i64 12
  %426 = load i16, i16* %add.ptr1307, align 2, !tbaa !308
  %conv1308 = zext i16 %426 to i32
  %mul1309 = mul nsw i32 %conv1308, %cond6826362645
  %add1310 = add nsw i32 %mul1309, %mul1305
  %427 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1311 = shl i32 %427, 1
  %add1312 = add nsw i32 %add1310, %mul1311
  %428 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1313 = add nsw i32 %428, 1
  %shr1314 = ashr i32 %add1312, %add1313
  %add1316 = add nsw i32 %shr1314, %conv1067
  %call1317 = tail call i32 @clip1a(i32 %add1316) #8
  %429 = load i16, i16* %incdec.ptr1297, align 2, !tbaa !308
  %conv1319 = zext i16 %429 to i32
  %conv1320 = and i32 %call1317, 65535
  %sub1321 = sub nsw i32 %conv1319, %conv1320
  store i32 %sub1321, i32* %incdec.ptr1301, align 4, !tbaa !13
  %430 = load i16*, i16** %arrayidx1324, align 8, !tbaa !1
  %arrayidx1326 = getelementptr inbounds i16, i16* %430, i64 %indvars.iv2737
  %431 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call1327 = tail call i16* %431(i16** %36, i32 %add1035, i32 %add1048, i32 %shl149, i32 %shl146) #8
  %432 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call1328 = tail call i16* %432(i16** %39, i32 %add1030, i32 %add1046, i32 %shl149, i32 %shl146) #8
  %433 = load i16, i16* %call1327, align 2, !tbaa !308
  %conv1330 = zext i16 %433 to i32
  %mul1331 = mul nsw i32 %conv1330, %cond43262726342647
  %434 = load i16, i16* %call1328, align 2, !tbaa !308
  %conv1333 = zext i16 %434 to i32
  %mul1334 = mul nsw i32 %conv1333, %cond6826362645
  %add1335 = add nsw i32 %mul1334, %mul1331
  %435 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1336 = shl i32 %435, 1
  %add1337 = add nsw i32 %add1335, %mul1336
  %436 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1338 = add nsw i32 %436, 1
  %shr1339 = ashr i32 %add1337, %add1338
  %add1341 = add nsw i32 %shr1339, %conv1067
  %call1342 = tail call i32 @clip1a(i32 %add1341) #8
  %incdec.ptr1344 = getelementptr inbounds i16, i16* %arrayidx1326, i64 1
  %437 = load i16, i16* %arrayidx1326, align 2, !tbaa !308
  %conv1345 = zext i16 %437 to i32
  %conv1346 = and i32 %call1342, 65535
  %sub1347 = sub nsw i32 %conv1345, %conv1346
  store i32 %sub1347, i32* %incdec.ptr1322, align 16, !tbaa !13
  %add.ptr1350 = getelementptr inbounds i16, i16* %call1327, i64 4
  %438 = load i16, i16* %add.ptr1350, align 2, !tbaa !308
  %conv1351 = zext i16 %438 to i32
  %mul1352 = mul nsw i32 %conv1351, %cond43262726342647
  %add.ptr1354 = getelementptr inbounds i16, i16* %call1328, i64 4
  %439 = load i16, i16* %add.ptr1354, align 2, !tbaa !308
  %conv1355 = zext i16 %439 to i32
  %mul1356 = mul nsw i32 %conv1355, %cond6826362645
  %add1357 = add nsw i32 %mul1356, %mul1352
  %440 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1358 = shl i32 %440, 1
  %add1359 = add nsw i32 %add1357, %mul1358
  %441 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1360 = add nsw i32 %441, 1
  %shr1361 = ashr i32 %add1359, %add1360
  %add1363 = add nsw i32 %shr1361, %conv1067
  %call1364 = tail call i32 @clip1a(i32 %add1363) #8
  %incdec.ptr1366 = getelementptr inbounds i16, i16* %incdec.ptr1344, i64 1
  %442 = load i16, i16* %incdec.ptr1344, align 2, !tbaa !308
  %conv1367 = zext i16 %442 to i32
  %conv1368 = and i32 %call1364, 65535
  %sub1369 = sub nsw i32 %conv1367, %conv1368
  store i32 %sub1369, i32* %incdec.ptr1348, align 4, !tbaa !13
  %add.ptr1372 = getelementptr inbounds i16, i16* %call1327, i64 8
  %443 = load i16, i16* %add.ptr1372, align 2, !tbaa !308
  %conv1373 = zext i16 %443 to i32
  %mul1374 = mul nsw i32 %conv1373, %cond43262726342647
  %add.ptr1376 = getelementptr inbounds i16, i16* %call1328, i64 8
  %444 = load i16, i16* %add.ptr1376, align 2, !tbaa !308
  %conv1377 = zext i16 %444 to i32
  %mul1378 = mul nsw i32 %conv1377, %cond6826362645
  %add1379 = add nsw i32 %mul1378, %mul1374
  %445 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1380 = shl i32 %445, 1
  %add1381 = add nsw i32 %add1379, %mul1380
  %446 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1382 = add nsw i32 %446, 1
  %shr1383 = ashr i32 %add1381, %add1382
  %add1385 = add nsw i32 %shr1383, %conv1067
  %call1386 = tail call i32 @clip1a(i32 %add1385) #8
  %incdec.ptr1388 = getelementptr inbounds i16, i16* %incdec.ptr1366, i64 1
  %447 = load i16, i16* %incdec.ptr1366, align 2, !tbaa !308
  %conv1389 = zext i16 %447 to i32
  %conv1390 = and i32 %call1386, 65535
  %sub1391 = sub nsw i32 %conv1389, %conv1390
  store i32 %sub1391, i32* %incdec.ptr1370, align 8, !tbaa !13
  %add.ptr1394 = getelementptr inbounds i16, i16* %call1327, i64 12
  %448 = load i16, i16* %add.ptr1394, align 2, !tbaa !308
  %conv1395 = zext i16 %448 to i32
  %mul1396 = mul nsw i32 %conv1395, %cond43262726342647
  %add.ptr1398 = getelementptr inbounds i16, i16* %call1328, i64 12
  %449 = load i16, i16* %add.ptr1398, align 2, !tbaa !308
  %conv1399 = zext i16 %449 to i32
  %mul1400 = mul nsw i32 %conv1399, %cond6826362645
  %add1401 = add nsw i32 %mul1400, %mul1396
  %450 = load i32, i32* @wp_luma_round, align 4, !tbaa !13
  %mul1402 = shl i32 %450, 1
  %add1403 = add nsw i32 %add1401, %mul1402
  %451 = load i32, i32* @luma_log_weight_denom, align 4, !tbaa !13
  %add1404 = add nsw i32 %451, 1
  %shr1405 = ashr i32 %add1403, %add1404
  %add1407 = add nsw i32 %shr1405, %conv1067
  %call1408 = tail call i32 @clip1a(i32 %add1407) #8
  %452 = load i16, i16* %incdec.ptr1388, align 2, !tbaa !308
  %conv1410 = zext i16 %452 to i32
  %conv1411 = and i32 %call1408, 65535
  %sub1412 = sub nsw i32 %conv1410, %conv1411
  store i32 %sub1412, i32* %incdec.ptr1392, align 4, !tbaa !13
  br i1 %312, label %if.else1423, label %if.then1414

if.then1414:                                      ; preds = %for.body1044
  %453 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %hadamard1416 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %453, i64 0, i32 6
  %454 = load i32, i32* %hadamard1416, align 8, !tbaa !338
  %call1417 = call i32 @SATD(i32* nonnull %arraydecay1049, i32 %454)
  %add1418 = add nsw i32 %call1417, %mcost.82674
  %cmp1419 = icmp sgt i32 %add1418, %min_mcost.addr.22692
  br i1 %cmp1419, label %if.end1693.loopexit, label %for.inc1447

if.else1423:                                      ; preds = %for.body1044
  %and1424 = and i32 %360, 4
  %cmp1425 = icmp sgt i64 %indvars.iv2737, 7
  %conv1426 = zext i1 %cmp1425 to i32
  %mul1427 = shl nuw nsw i32 %conv1426, 6
  %add1428 = or i32 %mul1427, %and1424
  %add1429 = add nuw nsw i32 %add1428, %mul1025
  %add1437 = or i32 %shl1436, %add1429
  %455 = zext i32 %add1437 to i64
  %arrayidx1439 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %455
  %456 = bitcast i32* %arrayidx1439 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %456, i8* nonnull %319, i64 16, i32 4, i1 false)
  br i1 %cmp1432, label %for.body1434.1, label %for.inc1447

for.inc1447:                                      ; preds = %if.else1423, %for.body1434.1, %if.then1414
  %mcost.9 = phi i32 [ %add1418, %if.then1414 ], [ %mcost.82674, %for.body1434.1 ], [ %mcost.82674, %if.else1423 ]
  %indvars.iv.next2738 = add nuw i64 %indvars.iv2737, 4
  %cmp1042 = icmp slt i64 %indvars.iv.next2738, %317
  br i1 %cmp1042, label %for.body1044, label %for.inc1685.loopexit

for.body1454:                                     ; preds = %for.body1454.lr.ph, %for.inc1681
  %indvars.iv = phi i64 [ 0, %for.body1454.lr.ph ], [ %indvars.iv.next, %for.inc1681 ]
  %mcost.102666 = phi i32 [ %mcost.72686, %for.body1454.lr.ph ], [ %mcost.11, %for.inc1681 ]
  %457 = trunc i64 %indvars.iv to i32
  %shl1455 = shl i32 %457, 2
  %add1456 = add nsw i32 %shl1455, %add1012
  %add1458 = add nsw i32 %shl1455, %add125
  %458 = load i16*, i16** %arrayidx1461, align 8, !tbaa !1
  %arrayidx1463 = getelementptr inbounds i16, i16* %458, i64 %indvars.iv
  %459 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call1464 = tail call i16* %459(i16** %36, i32 %add1032, i32 %add1458, i32 %shl149, i32 %shl146) #8
  %460 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call1465 = tail call i16* %460(i16** %39, i32 %add1027, i32 %add1456, i32 %shl149, i32 %shl146) #8
  %461 = load i16, i16* %call1464, align 2, !tbaa !308
  %462 = load i16, i16* %call1465, align 2, !tbaa !308
  %add.ptr1477 = getelementptr inbounds i16, i16* %call1464, i64 4
  %463 = load i16, i16* %add.ptr1477, align 2, !tbaa !308
  %add.ptr1479 = getelementptr inbounds i16, i16* %call1465, i64 4
  %464 = load i16, i16* %add.ptr1479, align 2, !tbaa !308
  %add.ptr1488 = getelementptr inbounds i16, i16* %call1464, i64 8
  %465 = load i16, i16* %add.ptr1488, align 2, !tbaa !308
  %add.ptr1490 = getelementptr inbounds i16, i16* %call1465, i64 8
  %466 = load i16, i16* %add.ptr1490, align 2, !tbaa !308
  %467 = bitcast i16* %arrayidx1463 to <4 x i16>*
  %468 = load <4 x i16>, <4 x i16>* %467, align 2, !tbaa !308
  %469 = zext <4 x i16> %468 to <4 x i32>
  %add.ptr1498 = getelementptr inbounds i16, i16* %call1464, i64 12
  %470 = load i16, i16* %add.ptr1498, align 2, !tbaa !308
  %471 = insertelement <4 x i16> undef, i16 %461, i32 0
  %472 = insertelement <4 x i16> %471, i16 %463, i32 1
  %473 = insertelement <4 x i16> %472, i16 %465, i32 2
  %474 = insertelement <4 x i16> %473, i16 %470, i32 3
  %475 = zext <4 x i16> %474 to <4 x i32>
  %add.ptr1500 = getelementptr inbounds i16, i16* %call1465, i64 12
  %476 = load i16, i16* %add.ptr1500, align 2, !tbaa !308
  %477 = insertelement <4 x i16> undef, i16 %462, i32 0
  %478 = insertelement <4 x i16> %477, i16 %464, i32 1
  %479 = insertelement <4 x i16> %478, i16 %466, i32 2
  %480 = insertelement <4 x i16> %479, i16 %476, i32 3
  %481 = zext <4 x i16> %480 to <4 x i32>
  %482 = add nuw nsw <4 x i32> %475, <i32 1, i32 1, i32 1, i32 1>
  %483 = add nuw nsw <4 x i32> %482, %481
  %484 = lshr <4 x i32> %483, <i32 1, i32 1, i32 1, i32 1>
  %485 = sub nsw <4 x i32> %469, %484
  store <4 x i32> %485, <4 x i32>* %327, align 16, !tbaa !13
  %486 = load i16*, i16** %arrayidx1508, align 8, !tbaa !1
  %arrayidx1510 = getelementptr inbounds i16, i16* %486, i64 %indvars.iv
  %487 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call1511 = tail call i16* %487(i16** %36, i32 %add1033, i32 %add1458, i32 %shl149, i32 %shl146) #8
  %488 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call1512 = tail call i16* %488(i16** %39, i32 %add1028, i32 %add1456, i32 %shl149, i32 %shl146) #8
  %489 = load i16, i16* %call1511, align 2, !tbaa !308
  %490 = load i16, i16* %call1512, align 2, !tbaa !308
  %add.ptr1524 = getelementptr inbounds i16, i16* %call1511, i64 4
  %491 = load i16, i16* %add.ptr1524, align 2, !tbaa !308
  %add.ptr1526 = getelementptr inbounds i16, i16* %call1512, i64 4
  %492 = load i16, i16* %add.ptr1526, align 2, !tbaa !308
  %add.ptr1535 = getelementptr inbounds i16, i16* %call1511, i64 8
  %493 = load i16, i16* %add.ptr1535, align 2, !tbaa !308
  %add.ptr1537 = getelementptr inbounds i16, i16* %call1512, i64 8
  %494 = load i16, i16* %add.ptr1537, align 2, !tbaa !308
  %495 = bitcast i16* %arrayidx1510 to <4 x i16>*
  %496 = load <4 x i16>, <4 x i16>* %495, align 2, !tbaa !308
  %497 = zext <4 x i16> %496 to <4 x i32>
  %add.ptr1545 = getelementptr inbounds i16, i16* %call1511, i64 12
  %498 = load i16, i16* %add.ptr1545, align 2, !tbaa !308
  %499 = insertelement <4 x i16> undef, i16 %489, i32 0
  %500 = insertelement <4 x i16> %499, i16 %491, i32 1
  %501 = insertelement <4 x i16> %500, i16 %493, i32 2
  %502 = insertelement <4 x i16> %501, i16 %498, i32 3
  %503 = zext <4 x i16> %502 to <4 x i32>
  %add.ptr1547 = getelementptr inbounds i16, i16* %call1512, i64 12
  %504 = load i16, i16* %add.ptr1547, align 2, !tbaa !308
  %505 = insertelement <4 x i16> undef, i16 %490, i32 0
  %506 = insertelement <4 x i16> %505, i16 %492, i32 1
  %507 = insertelement <4 x i16> %506, i16 %494, i32 2
  %508 = insertelement <4 x i16> %507, i16 %504, i32 3
  %509 = zext <4 x i16> %508 to <4 x i32>
  %510 = add nuw nsw <4 x i32> %503, <i32 1, i32 1, i32 1, i32 1>
  %511 = add nuw nsw <4 x i32> %510, %509
  %512 = lshr <4 x i32> %511, <i32 1, i32 1, i32 1, i32 1>
  %513 = sub nsw <4 x i32> %497, %512
  store <4 x i32> %513, <4 x i32>* %328, align 16, !tbaa !13
  %514 = load i16*, i16** %arrayidx1555, align 8, !tbaa !1
  %arrayidx1557 = getelementptr inbounds i16, i16* %514, i64 %indvars.iv
  %515 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call1558 = tail call i16* %515(i16** %36, i32 %add1034, i32 %add1458, i32 %shl149, i32 %shl146) #8
  %516 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call1559 = tail call i16* %516(i16** %39, i32 %add1029, i32 %add1456, i32 %shl149, i32 %shl146) #8
  %517 = load i16, i16* %call1558, align 2, !tbaa !308
  %518 = load i16, i16* %call1559, align 2, !tbaa !308
  %add.ptr1571 = getelementptr inbounds i16, i16* %call1558, i64 4
  %519 = load i16, i16* %add.ptr1571, align 2, !tbaa !308
  %add.ptr1573 = getelementptr inbounds i16, i16* %call1559, i64 4
  %520 = load i16, i16* %add.ptr1573, align 2, !tbaa !308
  %add.ptr1582 = getelementptr inbounds i16, i16* %call1558, i64 8
  %521 = load i16, i16* %add.ptr1582, align 2, !tbaa !308
  %add.ptr1584 = getelementptr inbounds i16, i16* %call1559, i64 8
  %522 = load i16, i16* %add.ptr1584, align 2, !tbaa !308
  %523 = bitcast i16* %arrayidx1557 to <4 x i16>*
  %524 = load <4 x i16>, <4 x i16>* %523, align 2, !tbaa !308
  %525 = zext <4 x i16> %524 to <4 x i32>
  %add.ptr1592 = getelementptr inbounds i16, i16* %call1558, i64 12
  %526 = load i16, i16* %add.ptr1592, align 2, !tbaa !308
  %527 = insertelement <4 x i16> undef, i16 %517, i32 0
  %528 = insertelement <4 x i16> %527, i16 %519, i32 1
  %529 = insertelement <4 x i16> %528, i16 %521, i32 2
  %530 = insertelement <4 x i16> %529, i16 %526, i32 3
  %531 = zext <4 x i16> %530 to <4 x i32>
  %add.ptr1594 = getelementptr inbounds i16, i16* %call1559, i64 12
  %532 = load i16, i16* %add.ptr1594, align 2, !tbaa !308
  %533 = insertelement <4 x i16> undef, i16 %518, i32 0
  %534 = insertelement <4 x i16> %533, i16 %520, i32 1
  %535 = insertelement <4 x i16> %534, i16 %522, i32 2
  %536 = insertelement <4 x i16> %535, i16 %532, i32 3
  %537 = zext <4 x i16> %536 to <4 x i32>
  %538 = add nuw nsw <4 x i32> %531, <i32 1, i32 1, i32 1, i32 1>
  %539 = add nuw nsw <4 x i32> %538, %537
  %540 = lshr <4 x i32> %539, <i32 1, i32 1, i32 1, i32 1>
  %541 = sub nsw <4 x i32> %525, %540
  store <4 x i32> %541, <4 x i32>* %329, align 16, !tbaa !13
  %542 = load i16*, i16** %arrayidx1602, align 8, !tbaa !1
  %arrayidx1604 = getelementptr inbounds i16, i16* %542, i64 %indvars.iv
  %543 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p1, align 8, !tbaa !1
  %call1605 = tail call i16* %543(i16** %36, i32 %add1035, i32 %add1458, i32 %shl149, i32 %shl146) #8
  %544 = load i16* (i16**, i32, i32, i32, i32)*, i16* (i16**, i32, i32, i32, i32)** @get_line_p2, align 8, !tbaa !1
  %call1606 = tail call i16* %544(i16** %39, i32 %add1030, i32 %add1456, i32 %shl149, i32 %shl146) #8
  %545 = load i16, i16* %call1605, align 2, !tbaa !308
  %546 = load i16, i16* %call1606, align 2, !tbaa !308
  %add.ptr1618 = getelementptr inbounds i16, i16* %call1605, i64 4
  %547 = load i16, i16* %add.ptr1618, align 2, !tbaa !308
  %add.ptr1620 = getelementptr inbounds i16, i16* %call1606, i64 4
  %548 = load i16, i16* %add.ptr1620, align 2, !tbaa !308
  %add.ptr1629 = getelementptr inbounds i16, i16* %call1605, i64 8
  %549 = load i16, i16* %add.ptr1629, align 2, !tbaa !308
  %add.ptr1631 = getelementptr inbounds i16, i16* %call1606, i64 8
  %550 = load i16, i16* %add.ptr1631, align 2, !tbaa !308
  %551 = bitcast i16* %arrayidx1604 to <4 x i16>*
  %552 = load <4 x i16>, <4 x i16>* %551, align 2, !tbaa !308
  %553 = zext <4 x i16> %552 to <4 x i32>
  %add.ptr1639 = getelementptr inbounds i16, i16* %call1605, i64 12
  %554 = load i16, i16* %add.ptr1639, align 2, !tbaa !308
  %555 = insertelement <4 x i16> undef, i16 %545, i32 0
  %556 = insertelement <4 x i16> %555, i16 %547, i32 1
  %557 = insertelement <4 x i16> %556, i16 %549, i32 2
  %558 = insertelement <4 x i16> %557, i16 %554, i32 3
  %559 = zext <4 x i16> %558 to <4 x i32>
  %add.ptr1641 = getelementptr inbounds i16, i16* %call1606, i64 12
  %560 = load i16, i16* %add.ptr1641, align 2, !tbaa !308
  %561 = insertelement <4 x i16> undef, i16 %546, i32 0
  %562 = insertelement <4 x i16> %561, i16 %548, i32 1
  %563 = insertelement <4 x i16> %562, i16 %550, i32 2
  %564 = insertelement <4 x i16> %563, i16 %560, i32 3
  %565 = zext <4 x i16> %564 to <4 x i32>
  %566 = add nuw nsw <4 x i32> %559, <i32 1, i32 1, i32 1, i32 1>
  %567 = add nuw nsw <4 x i32> %566, %565
  %568 = lshr <4 x i32> %567, <i32 1, i32 1, i32 1, i32 1>
  %569 = sub nsw <4 x i32> %553, %568
  store <4 x i32> %569, <4 x i32>* %330, align 16, !tbaa !13
  br i1 %312, label %if.else1657, label %if.then1648

if.then1648:                                      ; preds = %for.body1454
  %570 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %hadamard1650 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %570, i64 0, i32 6
  %571 = load i32, i32* %hadamard1650, align 8, !tbaa !338
  %call1651 = call i32 @SATD(i32* nonnull %arraydecay1049, i32 %571)
  %add1652 = add nsw i32 %call1651, %mcost.102666
  %cmp1653 = icmp sgt i32 %add1652, %min_mcost.addr.22692
  br i1 %cmp1653, label %if.end1693.loopexit2805, label %for.inc1681

if.else1657:                                      ; preds = %for.body1454
  %and1658 = and i32 %457, 4
  %cmp1659 = icmp sgt i64 %indvars.iv, 7
  %conv1660 = zext i1 %cmp1659 to i32
  %mul1661 = shl nuw nsw i32 %conv1660, 6
  %add1662 = or i32 %mul1661, %and1658
  %add1663 = add nuw nsw i32 %add1662, %mul1025
  %add1671 = or i32 %shl1670, %add1663
  %572 = zext i32 %add1671 to i64
  %arrayidx1673 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %572
  %573 = bitcast i32* %arrayidx1673 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %573, i8* nonnull %323, i64 16, i32 4, i1 false)
  br i1 %cmp1666, label %for.body1668.1, label %for.inc1681

for.inc1681:                                      ; preds = %if.else1657, %for.body1668.1, %if.then1648
  %mcost.11 = phi i32 [ %add1652, %if.then1648 ], [ %mcost.102666, %for.body1668.1 ], [ %mcost.102666, %if.else1657 ]
  %indvars.iv.next = add nuw i64 %indvars.iv, 4
  %cmp1452 = icmp slt i64 %indvars.iv.next, %317
  br i1 %cmp1452, label %for.body1454, label %for.inc1685.loopexit2806

for.inc1685.loopexit:                             ; preds = %for.inc1447
  br label %for.inc1685

for.inc1685.loopexit2806:                         ; preds = %for.inc1681
  br label %for.inc1685

for.inc1685:                                      ; preds = %for.inc1685.loopexit2806, %for.inc1685.loopexit, %for.cond1451.preheader, %for.cond1041.preheader
  %mcost.12 = phi i32 [ %mcost.72686, %for.cond1041.preheader ], [ %mcost.72686, %for.cond1451.preheader ], [ %mcost.9, %for.inc1685.loopexit ], [ %mcost.11, %for.inc1685.loopexit2806 ]
  %indvars.iv.next2740 = add nuw i64 %indvars.iv2739, 4
  %add1686 = add nuw nsw i32 %y0.12681, 4
  %cmp1015 = icmp slt i64 %indvars.iv.next2740, %318
  br i1 %cmp1015, label %for.body1022, label %for.end1687.loopexit

for.end1687.loopexit:                             ; preds = %for.inc1685
  br label %for.end1687

for.end1687:                                      ; preds = %for.end1687.loopexit, %if.end1011
  %mcost.7.lcssa = phi i32 [ %shr1007, %if.end1011 ], [ %mcost.12, %for.end1687.loopexit ]
  br i1 %312, label %if.then1689, label %if.end1693

if.then1689:                                      ; preds = %for.end1687
  %call1691 = call i32 @find_SATD(i32* nonnull %arraydecay1690, i32 %blocktype)
  %add1692 = add nsw i32 %call1691, %mcost.7.lcssa
  br label %if.end1693

if.end1693.loopexit:                              ; preds = %if.then1414
  br label %if.end1693

if.end1693.loopexit2805:                          ; preds = %if.then1648
  br label %if.end1693

if.end1693:                                       ; preds = %if.end1693.loopexit2805, %if.end1693.loopexit, %if.then1689, %for.end1687
  %mcost.13 = phi i32 [ %add1692, %if.then1689 ], [ %mcost.7.lcssa, %for.end1687 ], [ %add1418, %if.end1693.loopexit ], [ %add1652, %if.end1693.loopexit2805 ]
  %cmp1694 = icmp slt i32 %mcost.13, %min_mcost.addr.22692
  %574 = trunc i64 %indvars.iv2750 to i32
  %pos.1.best_pos.2 = select i1 %cmp1694, i32 %574, i32 %best_pos.22689
  %mcost.13.min_mcost.addr.2 = select i1 %cmp1694, i32 %mcost.13, i32 %min_mcost.addr.22692
  br label %for.inc1698

for.inc1698:                                      ; preds = %if.end1693, %for.body984
  %best_pos.3 = phi i32 [ %best_pos.22689, %for.body984 ], [ %pos.1.best_pos.2, %if.end1693 ]
  %min_mcost.addr.3 = phi i32 [ %min_mcost.addr.22692, %for.body984 ], [ %mcost.13.min_mcost.addr.2, %if.end1693 ]
  %indvars.iv.next2751 = add nuw nsw i64 %indvars.iv2750, 1
  %exitcond = icmp eq i64 %indvars.iv.next2751, %wide.trip.count
  br i1 %exitcond, label %for.end1700, label %for.inc1698.for.body984_crit_edge

for.inc1698.for.body984_crit_edge:                ; preds = %for.inc1698
  %.pre2775 = load i16, i16* %mv_x, align 2, !tbaa !308
  br label %for.body984

for.end1700:                                      ; preds = %for.inc1698
  %tobool1701 = icmp eq i32 %best_pos.3, 0
  br i1 %tobool1701, label %if.end1715, label %if.then1702

if.then1702:                                      ; preds = %for.end1700
  %575 = load i16*, i16** @spiral_search_x, align 8, !tbaa !1
  %idxprom1703 = sext i32 %best_pos.3 to i64
  %arrayidx1704 = getelementptr inbounds i16, i16* %575, i64 %idxprom1703
  %576 = load i16, i16* %arrayidx1704, align 2, !tbaa !308
  %577 = load i16, i16* %mv_x, align 2, !tbaa !308
  %add1707 = add i16 %577, %576
  store i16 %add1707, i16* %mv_x, align 2, !tbaa !308
  %578 = load i16*, i16** @spiral_search_y, align 8, !tbaa !1
  %arrayidx1710 = getelementptr inbounds i16, i16* %578, i64 %idxprom1703
  %579 = load i16, i16* %arrayidx1710, align 2, !tbaa !308
  %580 = load i16, i16* %mv_y, align 2, !tbaa !308
  %add1713 = add i16 %580, %579
  store i16 %add1713, i16* %mv_y, align 2, !tbaa !308
  br label %if.end1715

if.end1715:                                       ; preds = %if.end980, %for.end1700, %if.then1702
  %min_mcost.addr.2.lcssa2791 = phi i32 [ %min_mcost.addr.3, %for.end1700 ], [ %min_mcost.addr.3, %if.then1702 ], [ %min_mcost.addr.0.lcssa2783, %if.end980 ]
  call void @llvm.lifetime.end(i64 64, i8* nonnull %1) #8
  call void @llvm.lifetime.end(i64 1024, i8* nonnull %0) #8
  ret i32 %min_mcost.addr.2.lcssa2791

for.body1668.1:                                   ; preds = %if.else1657
  %add1671.1 = or i32 %shl1670.1, %add1663
  %581 = zext i32 %add1671.1 to i64
  %arrayidx1673.1 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %581
  %582 = bitcast i32* %arrayidx1673.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %582, i8* %324, i64 16, i32 4, i1 false)
  %add1671.2 = or i32 %shl1670.2, %add1663
  %583 = zext i32 %add1671.2 to i64
  %arrayidx1673.2 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %583
  %584 = bitcast i32* %arrayidx1673.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %584, i8* %325, i64 16, i32 4, i1 false)
  %shl1670.3 = or i32 %and1669.3, %add1663
  %add1671.3 = or i32 %shl1670.3, 24
  %585 = zext i32 %add1671.3 to i64
  %arrayidx1673.3 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %585
  %586 = bitcast i32* %arrayidx1673.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %586, i8* %326, i64 16, i32 4, i1 false)
  br label %for.inc1681

for.body1434.1:                                   ; preds = %if.else1423
  %add1437.1 = or i32 %shl1436.1, %add1429
  %587 = zext i32 %add1437.1 to i64
  %arrayidx1439.1 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %587
  %588 = bitcast i32* %arrayidx1439.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %588, i8* %320, i64 16, i32 4, i1 false)
  %add1437.2 = or i32 %shl1436.2, %add1429
  %589 = zext i32 %add1437.2 to i64
  %arrayidx1439.2 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %589
  %590 = bitcast i32* %arrayidx1439.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %590, i8* %321, i64 16, i32 4, i1 false)
  %shl1436.3 = or i32 %and1435.3, %add1429
  %add1437.3 = or i32 %shl1436.3, 24
  %591 = zext i32 %add1437.3 to i64
  %arrayidx1439.3 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %591
  %592 = bitcast i32* %arrayidx1439.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %592, i8* %322, i64 16, i32 4, i1 false)
  br label %for.inc1447

for.body879.1:                                    ; preds = %if.else868
  %add882.1 = or i32 %shl881.1, %add874
  %593 = zext i32 %add882.1 to i64
  %arrayidx884.1 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %593
  %594 = bitcast i32* %arrayidx884.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %594, i8* %52, i64 16, i32 4, i1 false)
  %add882.2 = or i32 %shl881.2, %add874
  %595 = zext i32 %add882.2 to i64
  %arrayidx884.2 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %595
  %596 = bitcast i32* %arrayidx884.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %596, i8* %53, i64 16, i32 4, i1 false)
  %shl881.3 = or i32 %and880.3, %add874
  %add882.3 = or i32 %shl881.3, 24
  %597 = zext i32 %add882.3 to i64
  %arrayidx884.3 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %597
  %598 = bitcast i32* %arrayidx884.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %598, i8* %54, i64 16, i32 4, i1 false)
  br label %for.inc892

for.body648.1:                                    ; preds = %if.else638
  %add651.1 = or i32 %shl650.1, %add643
  %599 = zext i32 %add651.1 to i64
  %arrayidx653.1 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %599
  %600 = bitcast i32* %arrayidx653.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %600, i8* %48, i64 16, i32 4, i1 false)
  %add651.2 = or i32 %shl650.2, %add643
  %601 = zext i32 %add651.2 to i64
  %arrayidx653.2 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %601
  %602 = bitcast i32* %arrayidx653.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %602, i8* %49, i64 16, i32 4, i1 false)
  %shl650.3 = or i32 %and649.3, %add643
  %add651.3 = or i32 %shl650.3, 24
  %603 = zext i32 %add651.3 to i64
  %arrayidx653.3 = getelementptr inbounds [256 x i32], [256 x i32]* %c_diff, i64 0, i64 %603
  %604 = bitcast i32* %arrayidx653.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %604, i8* %50, i64 16, i32 4, i1 false)
  br label %for.inc658
}

declare i32 @clip1a(i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @BPredPartitionCost(i32 %blocktype, i32 %block8x8, i16 signext %fw_ref, i16 signext %bw_ref, i32 %lambda_factor, i32 %list) local_unnamed_addr #0 {
entry:
  %diff = alloca [64 x i32], align 16
  %curr_blk = alloca [16 x [16 x i32]], align 16
  %0 = bitcast [64 x i32]* %diff to i8*
  call void @llvm.lifetime.start(i64 256, i8* nonnull %0) #8
  %1 = bitcast [16 x [16 x i32]]* %curr_blk to i8*
  call void @llvm.lifetime.start(i64 1024, i8* nonnull %1) #8
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %idxprom = sext i32 %blocktype to i64
  %arrayidx1 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 21, i64 %idxprom, i64 0
  %3 = load i32, i32* %arrayidx1, align 4, !tbaa !13
  %cmp = icmp slt i32 %3, 8
  %. = select i1 %cmp, i32 %3, i32 8
  %arrayidx9 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 21, i64 %idxprom, i64 1
  %4 = load i32, i32* %arrayidx9, align 4, !tbaa !13
  %cmp10 = icmp slt i32 %4, 8
  %cond18 = select i1 %cmp10, i32 %4, i32 8
  %cmp19 = icmp slt i32 %blocktype, 4
  %cond23 = select i1 %cmp19, i32 %blocktype, i32 4
  %idxprom24 = sext i32 %cond23 to i64
  %arrayidx26 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 22, i64 %idxprom24, i64 0
  %5 = load i32, i32* %arrayidx26, align 4, !tbaa !13
  %arrayidx30 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 22, i64 %idxprom24, i64 1
  %6 = load i32, i32* %arrayidx30, align 4, !tbaa !13
  %tobool = icmp ne i32 %list, 0
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i64 0, i32 77
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i64 0, i32 76
  %bipred_mv2.sink = select i1 %tobool, i16******* %bipred_mv1, i16******* %bipred_mv2
  %8 = load i16******, i16******* %bipred_mv2.sink, align 8, !tbaa !1
  %pred_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i64 0, i32 74
  %9 = load i16******, i16******* %pred_mv, align 8, !tbaa !342
  %idxprom45 = sext i32 %block8x8 to i64
  %arrayidx46 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.by0, i64 0, i64 %idxprom24, i64 %idxprom45
  %10 = load i32, i32* %arrayidx46, align 4, !tbaa !13
  %cmp51461 = icmp sgt i32 %6, 0
  br i1 %cmp51461, label %for.body.lr.ph, label %entry.for.end169_crit_edge

entry.for.end169_crit_edge:                       ; preds = %entry
  %.pre497 = add nsw i32 %10, %6
  br label %for.end169

for.body.lr.ph:                                   ; preds = %entry
  %arrayidx38 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 22, i64 %idxprom, i64 1
  %11 = load i32, i32* %arrayidx38, align 4, !tbaa !13
  %arrayidx34 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 22, i64 %idxprom, i64 0
  %12 = load i32, i32* %arrayidx34, align 4, !tbaa !13
  %arrayidx55 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.bx0, i64 0, i64 %idxprom24, i64 %idxprom45
  %13 = load i32, i32* %arrayidx55, align 4, !tbaa !13
  %cmp62456 = icmp sgt i32 %5, 0
  %add = add nsw i32 %10, %6
  %14 = load i32*, i32** @mvbits, align 8
  %idxprom69 = sext i16 %fw_ref to i64
  %idxprom119 = sext i16 %bw_ref to i64
  %15 = sext i32 %13 to i64
  %16 = sext i32 %12 to i64
  %17 = sext i32 %10 to i64
  %18 = sext i32 %11 to i64
  %19 = sext i32 %add to i64
  %add61 = add nsw i32 %13, %5
  %20 = sext i32 %add61 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc167
  %indvars.iv494 = phi i64 [ %17, %for.body.lr.ph ], [ %indvars.iv.next495, %for.inc167 ]
  %mvd_bits.0462 = phi i32 [ 0, %for.body.lr.ph ], [ %mvd_bits.1.lcssa, %for.inc167 ]
  br i1 %cmp62456, label %for.body63.lr.ph, label %for.inc167

for.body63.lr.ph:                                 ; preds = %for.body
  %arrayidx65 = getelementptr inbounds i16*****, i16****** %8, i64 %indvars.iv494
  %21 = load i16*****, i16****** %arrayidx65, align 8, !tbaa !1
  %arrayidx75 = getelementptr inbounds i16*****, i16****** %9, i64 %indvars.iv494
  %22 = load i16*****, i16****** %arrayidx75, align 8, !tbaa !1
  br label %for.body63

for.body63:                                       ; preds = %for.body63.lr.ph, %for.body63
  %indvars.iv492 = phi i64 [ %15, %for.body63.lr.ph ], [ %indvars.iv.next493, %for.body63 ]
  %mvd_bits.1457 = phi i32 [ %mvd_bits.0462, %for.body63.lr.ph ], [ %add165, %for.body63 ]
  %arrayidx67 = getelementptr inbounds i16****, i16***** %21, i64 %indvars.iv492
  %23 = load i16****, i16***** %arrayidx67, align 8, !tbaa !1
  %24 = load i16***, i16**** %23, align 8, !tbaa !1
  %arrayidx70 = getelementptr inbounds i16**, i16*** %24, i64 %idxprom69
  %25 = load i16**, i16*** %arrayidx70, align 8, !tbaa !1
  %arrayidx72 = getelementptr inbounds i16*, i16** %25, i64 %idxprom
  %26 = load i16*, i16** %arrayidx72, align 8, !tbaa !1
  %27 = load i16, i16* %26, align 2, !tbaa !308
  %conv = sext i16 %27 to i64
  %arrayidx77 = getelementptr inbounds i16****, i16***** %22, i64 %indvars.iv492
  %28 = load i16****, i16***** %arrayidx77, align 8, !tbaa !1
  %29 = load i16***, i16**** %28, align 8, !tbaa !1
  %arrayidx80 = getelementptr inbounds i16**, i16*** %29, i64 %idxprom69
  %30 = load i16**, i16*** %arrayidx80, align 8, !tbaa !1
  %arrayidx82 = getelementptr inbounds i16*, i16** %30, i64 %idxprom
  %31 = load i16*, i16** %arrayidx82, align 8, !tbaa !1
  %32 = load i16, i16* %31, align 2, !tbaa !308
  %conv84 = sext i16 %32 to i64
  %sub = sub nsw i64 %conv, %conv84
  %arrayidx86 = getelementptr inbounds i32, i32* %14, i64 %sub
  %33 = load i32, i32* %arrayidx86, align 4, !tbaa !13
  %add87 = add nsw i32 %33, %mvd_bits.1457
  %arrayidx97 = getelementptr inbounds i16, i16* %26, i64 1
  %34 = load i16, i16* %arrayidx97, align 2, !tbaa !308
  %conv98 = sext i16 %34 to i64
  %arrayidx108 = getelementptr inbounds i16, i16* %31, i64 1
  %35 = load i16, i16* %arrayidx108, align 2, !tbaa !308
  %conv109 = sext i16 %35 to i64
  %sub110 = sub nsw i64 %conv98, %conv109
  %arrayidx112 = getelementptr inbounds i32, i32* %14, i64 %sub110
  %36 = load i32, i32* %arrayidx112, align 4, !tbaa !13
  %add113 = add nsw i32 %add87, %36
  %arrayidx118 = getelementptr inbounds i16***, i16**** %23, i64 1
  %37 = load i16***, i16**** %arrayidx118, align 8, !tbaa !1
  %arrayidx120 = getelementptr inbounds i16**, i16*** %37, i64 %idxprom119
  %38 = load i16**, i16*** %arrayidx120, align 8, !tbaa !1
  %arrayidx122 = getelementptr inbounds i16*, i16** %38, i64 %idxprom
  %39 = load i16*, i16** %arrayidx122, align 8, !tbaa !1
  %40 = load i16, i16* %39, align 2, !tbaa !308
  %conv124 = sext i16 %40 to i64
  %arrayidx129 = getelementptr inbounds i16***, i16**** %28, i64 1
  %41 = load i16***, i16**** %arrayidx129, align 8, !tbaa !1
  %arrayidx131 = getelementptr inbounds i16**, i16*** %41, i64 %idxprom119
  %42 = load i16**, i16*** %arrayidx131, align 8, !tbaa !1
  %arrayidx133 = getelementptr inbounds i16*, i16** %42, i64 %idxprom
  %43 = load i16*, i16** %arrayidx133, align 8, !tbaa !1
  %44 = load i16, i16* %43, align 2, !tbaa !308
  %conv135 = sext i16 %44 to i64
  %sub136 = sub nsw i64 %conv124, %conv135
  %arrayidx138 = getelementptr inbounds i32, i32* %14, i64 %sub136
  %45 = load i32, i32* %arrayidx138, align 4, !tbaa !13
  %add139 = add nsw i32 %add113, %45
  %arrayidx149 = getelementptr inbounds i16, i16* %39, i64 1
  %46 = load i16, i16* %arrayidx149, align 2, !tbaa !308
  %conv150 = sext i16 %46 to i64
  %arrayidx160 = getelementptr inbounds i16, i16* %43, i64 1
  %47 = load i16, i16* %arrayidx160, align 2, !tbaa !308
  %conv161 = sext i16 %47 to i64
  %sub162 = sub nsw i64 %conv150, %conv161
  %arrayidx164 = getelementptr inbounds i32, i32* %14, i64 %sub162
  %48 = load i32, i32* %arrayidx164, align 4, !tbaa !13
  %add165 = add nsw i32 %add139, %48
  %indvars.iv.next493 = add i64 %indvars.iv492, %16
  %cmp62 = icmp slt i64 %indvars.iv.next493, %20
  br i1 %cmp62, label %for.body63, label %for.inc167.loopexit

for.inc167.loopexit:                              ; preds = %for.body63
  br label %for.inc167

for.inc167:                                       ; preds = %for.inc167.loopexit, %for.body
  %mvd_bits.1.lcssa = phi i32 [ %mvd_bits.0462, %for.body ], [ %add165, %for.inc167.loopexit ]
  %indvars.iv.next495 = add i64 %indvars.iv494, %18
  %cmp51 = icmp slt i64 %indvars.iv.next495, %19
  br i1 %cmp51, label %for.body, label %for.end169.loopexit

for.end169.loopexit:                              ; preds = %for.inc167
  br label %for.end169

for.end169:                                       ; preds = %for.end169.loopexit, %entry.for.end169_crit_edge
  %add179448.pre-phi = phi i32 [ %.pre497, %entry.for.end169_crit_edge ], [ %add, %for.end169.loopexit ]
  %mvd_bits.0.lcssa = phi i32 [ 0, %entry.for.end169_crit_edge ], [ %mvd_bits.1.lcssa, %for.end169.loopexit ]
  %mul = mul nsw i32 %mvd_bits.0.lcssa, %lambda_factor
  %shr = ashr i32 %mul, 16
  %cmp180449 = icmp slt i32 %10, %add179448.pre-phi
  br i1 %cmp180449, label %for.body182.lr.ph, label %for.end247

for.body182.lr.ph:                                ; preds = %for.end169
  %arrayidx187 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.bx0, i64 0, i64 %idxprom24, i64 %idxprom45
  %49 = load i32, i32* %arrayidx187, align 4, !tbaa !13
  %cmp194443 = icmp sgt i32 %5, 0
  %cmp237 = icmp sgt i32 %blocktype, 4
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 0
  %50 = sext i32 %49 to i64
  %51 = sext i32 %10 to i64
  %add193 = add nsw i32 %49, %5
  %52 = sext i32 %add193 to i64
  %53 = sext i32 %add179448.pre-phi to i64
  %54 = bitcast [64 x i32]* %diff to <4 x i32>*
  %arrayidx229.1 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 4
  %55 = bitcast i32* %arrayidx229.1 to <4 x i32>*
  %arrayidx229.2 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 8
  %56 = bitcast i32* %arrayidx229.2 to <4 x i32>*
  %arrayidx229.3 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 12
  %57 = bitcast i32* %arrayidx229.3 to <4 x i32>*
  br label %for.body182

for.body182:                                      ; preds = %for.body182.lr.ph, %for.inc244
  %58 = phi %struct.InputParameters* [ %2, %for.body182.lr.ph ], [ %119, %for.inc244 ]
  %59 = phi %struct.ImageParameters* [ %7, %for.body182.lr.ph ], [ %120, %for.inc244 ]
  %indvars.iv490 = phi i64 [ 0, %for.body182.lr.ph ], [ %indvars.iv.next491, %for.inc244 ]
  %indvars.iv488 = phi i64 [ %51, %for.body182.lr.ph ], [ %indvars.iv.next489, %for.inc244 ]
  %mcost.0450 = phi i32 [ %shr, %for.body182.lr.ph ], [ %mcost.1.lcssa, %for.inc244 ]
  %60 = trunc i64 %indvars.iv488 to i32
  %shl = shl i32 %60, 2
  br i1 %cmp194443, label %for.body196.preheader, label %for.inc244

for.body196.preheader:                            ; preds = %for.body182
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %59, i64 0, i32 38
  %61 = load i32, i32* %opix_y, align 4, !tbaa !312
  %add183 = add nsw i32 %61, %shl
  %62 = sext i32 %shl to i64
  %63 = sext i32 %add183 to i64
  %64 = add nsw i64 %63, 1
  %65 = or i64 %62, 1
  %66 = or i64 %indvars.iv490, 1
  %67 = add nsw i64 %63, 2
  %68 = or i64 %62, 2
  %69 = or i64 %indvars.iv490, 2
  %70 = add nsw i64 %63, 3
  %71 = or i64 %62, 3
  %72 = or i64 %indvars.iv490, 3
  br label %for.body196

for.body196:                                      ; preds = %for.body196.preheader, %for.inc240
  %73 = phi %struct.ImageParameters* [ %59, %for.body196.preheader ], [ %77, %for.inc240 ]
  %indvars.iv486 = phi i64 [ 0, %for.body196.preheader ], [ %indvars.iv.next487, %for.inc240 ]
  %indvars.iv484 = phi i64 [ %50, %for.body196.preheader ], [ %indvars.iv.next485, %for.inc240 ]
  %mcost.1444 = phi i32 [ %mcost.0450, %for.body196.preheader ], [ %mcost.2, %for.inc240 ]
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i64 0, i32 37
  %74 = load i32, i32* %opix_x, align 8, !tbaa !311
  %75 = trunc i64 %indvars.iv484 to i32
  %shl197 = shl i32 %75, 2
  %add198 = add nsw i32 %74, %shl197
  tail call void @LumaPrediction4x4Bi(i32 %shl197, i32 %shl, i32 2, i32 %blocktype, i32 %blocktype, i16 signext %fw_ref, i16 signext %bw_ref, i32 %list) #8
  %76 = load i16**, i16*** @imgY_org, align 8, !tbaa !1
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %78 = sext i32 %shl197 to i64
  %79 = sext i32 %add198 to i64
  br label %for.cond203.preheader

for.cond203.preheader:                            ; preds = %for.body196
  %arrayidx209 = getelementptr inbounds i16*, i16** %76, i64 %63
  %80 = load i16*, i16** %arrayidx209, align 8, !tbaa !1
  %arrayidx212 = getelementptr inbounds i16, i16* %80, i64 %79
  %arrayidx219 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i64 0, i32 45, i64 %62, i64 %78
  %arrayidx227 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv490, i64 %indvars.iv486
  %81 = bitcast i16* %arrayidx212 to <4 x i16>*
  %82 = load <4 x i16>, <4 x i16>* %81, align 2, !tbaa !308
  %83 = zext <4 x i16> %82 to <4 x i32>
  %84 = bitcast i16* %arrayidx219 to <4 x i16>*
  %85 = load <4 x i16>, <4 x i16>* %84, align 2, !tbaa !308
  %86 = zext <4 x i16> %85 to <4 x i32>
  %87 = sub nsw <4 x i32> %83, %86
  %88 = bitcast i32* %arrayidx227 to <4 x i32>*
  store <4 x i32> %87, <4 x i32>* %88, align 16, !tbaa !13
  store <4 x i32> %87, <4 x i32>* %54, align 16, !tbaa !13
  %arrayidx209.1 = getelementptr inbounds i16*, i16** %76, i64 %64
  %89 = load i16*, i16** %arrayidx209.1, align 8, !tbaa !1
  %arrayidx212.1 = getelementptr inbounds i16, i16* %89, i64 %79
  %arrayidx219.1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i64 0, i32 45, i64 %65, i64 %78
  %arrayidx227.1 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %66, i64 %indvars.iv486
  %90 = bitcast i16* %arrayidx212.1 to <4 x i16>*
  %91 = load <4 x i16>, <4 x i16>* %90, align 2, !tbaa !308
  %92 = zext <4 x i16> %91 to <4 x i32>
  %93 = bitcast i16* %arrayidx219.1 to <4 x i16>*
  %94 = load <4 x i16>, <4 x i16>* %93, align 2, !tbaa !308
  %95 = zext <4 x i16> %94 to <4 x i32>
  %96 = sub nsw <4 x i32> %92, %95
  %97 = bitcast i32* %arrayidx227.1 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %97, align 16, !tbaa !13
  store <4 x i32> %96, <4 x i32>* %55, align 16, !tbaa !13
  %arrayidx209.2 = getelementptr inbounds i16*, i16** %76, i64 %67
  %98 = load i16*, i16** %arrayidx209.2, align 8, !tbaa !1
  %arrayidx212.2 = getelementptr inbounds i16, i16* %98, i64 %79
  %arrayidx219.2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i64 0, i32 45, i64 %68, i64 %78
  %arrayidx227.2 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %69, i64 %indvars.iv486
  %99 = bitcast i16* %arrayidx212.2 to <4 x i16>*
  %100 = load <4 x i16>, <4 x i16>* %99, align 2, !tbaa !308
  %101 = zext <4 x i16> %100 to <4 x i32>
  %102 = bitcast i16* %arrayidx219.2 to <4 x i16>*
  %103 = load <4 x i16>, <4 x i16>* %102, align 2, !tbaa !308
  %104 = zext <4 x i16> %103 to <4 x i32>
  %105 = sub nsw <4 x i32> %101, %104
  %106 = bitcast i32* %arrayidx227.2 to <4 x i32>*
  store <4 x i32> %105, <4 x i32>* %106, align 16, !tbaa !13
  store <4 x i32> %105, <4 x i32>* %56, align 16, !tbaa !13
  %arrayidx209.3 = getelementptr inbounds i16*, i16** %76, i64 %70
  %107 = load i16*, i16** %arrayidx209.3, align 8, !tbaa !1
  %arrayidx212.3 = getelementptr inbounds i16, i16* %107, i64 %79
  %arrayidx219.3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i64 0, i32 45, i64 %71, i64 %78
  %arrayidx227.3 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %72, i64 %indvars.iv486
  %108 = bitcast i16* %arrayidx212.3 to <4 x i16>*
  %109 = load <4 x i16>, <4 x i16>* %108, align 2, !tbaa !308
  %110 = zext <4 x i16> %109 to <4 x i32>
  %111 = bitcast i16* %arrayidx219.3 to <4 x i16>*
  %112 = load <4 x i16>, <4 x i16>* %111, align 2, !tbaa !308
  %113 = zext <4 x i16> %112 to <4 x i32>
  %114 = sub nsw <4 x i32> %110, %113
  %115 = bitcast i32* %arrayidx227.3 to <4 x i32>*
  store <4 x i32> %114, <4 x i32>* %115, align 16, !tbaa !13
  store <4 x i32> %114, <4 x i32>* %57, align 16, !tbaa !13
  %116 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %Transform8x8Mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i64 0, i32 144
  %117 = load i32, i32* %Transform8x8Mode, align 4, !tbaa !339
  %tobool236 = icmp eq i32 %117, 0
  %or.cond = or i1 %cmp237, %tobool236
  br i1 %or.cond, label %if.then, label %for.inc240

if.then:                                          ; preds = %for.cond203.preheader
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i64 0, i32 6
  %118 = load i32, i32* %hadamard, align 8, !tbaa !338
  %call = call i32 @SATD(i32* nonnull %arraydecay, i32 %118)
  %add239 = add nsw i32 %call, %mcost.1444
  br label %for.inc240

for.inc240:                                       ; preds = %if.then, %for.cond203.preheader
  %mcost.2 = phi i32 [ %add239, %if.then ], [ %mcost.1444, %for.cond203.preheader ]
  %indvars.iv.next487 = add nuw i64 %indvars.iv486, 4
  %indvars.iv.next485 = add i64 %indvars.iv484, 1
  %cmp194 = icmp slt i64 %indvars.iv.next485, %52
  br i1 %cmp194, label %for.body196, label %for.inc244.loopexit

for.inc244.loopexit:                              ; preds = %for.inc240
  br label %for.inc244

for.inc244:                                       ; preds = %for.inc244.loopexit, %for.body182
  %119 = phi %struct.InputParameters* [ %58, %for.body182 ], [ %116, %for.inc244.loopexit ]
  %120 = phi %struct.ImageParameters* [ %59, %for.body182 ], [ %77, %for.inc244.loopexit ]
  %mcost.1.lcssa = phi i32 [ %mcost.0450, %for.body182 ], [ %mcost.2, %for.inc244.loopexit ]
  %indvars.iv.next491 = add nuw i64 %indvars.iv490, 4
  %indvars.iv.next489 = add i64 %indvars.iv488, 1
  %cmp180 = icmp slt i64 %indvars.iv.next489, %53
  br i1 %cmp180, label %for.body182, label %for.end247.loopexit

for.end247.loopexit:                              ; preds = %for.inc244
  br label %for.end247

for.end247:                                       ; preds = %for.end247.loopexit, %for.end169
  %121 = phi %struct.InputParameters* [ %2, %for.end169 ], [ %119, %for.end247.loopexit ]
  %mcost.0.lcssa = phi i32 [ %shr, %for.end169 ], [ %mcost.1.lcssa, %for.end247.loopexit ]
  %Transform8x8Mode248 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %121, i64 0, i32 144
  %122 = load i32, i32* %Transform8x8Mode248, align 4, !tbaa !339
  %tobool249 = icmp ne i32 %122, 0
  %cmp250 = icmp slt i32 %blocktype, 5
  %or.cond295 = and i1 %cmp250, %tobool249
  br i1 %or.cond295, label %for.cond253.preheader, label %if.end294

for.cond253.preheader:                            ; preds = %for.end247
  %arrayidx257432 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %121, i64 0, i32 21, i64 %idxprom24, i64 1
  %123 = load i32, i32* %arrayidx257432, align 4, !tbaa !13
  %cmp258433 = icmp sgt i32 %123, 0
  br i1 %cmp258433, label %for.cond261.preheader.lr.ph, label %if.end294

for.cond261.preheader.lr.ph:                      ; preds = %for.cond253.preheader
  %arraydecay284 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 0
  %124 = add i32 %cond18, 1
  %125 = sext i32 %124 to i64
  %126 = add nsw i64 %125, -1
  %127 = add i32 %., 1
  %128 = sext i32 %127 to i64
  %129 = add nsw i64 %128, -1
  %arrayidx265428.phi.trans.insert = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %121, i64 0, i32 21, i64 %idxprom24, i64 0
  %.pre496 = load i32, i32* %arrayidx265428.phi.trans.insert, align 4, !tbaa !13
  %130 = bitcast [64 x i32]* %diff to i8*
  %arrayidx275.1 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 8
  %131 = bitcast i32* %arrayidx275.1 to i8*
  %arrayidx275.2 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 16
  %132 = bitcast i32* %arrayidx275.2 to i8*
  %arrayidx275.3 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 24
  %133 = bitcast i32* %arrayidx275.3 to i8*
  %arrayidx275.4 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 32
  %134 = bitcast i32* %arrayidx275.4 to i8*
  %arrayidx275.5 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 40
  %135 = bitcast i32* %arrayidx275.5 to i8*
  %arrayidx275.6 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 48
  %136 = bitcast i32* %arrayidx275.6 to i8*
  %arrayidx275.7 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 56
  %137 = bitcast i32* %arrayidx275.7 to i8*
  %hadamard285 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %121, i64 0, i32 6
  br label %for.cond261.preheader

for.cond261.preheader:                            ; preds = %for.cond261.preheader.lr.ph, %for.inc291
  %138 = phi i32 [ %.pre496, %for.cond261.preheader.lr.ph ], [ %149, %for.inc291 ]
  %indvars.iv472 = phi i64 [ 0, %for.cond261.preheader.lr.ph ], [ %indvars.iv.next473, %for.inc291 ]
  %mcost.3434 = phi i32 [ %mcost.0.lcssa, %for.cond261.preheader.lr.ph ], [ %mcost.4.lcssa, %for.inc291 ]
  %cmp266429 = icmp sgt i32 %138, 0
  br i1 %cmp266429, label %for.end283.preheader, label %for.inc291

for.end283.preheader:                             ; preds = %for.cond261.preheader
  %indvars.iv.next467 = add nsw i64 %indvars.iv472, 1
  %indvars.iv.next467.1 = add nsw i64 %indvars.iv472, 2
  %indvars.iv.next467.2 = add i64 %indvars.iv472, 3
  %indvars.iv.next467.3 = add i64 %indvars.iv472, 4
  %indvars.iv.next467.4 = add i64 %indvars.iv472, 5
  %indvars.iv.next467.5 = add i64 %indvars.iv472, 6
  %indvars.iv.next467.6 = add i64 %indvars.iv472, 7
  br label %for.end283

for.end283:                                       ; preds = %for.end283.preheader, %for.end283
  %indvars.iv470 = phi i64 [ %indvars.iv.next471, %for.end283 ], [ 0, %for.end283.preheader ]
  %mcost.4430 = phi i32 [ %add287, %for.end283 ], [ %mcost.3434, %for.end283.preheader ]
  %arrayidx279 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv472, i64 %indvars.iv470
  %139 = bitcast i32* %arrayidx279 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %130, i8* %139, i64 32, i32 4, i1 false)
  %arrayidx279.1 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next467, i64 %indvars.iv470
  %140 = bitcast i32* %arrayidx279.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %140, i64 32, i32 4, i1 false)
  %arrayidx279.2 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next467.1, i64 %indvars.iv470
  %141 = bitcast i32* %arrayidx279.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %141, i64 32, i32 4, i1 false)
  %arrayidx279.3 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next467.2, i64 %indvars.iv470
  %142 = bitcast i32* %arrayidx279.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %142, i64 32, i32 4, i1 false)
  %arrayidx279.4 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next467.3, i64 %indvars.iv470
  %143 = bitcast i32* %arrayidx279.4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %134, i8* %143, i64 32, i32 4, i1 false)
  %arrayidx279.5 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next467.4, i64 %indvars.iv470
  %144 = bitcast i32* %arrayidx279.5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %144, i64 32, i32 4, i1 false)
  %arrayidx279.6 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next467.5, i64 %indvars.iv470
  %145 = bitcast i32* %arrayidx279.6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %145, i64 32, i32 4, i1 false)
  %arrayidx279.7 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next467.6, i64 %indvars.iv470
  %146 = bitcast i32* %arrayidx279.7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %146, i64 32, i32 4, i1 false)
  %.pre = load i32, i32* %arrayidx265428.phi.trans.insert, align 4, !tbaa !13
  %147 = load i32, i32* %hadamard285, align 8, !tbaa !338
  %call286 = call i32 @SATD8X8(i32* nonnull %arraydecay284, i32 %147)
  %add287 = add nsw i32 %call286, %mcost.4430
  %indvars.iv.next471 = add i64 %indvars.iv470, %129
  %148 = sext i32 %.pre to i64
  %cmp266 = icmp slt i64 %indvars.iv.next471, %148
  br i1 %cmp266, label %for.end283, label %for.inc291.loopexit

for.inc291.loopexit:                              ; preds = %for.end283
  br label %for.inc291

for.inc291:                                       ; preds = %for.inc291.loopexit, %for.cond261.preheader
  %149 = phi i32 [ %138, %for.cond261.preheader ], [ %.pre, %for.inc291.loopexit ]
  %mcost.4.lcssa = phi i32 [ %mcost.3434, %for.cond261.preheader ], [ %add287, %for.inc291.loopexit ]
  %indvars.iv.next473 = add i64 %indvars.iv472, %126
  %150 = load i32, i32* %arrayidx257432, align 4, !tbaa !13
  %151 = sext i32 %150 to i64
  %cmp258 = icmp slt i64 %indvars.iv.next473, %151
  br i1 %cmp258, label %for.cond261.preheader, label %if.end294.loopexit

if.end294.loopexit:                               ; preds = %for.inc291
  br label %if.end294

if.end294:                                        ; preds = %if.end294.loopexit, %for.cond253.preheader, %for.end247
  %mcost.5 = phi i32 [ %mcost.0.lcssa, %for.end247 ], [ %mcost.0.lcssa, %for.cond253.preheader ], [ %mcost.4.lcssa, %if.end294.loopexit ]
  call void @llvm.lifetime.end(i64 1024, i8* nonnull %1) #8
  call void @llvm.lifetime.end(i64 256, i8* nonnull %0) #8
  ret i32 %mcost.5
}

declare void @LumaPrediction4x4Bi(i32, i32, i32, i32, i32, i16 signext, i16 signext, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @BlockMotionSearch(i16 signext %ref, i32 %list, i32 %mb_x, i32 %mb_y, i32 %blocktype, i32 %search_range, i32 %lambda_factor) local_unnamed_addr #0 {
entry:
  %mv_x = alloca i16, align 2
  %mv_y = alloca i16, align 2
  %tstruct1 = alloca %struct.timeb, align 8
  %tstruct2 = alloca %struct.timeb, align 8
  %bimv_x = alloca i16, align 2
  %bimv_y = alloca i16, align 2
  %tempmv_x = alloca i16, align 2
  %tempmv_y = alloca i16, align 2
  %pred_mv_bi = alloca [2 x i16], align 2
  %0 = bitcast i16* %mv_x to i8*
  call void @llvm.lifetime.start(i64 2, i8* nonnull %0) #8
  %1 = bitcast i16* %mv_y to i8*
  call void @llvm.lifetime.start(i64 2, i8* nonnull %1) #8
  %shr = ashr i32 %mb_x, 2
  %shr1 = ashr i32 %mb_y, 2
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %idxprom = sext i32 %blocktype to i64
  %arrayidx2 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 21, i64 %idxprom, i64 0
  %3 = load i32, i32* %arrayidx2, align 4, !tbaa !13
  %arrayidx6 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 21, i64 %idxprom, i64 1
  %4 = load i32, i32* %arrayidx6, align 4, !tbaa !13
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i64 0, i32 37
  %6 = load i32, i32* %opix_x, align 8, !tbaa !311
  %add = add nsw i32 %6, %mb_x
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i64 0, i32 38
  %7 = load i32, i32* %opix_y, align 4, !tbaa !312
  %add7 = add nsw i32 %7, %mb_y
  %8 = bitcast %struct.timeb* %tstruct1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* nonnull %8) #8
  %9 = bitcast %struct.timeb* %tstruct2 to i8*
  call void @llvm.lifetime.start(i64 16, i8* nonnull %9) #8
  %pred_mv8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i64 0, i32 74
  %10 = load i16******, i16******* %pred_mv8, align 8, !tbaa !342
  %idxprom9 = sext i32 %shr1 to i64
  %arrayidx10 = getelementptr inbounds i16*****, i16****** %10, i64 %idxprom9
  %11 = load i16*****, i16****** %arrayidx10, align 8, !tbaa !1
  %idxprom11 = sext i32 %shr to i64
  %arrayidx12 = getelementptr inbounds i16****, i16***** %11, i64 %idxprom11
  %12 = load i16****, i16***** %arrayidx12, align 8, !tbaa !1
  %idxprom13 = sext i32 %list to i64
  %arrayidx14 = getelementptr inbounds i16***, i16**** %12, i64 %idxprom13
  %13 = load i16***, i16**** %arrayidx14, align 8, !tbaa !1
  %idxprom15 = sext i16 %ref to i64
  %arrayidx16 = getelementptr inbounds i16**, i16*** %13, i64 %idxprom15
  %14 = load i16**, i16*** %arrayidx16, align 8, !tbaa !1
  %arrayidx18 = getelementptr inbounds i16*, i16** %14, i64 %idxprom
  %15 = load i16*, i16** %arrayidx18, align 8, !tbaa !1
  %all_mv19 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i64 0, i32 75
  %16 = load i16******, i16******* %all_mv19, align 8, !tbaa !343
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i64 0, i32 95
  %17 = load i32, i32* %MbaffFrameFlag, align 4, !tbaa !325
  %tobool = icmp eq i32 %17, 0
  br i1 %tobool, label %cond.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i64 0, i32 55
  %18 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8, !tbaa !293
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i64 0, i32 3
  %19 = load i32, i32* %current_mb_nr, align 4, !tbaa !294
  %idxprom20 = sext i32 %19 to i64
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %18, i64 %idxprom20, i32 19
  %20 = load i32, i32* %mb_field, align 8, !tbaa !329
  %tobool22 = icmp eq i32 %20, 0
  br i1 %tobool22, label %cond.end, label %cond.true

cond.true:                                        ; preds = %land.lhs.true
  %rem1268 = shl i32 %19, 1
  %21 = and i32 %rem1268, 2
  %22 = add nuw nsw i32 %21, 2
  br label %cond.end

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond25 = phi i32 [ %22, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ]
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 155
  %23 = load i32, i32* %FMEnable, align 4, !tbaa !321
  %cmp = icmp eq i32 %23, 3
  br i1 %cmp, label %cond.true26, label %cond.end33

cond.true26:                                      ; preds = %cond.end
  %24 = load i32***, i32**** @EPZSDistortion, align 8, !tbaa !1
  %add27 = add nsw i32 %cond25, %list
  %idxprom28 = sext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds i32**, i32*** %24, i64 %idxprom28
  %25 = load i32**, i32*** %arrayidx29, align 8, !tbaa !1
  %sub = add nsw i32 %blocktype, -1
  %idxprom30 = sext i32 %sub to i64
  %arrayidx31 = getelementptr inbounds i32*, i32** %25, i64 %idxprom30
  %26 = load i32*, i32** %arrayidx31, align 8, !tbaa !1
  br label %cond.end33

cond.end33:                                       ; preds = %cond.end, %cond.true26
  %cond34 = phi i32* [ %26, %cond.true26 ], [ null, %cond.end ]
  %call = call i32 @ftime(%struct.timeb* nonnull %tstruct1) #8
  %cmp351310 = icmp sgt i32 %4, 0
  br i1 %cmp351310, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %cond.end33
  %idxprom41 = sext i32 %add to i64
  %conv = sext i32 %3 to i64
  %mul = shl nsw i64 %conv, 1
  %27 = sext i32 %add7 to i64
  %wide.trip.count1335 = zext i32 %4 to i64
  %28 = add nsw i64 %wide.trip.count1335, -1
  %xtraiter = and i64 %wide.trip.count1335, 3
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.prol.loopexit, label %for.body.prol.preheader

for.body.prol.preheader:                          ; preds = %for.body.lr.ph
  br label %for.body.prol

for.body.prol:                                    ; preds = %for.body.prol, %for.body.prol.preheader
  %indvars.iv1332.prol = phi i64 [ 0, %for.body.prol.preheader ], [ %indvars.iv.next1333.prol, %for.body.prol ]
  %prol.iter = phi i64 [ %xtraiter, %for.body.prol.preheader ], [ %prol.iter.sub, %for.body.prol ]
  %arrayidx37.prol = getelementptr inbounds [16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 %indvars.iv1332.prol
  %29 = bitcast i16** %arrayidx37.prol to i8**
  %30 = load i8*, i8** %29, align 8, !tbaa !1
  %31 = load i16**, i16*** @imgY_org, align 8, !tbaa !1
  %32 = add nsw i64 %indvars.iv1332.prol, %27
  %arrayidx40.prol = getelementptr inbounds i16*, i16** %31, i64 %32
  %33 = load i16*, i16** %arrayidx40.prol, align 8, !tbaa !1
  %arrayidx42.prol = getelementptr inbounds i16, i16* %33, i64 %idxprom41
  %34 = bitcast i16* %arrayidx42.prol to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %34, i64 %mul, i32 2, i1 false)
  %indvars.iv.next1333.prol = add nuw nsw i64 %indvars.iv1332.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.prol.loopexit.unr-lcssa, label %for.body.prol, !llvm.loop !344

for.body.prol.loopexit.unr-lcssa:                 ; preds = %for.body.prol
  br label %for.body.prol.loopexit

for.body.prol.loopexit:                           ; preds = %for.body.lr.ph, %for.body.prol.loopexit.unr-lcssa
  %indvars.iv1332.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1333.prol, %for.body.prol.loopexit.unr-lcssa ]
  %35 = icmp ult i64 %28, 3
  br i1 %35, label %for.end.loopexit, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.prol.loopexit
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv1332 = phi i64 [ %indvars.iv1332.unr, %for.body.lr.ph.new ], [ %indvars.iv.next1333.3, %for.body ]
  %arrayidx37 = getelementptr inbounds [16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 %indvars.iv1332
  %36 = bitcast i16** %arrayidx37 to i8**
  %37 = load i8*, i8** %36, align 8, !tbaa !1
  %38 = load i16**, i16*** @imgY_org, align 8, !tbaa !1
  %39 = add nsw i64 %indvars.iv1332, %27
  %arrayidx40 = getelementptr inbounds i16*, i16** %38, i64 %39
  %40 = load i16*, i16** %arrayidx40, align 8, !tbaa !1
  %arrayidx42 = getelementptr inbounds i16, i16* %40, i64 %idxprom41
  %41 = bitcast i16* %arrayidx42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %41, i64 %mul, i32 2, i1 false)
  %indvars.iv.next1333 = add nuw nsw i64 %indvars.iv1332, 1
  %arrayidx37.1 = getelementptr inbounds [16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 %indvars.iv.next1333
  %42 = bitcast i16** %arrayidx37.1 to i8**
  %43 = load i8*, i8** %42, align 8, !tbaa !1
  %44 = load i16**, i16*** @imgY_org, align 8, !tbaa !1
  %45 = add nsw i64 %indvars.iv.next1333, %27
  %arrayidx40.1 = getelementptr inbounds i16*, i16** %44, i64 %45
  %46 = load i16*, i16** %arrayidx40.1, align 8, !tbaa !1
  %arrayidx42.1 = getelementptr inbounds i16, i16* %46, i64 %idxprom41
  %47 = bitcast i16* %arrayidx42.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %47, i64 %mul, i32 2, i1 false)
  %indvars.iv.next1333.1 = add nsw i64 %indvars.iv1332, 2
  %arrayidx37.2 = getelementptr inbounds [16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 %indvars.iv.next1333.1
  %48 = bitcast i16** %arrayidx37.2 to i8**
  %49 = load i8*, i8** %48, align 8, !tbaa !1
  %50 = load i16**, i16*** @imgY_org, align 8, !tbaa !1
  %51 = add nsw i64 %indvars.iv.next1333.1, %27
  %arrayidx40.2 = getelementptr inbounds i16*, i16** %50, i64 %51
  %52 = load i16*, i16** %arrayidx40.2, align 8, !tbaa !1
  %arrayidx42.2 = getelementptr inbounds i16, i16* %52, i64 %idxprom41
  %53 = bitcast i16* %arrayidx42.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %53, i64 %mul, i32 2, i1 false)
  %indvars.iv.next1333.2 = add nsw i64 %indvars.iv1332, 3
  %arrayidx37.3 = getelementptr inbounds [16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 %indvars.iv.next1333.2
  %54 = bitcast i16** %arrayidx37.3 to i8**
  %55 = load i8*, i8** %54, align 8, !tbaa !1
  %56 = load i16**, i16*** @imgY_org, align 8, !tbaa !1
  %57 = add nsw i64 %indvars.iv.next1333.2, %27
  %arrayidx40.3 = getelementptr inbounds i16*, i16** %56, i64 %57
  %58 = load i16*, i16** %arrayidx40.3, align 8, !tbaa !1
  %arrayidx42.3 = getelementptr inbounds i16, i16* %58, i64 %idxprom41
  %59 = bitcast i16* %arrayidx42.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %59, i64 %mul, i32 2, i1 false)
  %indvars.iv.next1333.3 = add nsw i64 %indvars.iv1332, 4
  %exitcond1336.3 = icmp eq i64 %indvars.iv.next1333.3, %wide.trip.count1335
  br i1 %exitcond1336.3, label %for.end.loopexit.unr-lcssa, label %for.body

for.end.loopexit.unr-lcssa:                       ; preds = %for.body
  br label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.body.prol.loopexit, %for.end.loopexit.unr-lcssa
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %cond.end33
  %60 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %FMEnable43 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %60, i64 0, i32 155
  %61 = load i32, i32* %FMEnable43, align 4, !tbaa !321
  switch i32 %61, label %if.end50 [
    i32 1, label %if.then
    i32 2, label %if.then49
  ]

if.then:                                          ; preds = %for.end
  call void @setup_FME(i16 signext %ref, i32 %list, i32 %shr1, i32 %shr, i32 %blocktype, i16****** %16) #8
  br label %if.end50

if.then49:                                        ; preds = %for.end
  call void @simplified_setup_FME(i16 signext %ref, i32 %list, i32 %shr1, i32 %shr, i32 %blocktype, i16****** %16) #8
  br label %if.end50

if.end50:                                         ; preds = %for.end, %if.then49, %if.then
  %62 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %62, i64 0, i32 32
  %63 = load i8***, i8**** %ref_idx, align 8, !tbaa !306
  %arrayidx52 = getelementptr inbounds i8**, i8*** %63, i64 %idxprom13
  %64 = load i8**, i8*** %arrayidx52, align 8, !tbaa !1
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %62, i64 0, i32 35
  %65 = load i16****, i16***** %mv, align 8, !tbaa !307
  %arrayidx54 = getelementptr inbounds i16***, i16**** %65, i64 %idxprom13
  %66 = load i16***, i16**** %arrayidx54, align 8, !tbaa !1
  call void @SetMotionVectorPredictor(i16* %15, i8** %64, i16*** %66, i16 signext %ref, i32 %list, i32 %shr, i32 %shr1, i32 %3, i32 %4)
  %67 = load i16, i16* %15, align 2, !tbaa !308
  %arrayidx56 = getelementptr inbounds i16, i16* %15, i64 1
  %68 = load i16, i16* %arrayidx56, align 2, !tbaa !308
  %69 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %FMEnable57 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i64 0, i32 155
  %70 = load i32, i32* %FMEnable57, align 4, !tbaa !321
  switch i32 %70, label %if.else532 [
    i32 1, label %if.then60
    i32 2, label %if.then241
    i32 3, label %if.then412
  ]

if.then60:                                        ; preds = %if.end50
  %71 = sdiv i16 %67, 4
  store i16 %71, i16* %mv_x, align 2, !tbaa !308
  %72 = sdiv i16 %68, 4
  store i16 %72, i16* %mv_y, align 2, !tbaa !308
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i64 0, i32 106
  %73 = load i32, i32* %rdopt, align 8, !tbaa !309
  %tobool66 = icmp eq i32 %73, 0
  br i1 %tobool66, label %if.then67, label %if.end118

if.then67:                                        ; preds = %if.then60
  %sub68 = sub nsw i32 0, %search_range
  %conv69 = sext i16 %71 to i32
  %cmp70 = icmp sgt i32 %conv69, %search_range
  %cond76 = select i1 %cmp70, i32 %search_range, i32 %conv69
  %cmp77 = icmp slt i32 %cond76, %sub68
  %sub68.cond76 = select i1 %cmp77, i32 %sub68, i32 %cond76
  %conv92 = trunc i32 %sub68.cond76 to i16
  store i16 %conv92, i16* %mv_x, align 2, !tbaa !308
  %conv94 = sext i16 %72 to i32
  %cmp95 = icmp sgt i32 %conv94, %search_range
  %cond101 = select i1 %cmp95, i32 %search_range, i32 %conv94
  %cmp102 = icmp slt i32 %cond101, %sub68
  %cond116 = select i1 %cmp102, i32 %sub68, i32 %cond101
  %conv117 = trunc i32 %cond116 to i16
  store i16 %conv117, i16* %mv_y, align 2, !tbaa !308
  br label %if.end118

if.end118:                                        ; preds = %if.then60, %if.then67
  %74 = phi i16 [ %72, %if.then60 ], [ %conv117, %if.then67 ]
  %75 = phi i16 [ %71, %if.then60 ], [ %conv92, %if.then67 ]
  %conv119 = sext i16 %75 to i32
  %add120 = add nsw i32 %search_range, -2047
  %cmp121 = icmp slt i32 %conv119, %add120
  br i1 %cmp121, label %cond.end136, label %cond.false125

cond.false125:                                    ; preds = %if.end118
  %sub127 = sub nsw i32 2047, %search_range
  %cmp128 = icmp sgt i32 %conv119, %sub127
  %cond135 = select i1 %cmp128, i32 %sub127, i32 %conv119
  br label %cond.end136

cond.end136:                                      ; preds = %if.end118, %cond.false125
  %cond137 = phi i32 [ %cond135, %cond.false125 ], [ %add120, %if.end118 ]
  %conv138 = trunc i32 %cond137 to i16
  store i16 %conv138, i16* %mv_x, align 2, !tbaa !308
  %conv139 = sext i16 %74 to i32
  %76 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %LevelIndex = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i64 0, i32 2
  %77 = load i32, i32* %LevelIndex, align 8, !tbaa !310
  %idxprom140 = sext i32 %77 to i64
  %arrayidx142 = getelementptr inbounds [17 x [6 x i32]], [17 x [6 x i32]]* @LEVELMVLIMIT, i64 0, i64 %idxprom140, i64 0
  %78 = load i32, i32* %arrayidx142, align 8, !tbaa !13
  %add143 = add nsw i32 %78, %search_range
  %cmp144 = icmp slt i32 %conv139, %add143
  br i1 %cmp144, label %cond.end171, label %cond.false152

cond.false152:                                    ; preds = %cond.end136
  %arrayidx157 = getelementptr inbounds [17 x [6 x i32]], [17 x [6 x i32]]* @LEVELMVLIMIT, i64 0, i64 %idxprom140, i64 1
  %79 = load i32, i32* %arrayidx157, align 4, !tbaa !13
  %sub158 = sub nsw i32 %79, %search_range
  %cmp159 = icmp sgt i32 %conv139, %sub158
  %sub158.conv139 = select i1 %cmp159, i32 %sub158, i32 %conv139
  br label %cond.end171

cond.end171:                                      ; preds = %cond.false152, %cond.end136
  %cond172 = phi i32 [ %add143, %cond.end136 ], [ %sub158.conv139, %cond.false152 ]
  %conv173 = trunc i32 %cond172 to i16
  store i16 %conv173, i16* %mv_y, align 2, !tbaa !308
  %call174 = call i32 @FastIntegerPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %ref, i32 %list, i32 %add, i32 %add7, i32 %blocktype, i16 signext %67, i16 signext %68, i16* nonnull %mv_x, i16* nonnull %mv_y, i32 %search_range, i32 2147483647, i32 %lambda_factor) #8
  %shr176 = ashr i32 %3, 2
  %cmp1771304 = icmp sgt i32 %shr176, 0
  br i1 %cmp1771304, label %for.cond180.preheader.lr.ph, label %if.end536

for.cond180.preheader.lr.ph:                      ; preds = %cond.end171
  %shr181 = ashr i32 %4, 2
  %cmp1821301 = icmp sgt i32 %shr181, 0
  %cmp185 = icmp eq i32 %list, 0
  %80 = load i32****, i32***** @fastme_ref_cost, align 8
  %arrayidx189 = getelementptr inbounds i32***, i32**** %80, i64 %idxprom15
  %cmp199 = icmp eq i16 %ref, 0
  %81 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y218 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i64 0, i32 34
  %shr209.pn.in.in = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i64 0, i32 33
  %wide.trip.count = zext i32 %shr181 to i64
  %wide.trip.count1328 = zext i32 %shr176 to i64
  br label %for.cond180.preheader

for.cond180.preheader:                            ; preds = %for.inc234, %for.cond180.preheader.lr.ph
  %indvars.iv1324 = phi i64 [ 0, %for.cond180.preheader.lr.ph ], [ %indvars.iv.next1325, %for.inc234 ]
  br i1 %cmp1821301, label %for.body184.lr.ph, label %for.inc234

for.body184.lr.ph:                                ; preds = %for.cond180.preheader
  %82 = add nsw i64 %indvars.iv1324, %idxprom11
  %83 = trunc i64 %82 to i32
  br label %for.body184

for.body184:                                      ; preds = %for.inc231, %for.body184.lr.ph
  %indvars.iv1320 = phi i64 [ 0, %for.body184.lr.ph ], [ %indvars.iv.next1321, %for.inc231 ]
  br i1 %cmp185, label %if.then187, label %for.body184.if.end230.sink.split_crit_edge

for.body184.if.end230.sink.split_crit_edge:       ; preds = %for.body184
  %.pre1341 = add nsw i64 %indvars.iv1320, %idxprom9
  br label %if.end230.sink.split

if.then187:                                       ; preds = %for.body184
  %84 = load i32***, i32**** %arrayidx189, align 8, !tbaa !1
  %arrayidx191 = getelementptr inbounds i32**, i32*** %84, i64 %idxprom
  %85 = load i32**, i32*** %arrayidx191, align 8, !tbaa !1
  %86 = add nsw i64 %indvars.iv1320, %idxprom9
  %arrayidx194 = getelementptr inbounds i32*, i32** %85, i64 %86
  %87 = load i32*, i32** %arrayidx194, align 8, !tbaa !1
  %arrayidx197 = getelementptr inbounds i32, i32* %87, i64 %82
  store i32 %call174, i32* %arrayidx197, align 4, !tbaa !13
  br i1 %cmp199, label %if.end230.sink.split, label %for.inc231

if.end230.sink.split:                             ; preds = %for.body184.if.end230.sink.split_crit_edge, %if.then187
  %.pre-phi = phi i64 [ %.pre1341, %for.body184.if.end230.sink.split_crit_edge ], [ %86, %if.then187 ]
  %.pn.in = phi i32**** [ @fastme_l1_cost, %for.body184.if.end230.sink.split_crit_edge ], [ @fastme_l0_cost, %if.then187 ]
  %.pn = load i32***, i32**** %.pn.in, align 8, !tbaa !1
  %.sink.in = getelementptr inbounds i32**, i32*** %.pn, i64 %idxprom
  %.sink = load i32**, i32*** %.sink.in, align 8, !tbaa !1
  %88 = load i32, i32* %pix_y218, align 4, !tbaa !345
  %shr219 = ashr i32 %88, 2
  %89 = trunc i64 %.pre-phi to i32
  %add221 = add i32 %89, %shr219
  %idxprom222 = sext i32 %add221 to i64
  %arrayidx223 = getelementptr inbounds i32*, i32** %.sink, i64 %idxprom222
  %shr209.pn.in = load i32, i32* %shr209.pn.in.in, align 8, !tbaa !346
  %shr209.pn = ashr i32 %shr209.pn.in, 2
  %.sink906 = load i32*, i32** %arrayidx223, align 8, !tbaa !1
  %add211.sink = add i32 %83, %shr209.pn
  %idxprom212 = sext i32 %add211.sink to i64
  %arrayidx213 = getelementptr inbounds i32, i32* %.sink906, i64 %idxprom212
  store i32 %call174, i32* %arrayidx213, align 4, !tbaa !13
  br label %for.inc231

for.inc231:                                       ; preds = %if.then187, %if.end230.sink.split
  %indvars.iv.next1321 = add nuw nsw i64 %indvars.iv1320, 1
  %exitcond = icmp eq i64 %indvars.iv.next1321, %wide.trip.count
  br i1 %exitcond, label %for.inc234.loopexit, label %for.body184

for.inc234.loopexit:                              ; preds = %for.inc231
  br label %for.inc234

for.inc234:                                       ; preds = %for.inc234.loopexit, %for.cond180.preheader
  %indvars.iv.next1325 = add nuw nsw i64 %indvars.iv1324, 1
  %exitcond1329 = icmp eq i64 %indvars.iv.next1325, %wide.trip.count1328
  br i1 %exitcond1329, label %if.end536.loopexit, label %for.cond180.preheader

if.then241:                                       ; preds = %if.end50
  %90 = sdiv i16 %67, 4
  store i16 %90, i16* %mv_x, align 2, !tbaa !308
  %91 = sdiv i16 %68, 4
  store i16 %91, i16* %mv_y, align 2, !tbaa !308
  %rdopt248 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i64 0, i32 106
  %92 = load i32, i32* %rdopt248, align 8, !tbaa !309
  %tobool249 = icmp eq i32 %92, 0
  br i1 %tobool249, label %if.then250, label %if.end301

if.then250:                                       ; preds = %if.then241
  %sub251 = sub nsw i32 0, %search_range
  %conv252 = sext i16 %90 to i32
  %cmp253 = icmp sgt i32 %conv252, %search_range
  %cond259 = select i1 %cmp253, i32 %search_range, i32 %conv252
  %cmp260 = icmp slt i32 %cond259, %sub251
  %sub251.cond259 = select i1 %cmp260, i32 %sub251, i32 %cond259
  %conv275 = trunc i32 %sub251.cond259 to i16
  store i16 %conv275, i16* %mv_x, align 2, !tbaa !308
  %conv277 = sext i16 %91 to i32
  %cmp278 = icmp sgt i32 %conv277, %search_range
  %cond284 = select i1 %cmp278, i32 %search_range, i32 %conv277
  %cmp285 = icmp slt i32 %cond284, %sub251
  %cond299 = select i1 %cmp285, i32 %sub251, i32 %cond284
  %conv300 = trunc i32 %cond299 to i16
  store i16 %conv300, i16* %mv_y, align 2, !tbaa !308
  br label %if.end301

if.end301:                                        ; preds = %if.then241, %if.then250
  %93 = phi i16 [ %91, %if.then241 ], [ %conv300, %if.then250 ]
  %94 = phi i16 [ %90, %if.then241 ], [ %conv275, %if.then250 ]
  %conv302 = sext i16 %94 to i32
  %add303 = add nsw i32 %search_range, -2047
  %cmp304 = icmp slt i32 %conv302, %add303
  br i1 %cmp304, label %cond.end319, label %cond.false308

cond.false308:                                    ; preds = %if.end301
  %sub310 = sub nsw i32 2047, %search_range
  %cmp311 = icmp sgt i32 %conv302, %sub310
  %cond318 = select i1 %cmp311, i32 %sub310, i32 %conv302
  br label %cond.end319

cond.end319:                                      ; preds = %if.end301, %cond.false308
  %cond320 = phi i32 [ %cond318, %cond.false308 ], [ %add303, %if.end301 ]
  %conv321 = trunc i32 %cond320 to i16
  store i16 %conv321, i16* %mv_x, align 2, !tbaa !308
  %conv322 = sext i16 %93 to i32
  %95 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %LevelIndex323 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %95, i64 0, i32 2
  %96 = load i32, i32* %LevelIndex323, align 8, !tbaa !310
  %idxprom324 = sext i32 %96 to i64
  %arrayidx326 = getelementptr inbounds [17 x [6 x i32]], [17 x [6 x i32]]* @LEVELMVLIMIT, i64 0, i64 %idxprom324, i64 0
  %97 = load i32, i32* %arrayidx326, align 8, !tbaa !13
  %add327 = add nsw i32 %97, %search_range
  %cmp328 = icmp slt i32 %conv322, %add327
  br i1 %cmp328, label %cond.end355, label %cond.false336

cond.false336:                                    ; preds = %cond.end319
  %arrayidx341 = getelementptr inbounds [17 x [6 x i32]], [17 x [6 x i32]]* @LEVELMVLIMIT, i64 0, i64 %idxprom324, i64 1
  %98 = load i32, i32* %arrayidx341, align 4, !tbaa !13
  %sub342 = sub nsw i32 %98, %search_range
  %cmp343 = icmp sgt i32 %conv322, %sub342
  %sub342.conv322 = select i1 %cmp343, i32 %sub342, i32 %conv322
  br label %cond.end355

cond.end355:                                      ; preds = %cond.false336, %cond.end319
  %cond356 = phi i32 [ %add327, %cond.end319 ], [ %sub342.conv322, %cond.false336 ]
  %conv357 = trunc i32 %cond356 to i16
  store i16 %conv357, i16* %mv_y, align 2, !tbaa !308
  %call358 = call i32 @simplified_FastIntegerPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %ref, i32 %list, i32 %add, i32 %add7, i32 %blocktype, i16 signext %67, i16 signext %68, i16* nonnull %mv_x, i16* nonnull %mv_y, i32 %search_range, i32 2147483647, i32 %lambda_factor) #8
  %shr360 = ashr i32 %3, 2
  %cmp3611308 = icmp sgt i32 %shr360, 0
  br i1 %cmp3611308, label %for.cond364.preheader.lr.ph, label %if.end536

for.cond364.preheader.lr.ph:                      ; preds = %cond.end355
  %shr365 = ashr i32 %4, 2
  %cmp3661306 = icmp sgt i32 %shr365, 0
  %cmp369 = icmp eq i32 %list, 0
  br label %for.cond364.preheader

for.cond364.preheader:                            ; preds = %for.inc405, %for.cond364.preheader.lr.ph
  %i.11309 = phi i32 [ 0, %for.cond364.preheader.lr.ph ], [ %inc406, %for.inc405 ]
  br i1 %cmp3661306, label %for.body368.lr.ph, label %for.inc405

for.body368.lr.ph:                                ; preds = %for.cond364.preheader
  %add397.pn = add nsw i32 %i.11309, %shr
  %.pre = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %pix_y389 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %.pre, i64 0, i32 34
  %shr396.pn.in.in = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %.pre, i64 0, i32 33
  br label %for.body368

for.body368:                                      ; preds = %for.body368, %for.body368.lr.ph
  %j.21307 = phi i32 [ 0, %for.body368.lr.ph ], [ %inc403, %for.body368 ]
  %simplified_fastme_l0_cost.val = load i32***, i32**** @simplified_fastme_l0_cost, align 8
  %simplified_fastme_l1_cost.val = load i32***, i32**** @simplified_fastme_l1_cost, align 8
  %99 = select i1 %cmp369, i32*** %simplified_fastme_l0_cost.val, i32*** %simplified_fastme_l1_cost.val
  %arrayidx388 = getelementptr inbounds i32**, i32*** %99, i64 %idxprom
  %100 = load i32**, i32*** %arrayidx388, align 8, !tbaa !1
  %101 = load i32, i32* %pix_y389, align 4, !tbaa !345
  %shr390 = ashr i32 %101, 2
  %add391 = add nsw i32 %j.21307, %shr1
  %add392 = add i32 %add391, %shr390
  %idxprom393 = sext i32 %add392 to i64
  %arrayidx394 = getelementptr inbounds i32*, i32** %100, i64 %idxprom393
  %shr396.pn.in = load i32, i32* %shr396.pn.in.in, align 8, !tbaa !346
  %shr396.pn = ashr i32 %shr396.pn.in, 2
  %.sink907 = load i32*, i32** %arrayidx394, align 8, !tbaa !1
  %add398.sink = add i32 %add397.pn, %shr396.pn
  %idxprom399 = sext i32 %add398.sink to i64
  %arrayidx400 = getelementptr inbounds i32, i32* %.sink907, i64 %idxprom399
  store i32 %call358, i32* %arrayidx400, align 4, !tbaa !13
  %inc403 = add nuw nsw i32 %j.21307, 1
  %exitcond1330 = icmp eq i32 %inc403, %shr365
  br i1 %exitcond1330, label %for.inc405.loopexit, label %for.body368

for.inc405.loopexit:                              ; preds = %for.body368
  br label %for.inc405

for.inc405:                                       ; preds = %for.inc405.loopexit, %for.cond364.preheader
  %inc406 = add nuw nsw i32 %i.11309, 1
  %exitcond1331 = icmp eq i32 %inc406, %shr360
  br i1 %exitcond1331, label %if.end536.loopexit1356, label %for.cond364.preheader

if.then412:                                       ; preds = %if.end50
  %102 = sdiv i16 %67, 4
  store i16 %102, i16* %mv_x, align 2, !tbaa !308
  %103 = sdiv i16 %68, 4
  store i16 %103, i16* %mv_y, align 2, !tbaa !308
  %rdopt419 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i64 0, i32 106
  %104 = load i32, i32* %rdopt419, align 8, !tbaa !309
  %tobool420 = icmp eq i32 %104, 0
  br i1 %tobool420, label %if.then421, label %if.end472

if.then421:                                       ; preds = %if.then412
  %sub422 = sub nsw i32 0, %search_range
  %conv423 = sext i16 %102 to i32
  %cmp424 = icmp sgt i32 %conv423, %search_range
  %cond430 = select i1 %cmp424, i32 %search_range, i32 %conv423
  %cmp431 = icmp slt i32 %cond430, %sub422
  %sub422.cond430 = select i1 %cmp431, i32 %sub422, i32 %cond430
  %conv446 = trunc i32 %sub422.cond430 to i16
  store i16 %conv446, i16* %mv_x, align 2, !tbaa !308
  %conv448 = sext i16 %103 to i32
  %cmp449 = icmp sgt i32 %conv448, %search_range
  %cond455 = select i1 %cmp449, i32 %search_range, i32 %conv448
  %cmp456 = icmp slt i32 %cond455, %sub422
  %cond470 = select i1 %cmp456, i32 %sub422, i32 %cond455
  %conv471 = trunc i32 %cond470 to i16
  store i16 %conv471, i16* %mv_y, align 2, !tbaa !308
  br label %if.end472

if.end472:                                        ; preds = %if.then412, %if.then421
  %105 = phi i16 [ %103, %if.then412 ], [ %conv471, %if.then421 ]
  %106 = phi i16 [ %102, %if.then412 ], [ %conv446, %if.then421 ]
  %conv473 = sext i16 %106 to i32
  %add474 = add nsw i32 %search_range, -2047
  %cmp475 = icmp slt i32 %conv473, %add474
  br i1 %cmp475, label %cond.end490, label %cond.false479

cond.false479:                                    ; preds = %if.end472
  %sub481 = sub nsw i32 2047, %search_range
  %cmp482 = icmp sgt i32 %conv473, %sub481
  %cond489 = select i1 %cmp482, i32 %sub481, i32 %conv473
  br label %cond.end490

cond.end490:                                      ; preds = %if.end472, %cond.false479
  %cond491 = phi i32 [ %cond489, %cond.false479 ], [ %add474, %if.end472 ]
  %conv492 = trunc i32 %cond491 to i16
  store i16 %conv492, i16* %mv_x, align 2, !tbaa !308
  %conv493 = sext i16 %105 to i32
  %107 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %LevelIndex494 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %107, i64 0, i32 2
  %108 = load i32, i32* %LevelIndex494, align 8, !tbaa !310
  %idxprom495 = sext i32 %108 to i64
  %arrayidx497 = getelementptr inbounds [17 x [6 x i32]], [17 x [6 x i32]]* @LEVELMVLIMIT, i64 0, i64 %idxprom495, i64 0
  %109 = load i32, i32* %arrayidx497, align 8, !tbaa !13
  %add498 = add nsw i32 %109, %search_range
  %cmp499 = icmp slt i32 %conv493, %add498
  br i1 %cmp499, label %cond.end526, label %cond.false507

cond.false507:                                    ; preds = %cond.end490
  %arrayidx512 = getelementptr inbounds [17 x [6 x i32]], [17 x [6 x i32]]* @LEVELMVLIMIT, i64 0, i64 %idxprom495, i64 1
  %110 = load i32, i32* %arrayidx512, align 4, !tbaa !13
  %sub513 = sub nsw i32 %110, %search_range
  %cmp514 = icmp sgt i32 %conv493, %sub513
  %sub513.conv493 = select i1 %cmp514, i32 %sub513, i32 %conv493
  br label %cond.end526

cond.end526:                                      ; preds = %cond.false507, %cond.end490
  %cond527 = phi i32 [ %add498, %cond.end490 ], [ %sub513.conv493, %cond.false507 ]
  %conv528 = trunc i32 %cond527 to i16
  store i16 %conv528, i16* %mv_y, align 2, !tbaa !308
  %111 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %ref_idx529 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %111, i64 0, i32 32
  %112 = load i8***, i8**** %ref_idx529, align 8, !tbaa !306
  %mv530 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %111, i64 0, i32 35
  %113 = load i16****, i16***** %mv530, align 8, !tbaa !307
  %call531 = call i32 @EPZSPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %ref, i32 %list, i32 %cond25, i8*** %112, i16**** %113, i32 %add, i32 %add7, i32 %blocktype, i16 signext %67, i16 signext %68, i16* nonnull %mv_x, i16* nonnull %mv_y, i32 %search_range, i32 2147483647, i32 %lambda_factor) #8
  br label %if.end536

if.else532:                                       ; preds = %if.end50
  %call533 = call i32 @FastFullPelBlockMotionSearch(i16** undef, i16 signext %ref, i32 %list, i32 %add, i32 %add7, i32 %blocktype, i16 signext %67, i16 signext %68, i16* nonnull %mv_x, i16* nonnull %mv_y, i32 %search_range, i32 2147483647, i32 %lambda_factor)
  br label %if.end536

if.end536.loopexit:                               ; preds = %for.inc234
  br label %if.end536

if.end536.loopexit1356:                           ; preds = %for.inc405
  br label %if.end536

if.end536:                                        ; preds = %if.end536.loopexit1356, %if.end536.loopexit, %cond.end355, %cond.end171, %if.else532, %cond.end526
  %min_mcost.0 = phi i32 [ %call531, %cond.end526 ], [ %call533, %if.else532 ], [ %call174, %cond.end171 ], [ %call358, %cond.end355 ], [ %call174, %if.end536.loopexit ], [ %call358, %if.end536.loopexit1356 ]
  %114 = load i16, i16* %mv_x, align 2, !tbaa !308
  %shl = shl i16 %114, 2
  store i16 %shl, i16* %mv_x, align 2, !tbaa !308
  %115 = load i16, i16* %mv_y, align 2, !tbaa !308
  %shl540 = shl i16 %115, 2
  store i16 %shl540, i16* %mv_y, align 2, !tbaa !308
  %116 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %DisableSubpelME = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i64 0, i32 7
  %117 = load i32, i32* %DisableSubpelME, align 4, !tbaa !347
  %tobool542 = icmp eq i32 %117, 0
  br i1 %tobool542, label %if.then543, label %if.end621

if.then543:                                       ; preds = %if.end536
  %FMEnable544 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i64 0, i32 155
  %118 = load i32, i32* %FMEnable544, align 4, !tbaa !321
  %cmp545 = icmp ne i32 %118, 3
  %cmp548 = icmp eq i16 %ref, 0
  %or.cond1275 = or i1 %cmp548, %cmp545
  br i1 %or.cond1275, label %if.then566, label %lor.lhs.false550

lor.lhs.false550:                                 ; preds = %if.then543
  %119 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %structure = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %119, i64 0, i32 7
  %120 = load i32, i32* %structure, align 4, !tbaa !348
  %cmp551 = icmp eq i32 %120, 0
  br i1 %cmp551, label %lor.lhs.false553, label %if.then566

lor.lhs.false553:                                 ; preds = %lor.lhs.false550
  %cmp555 = icmp sgt i16 %ref, 0
  br i1 %cmp555, label %land.lhs.true557, label %if.end621

land.lhs.true557:                                 ; preds = %lor.lhs.false553
  %conv558 = sitofp i32 %min_mcost.0 to double
  %shr559 = ashr i32 %add, 2
  %idxprom560 = sext i32 %shr559 to i64
  %arrayidx561 = getelementptr inbounds i32, i32* %cond34, i64 %idxprom560
  %121 = load i32, i32* %arrayidx561, align 4, !tbaa !13
  %conv562 = sitofp i32 %121 to double
  %mul563 = fmul double %conv562, 3.500000e+00
  %cmp564 = fcmp olt double %conv558, %mul563
  br i1 %cmp564, label %if.then566, label %if.end621

if.then566:                                       ; preds = %if.then543, %lor.lhs.false550, %land.lhs.true557
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i64 0, i32 6
  %122 = load i32, i32* %hadamard, align 8, !tbaa !338
  %cmp567 = icmp eq i32 %122, 1
  %.min_mcost.0 = select i1 %cmp567, i32 2147483647, i32 %min_mcost.0
  switch i32 %118, label %if.else614 [
    i32 1, label %if.then574
    i32 2, label %if.then594
  ]

if.then574:                                       ; preds = %if.then566
  %cmp575 = icmp sgt i32 %blocktype, 3
  br i1 %cmp575, label %if.then577, label %if.else585

if.then577:                                       ; preds = %if.then574
  %Transform8x8Mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i64 0, i32 144
  %123 = load i32, i32* %Transform8x8Mode, align 4, !tbaa !339
  %tobool578 = icmp ne i32 %123, 0
  %cmp580 = icmp eq i32 %blocktype, 4
  %or.cond = and i1 %cmp580, %tobool578
  %tobool583 = icmp ne i32 %122, 0
  %tobool583. = and i1 %tobool583, %or.cond
  %land.ext = zext i1 %tobool583. to i32
  %call584 = call i32 @FastSubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %ref, i32 %list, i32 %add, i32 %add7, i32 %blocktype, i16 signext %67, i16 signext %68, i16* nonnull %mv_x, i16* nonnull %mv_y, i32 9, i32 9, i32 %.min_mcost.0, i32 %lambda_factor, i32 %land.ext) #8
  br label %if.end658

if.else585:                                       ; preds = %if.then574
  %conv586 = sext i16 %67 to i32
  %conv587 = sext i16 %68 to i32
  %call588 = call i32 @SubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %ref, i32 %list, i32 %add, i32 %add7, i32 %blocktype, i32 %conv586, i32 %conv587, i16* nonnull %mv_x, i16* nonnull %mv_y, i32 9, i32 9, i32 %.min_mcost.0, i32 %lambda_factor)
  br label %if.end621

if.then594:                                       ; preds = %if.then566
  %cmp595 = icmp sgt i32 %blocktype, 1
  br i1 %cmp595, label %if.then597, label %if.else609

if.then597:                                       ; preds = %if.then594
  %Transform8x8Mode598 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i64 0, i32 144
  %124 = load i32, i32* %Transform8x8Mode598, align 4, !tbaa !339
  %tobool599 = icmp ne i32 %124, 0
  %cmp601 = icmp slt i32 %blocktype, 5
  %or.cond908 = and i1 %cmp601, %tobool599
  %tobool605 = icmp ne i32 %122, 0
  %tobool605. = and i1 %tobool605, %or.cond908
  %land.ext607 = zext i1 %tobool605. to i32
  %call608 = call i32 @simplified_FastSubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %ref, i32 %list, i32 %add, i32 %add7, i32 %blocktype, i16 signext %67, i16 signext %68, i16* nonnull %mv_x, i16* nonnull %mv_y, i32 9, i32 9, i32 %.min_mcost.0, i32 %lambda_factor, i32 %land.ext607) #8
  br label %if.end658

if.else609:                                       ; preds = %if.then594
  %conv610 = sext i16 %67 to i32
  %conv611 = sext i16 %68 to i32
  %call612 = call i32 @simplified_FastFullSubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %ref, i32 %list, i32 %add, i32 %add7, i32 %blocktype, i32 %conv610, i32 %conv611, i16* nonnull %mv_x, i16* nonnull %mv_y, i32 9, i32 9, i32 %.min_mcost.0, i32 %lambda_factor)
  br label %if.end621

if.else614:                                       ; preds = %if.then566
  %conv615 = sext i16 %67 to i32
  %conv616 = sext i16 %68 to i32
  %call617 = call i32 @SubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %ref, i32 %list, i32 %add, i32 %add7, i32 %blocktype, i32 %conv615, i32 %conv616, i16* nonnull %mv_x, i16* nonnull %mv_y, i32 9, i32 9, i32 %.min_mcost.0, i32 %lambda_factor)
  br label %if.end621

if.end621:                                        ; preds = %if.end536, %lor.lhs.false553, %land.lhs.true557, %if.else614, %if.else609, %if.else585
  %min_mcost.2 = phi i32 [ %min_mcost.0, %if.end536 ], [ %call588, %if.else585 ], [ %call612, %if.else609 ], [ %call617, %if.else614 ], [ %min_mcost.0, %land.lhs.true557 ], [ %min_mcost.0, %lor.lhs.false553 ]
  %125 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %rdopt622 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %125, i64 0, i32 106
  %126 = load i32, i32* %rdopt622, align 8, !tbaa !309
  %tobool623 = icmp eq i32 %126, 0
  %cmp625 = icmp eq i32 %blocktype, 1
  %or.cond910 = and i1 %cmp625, %tobool623
  br i1 %or.cond910, label %land.lhs.true627, label %if.end658

land.lhs.true627:                                 ; preds = %if.end621
  %127 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %127, i64 0, i32 6
  %128 = load i32, i32* %type, align 8, !tbaa !300
  switch i32 %128, label %if.end658 [
    i32 0, label %if.then634
    i32 3, label %if.then634
  ]

if.then634:                                       ; preds = %land.lhs.true627, %land.lhs.true627
  call void @FindSkipModeMotionVector()
  %call635 = call i32 @GetSkipCostMB(i32 undef)
  %add636 = add nsw i32 %lambda_factor, 4096
  %shr637 = ashr i32 %add636, 13
  %sub638 = sub nsw i32 %call635, %shr637
  %cmp639 = icmp slt i32 %sub638, %min_mcost.2
  br i1 %cmp639, label %if.then641, label %if.end658

if.then641:                                       ; preds = %if.then634
  %129 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %all_mv642 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %129, i64 0, i32 75
  %130 = load i16******, i16******* %all_mv642, align 8, !tbaa !343
  %131 = load i16*****, i16****** %130, align 8, !tbaa !1
  %132 = load i16****, i16***** %131, align 8, !tbaa !1
  %133 = load i16***, i16**** %132, align 8, !tbaa !1
  %134 = load i16**, i16*** %133, align 8, !tbaa !1
  %135 = load i16*, i16** %134, align 8, !tbaa !1
  %136 = load i16, i16* %135, align 2, !tbaa !308
  store i16 %136, i16* %mv_x, align 2, !tbaa !308
  %arrayidx655 = getelementptr inbounds i16, i16* %135, i64 1
  %137 = load i16, i16* %arrayidx655, align 2, !tbaa !308
  store i16 %137, i16* %mv_y, align 2, !tbaa !308
  br label %if.end658

if.end658:                                        ; preds = %if.then577, %if.then597, %if.then634, %if.then641, %land.lhs.true627, %if.end621
  %cmp6251282 = phi i1 [ %cmp625, %if.end621 ], [ true, %land.lhs.true627 ], [ true, %if.then641 ], [ true, %if.then634 ], [ false, %if.then597 ], [ false, %if.then577 ]
  %min_mcost.4 = phi i32 [ %min_mcost.2, %if.end621 ], [ %min_mcost.2, %land.lhs.true627 ], [ %sub638, %if.then641 ], [ %min_mcost.2, %if.then634 ], [ %call608, %if.then597 ], [ %call584, %if.then577 ]
  %shr660 = ashr i32 %4, 2
  %add661 = add nsw i32 %shr660, %shr1
  %cmp6621298 = icmp sgt i32 %shr660, 0
  br i1 %cmp6621298, label %for.cond665.preheader.lr.ph, label %for.end698

for.cond665.preheader.lr.ph:                      ; preds = %if.end658
  %shr666 = ashr i32 %3, 2
  %add667 = add nsw i32 %shr666, %shr
  %cmp6681296 = icmp sgt i32 %shr666, 0
  %138 = sext i32 %add667 to i64
  %139 = sext i32 %add661 to i64
  br label %for.cond665.preheader

for.cond665.preheader:                            ; preds = %for.cond665.preheader.lr.ph, %for.inc696
  %indvars.iv1318 = phi i64 [ %idxprom9, %for.cond665.preheader.lr.ph ], [ %indvars.iv.next1319, %for.inc696 ]
  br i1 %cmp6681296, label %for.body670.lr.ph, label %for.inc696

for.body670.lr.ph:                                ; preds = %for.cond665.preheader
  %arrayidx672 = getelementptr inbounds i16*****, i16****** %16, i64 %indvars.iv1318
  %140 = load i16*****, i16****** %arrayidx672, align 8, !tbaa !1
  br label %for.body670

for.body670:                                      ; preds = %for.body670.lr.ph, %for.body670
  %indvars.iv1316 = phi i64 [ %idxprom11, %for.body670.lr.ph ], [ %indvars.iv.next1317, %for.body670 ]
  %141 = load i16, i16* %mv_x, align 2, !tbaa !308
  %arrayidx674 = getelementptr inbounds i16****, i16***** %140, i64 %indvars.iv1316
  %142 = load i16****, i16***** %arrayidx674, align 8, !tbaa !1
  %arrayidx676 = getelementptr inbounds i16***, i16**** %142, i64 %idxprom13
  %143 = load i16***, i16**** %arrayidx676, align 8, !tbaa !1
  %arrayidx678 = getelementptr inbounds i16**, i16*** %143, i64 %idxprom15
  %144 = load i16**, i16*** %arrayidx678, align 8, !tbaa !1
  %arrayidx680 = getelementptr inbounds i16*, i16** %144, i64 %idxprom
  %145 = load i16*, i16** %arrayidx680, align 8, !tbaa !1
  store i16 %141, i16* %145, align 2, !tbaa !308
  %146 = load i16, i16* %mv_y, align 2, !tbaa !308
  %arrayidx692 = getelementptr inbounds i16, i16* %145, i64 1
  store i16 %146, i16* %arrayidx692, align 2, !tbaa !308
  %indvars.iv.next1317 = add nsw i64 %indvars.iv1316, 1
  %cmp668 = icmp slt i64 %indvars.iv.next1317, %138
  br i1 %cmp668, label %for.body670, label %for.inc696.loopexit

for.inc696.loopexit:                              ; preds = %for.body670
  br label %for.inc696

for.inc696:                                       ; preds = %for.inc696.loopexit, %for.cond665.preheader
  %indvars.iv.next1319 = add nsw i64 %indvars.iv1318, 1
  %cmp662 = icmp slt i64 %indvars.iv.next1319, %139
  br i1 %cmp662, label %for.cond665.preheader, label %for.end698.loopexit

for.end698.loopexit:                              ; preds = %for.inc696
  br label %for.end698

for.end698:                                       ; preds = %for.end698.loopexit, %if.end658
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %type699 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i64 0, i32 6
  %148 = load i32, i32* %type699, align 8, !tbaa !300
  %cmp700 = icmp eq i32 %148, 1
  br i1 %cmp700, label %land.lhs.true702, label %if.end892

land.lhs.true702:                                 ; preds = %for.end698
  %149 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %BiPredMotionEstimation = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %149, i64 0, i32 41
  %150 = load i32, i32* %BiPredMotionEstimation, align 8, !tbaa !349
  %cmp703 = icmp ne i32 %150, 0
  %or.cond909 = and i1 %cmp6251282, %cmp703
  %cmp710 = icmp eq i16 %ref, 0
  %or.cond1276 = and i1 %cmp710, %or.cond909
  br i1 %or.cond1276, label %if.then712, label %if.end892

if.then712:                                       ; preds = %land.lhs.true702
  %tobool713 = icmp ne i32 %list, 0
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i64 0, i32 77
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i64 0, i32 76
  %bipred_mv2.sink = select i1 %tobool713, i16******* %bipred_mv1, i16******* %bipred_mv2
  %151 = load i16******, i16******* %bipred_mv2.sink, align 8, !tbaa !1
  %152 = bitcast i16* %bimv_x to i8*
  call void @llvm.lifetime.start(i64 2, i8* nonnull %152) #8
  %153 = bitcast i16* %bimv_y to i8*
  call void @llvm.lifetime.start(i64 2, i8* nonnull %153) #8
  %154 = bitcast i16* %tempmv_x to i8*
  call void @llvm.lifetime.start(i64 2, i8* nonnull %154) #8
  %155 = bitcast i16* %tempmv_y to i8*
  call void @llvm.lifetime.start(i64 2, i8* nonnull %155) #8
  %conv718 = trunc i32 %list to i16
  %156 = bitcast [2 x i16]* %pred_mv_bi to i8*
  call void @llvm.lifetime.start(i64 4, i8* nonnull %156) #8
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %pred_mv_bi, i64 0, i64 0
  %157 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %ref_idx719 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %157, i64 0, i32 32
  %158 = load i8***, i8**** %ref_idx719, align 8, !tbaa !306
  %xor = xor i32 %list, 1
  %idxprom720 = sext i32 %xor to i64
  %arrayidx721 = getelementptr inbounds i8**, i8*** %158, i64 %idxprom720
  %159 = load i8**, i8*** %arrayidx721, align 8, !tbaa !1
  %mv722 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %157, i64 0, i32 35
  %160 = load i16****, i16***** %mv722, align 8, !tbaa !307
  %cmp723 = icmp eq i32 %list, 0
  %cond725 = zext i1 %cmp723 to i32
  %idxprom726 = zext i1 %cmp723 to i64
  %arrayidx727 = getelementptr inbounds i16***, i16**** %160, i64 %idxprom726
  %161 = load i16***, i16**** %arrayidx727, align 8, !tbaa !1
  call void @SetMotionVectorPredictor(i16* nonnull %arraydecay, i8** %159, i16*** %161, i16 signext 0, i32 %cond725, i32 %shr, i32 %shr1, i32 %3, i32 %4)
  %162 = load i16, i16* %mv_x, align 2, !tbaa !308
  %conv731 = sext i16 %162 to i32
  %add732 = add nsw i32 %conv731, 2
  %shr7331263 = lshr i32 %add732, 2
  %conv734 = trunc i32 %shr7331263 to i16
  store i16 %conv734, i16* %mv_x, align 2, !tbaa !308
  %163 = load i16, i16* %mv_y, align 2, !tbaa !308
  %conv735 = sext i16 %163 to i32
  %add736 = add nsw i32 %conv735, 2
  %shr7371264 = lshr i32 %add736, 2
  %conv738 = trunc i32 %shr7371264 to i16
  store i16 %conv738, i16* %mv_y, align 2, !tbaa !308
  %164 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %BiPredMERefinements1289 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %164, i64 0, i32 42
  %165 = load i32, i32* %BiPredMERefinements1289, align 4, !tbaa !350
  %cmp7401290 = icmp slt i32 %165, 0
  br i1 %cmp7401290, label %for.end788, label %for.body742.lr.ph

for.body742.lr.ph:                                ; preds = %if.then712
  %166 = load i16, i16* %arraydecay, align 2, !tbaa !308
  %arrayidx756 = getelementptr inbounds [2 x i16], [2 x i16]* %pred_mv_bi, i64 0, i64 1
  %167 = load i16, i16* %arrayidx756, align 2, !tbaa !308
  %conv761 = sext i16 %166 to i32
  %add762 = add nsw i32 %conv761, 2
  %shr7631266 = lshr i32 %add762, 2
  %conv764 = trunc i32 %shr7631266 to i16
  %conv765 = sext i16 %167 to i32
  %add766 = add nsw i32 %conv765, 2
  %shr7671267 = lshr i32 %add766, 2
  %conv768 = trunc i32 %shr7671267 to i16
  %conv751 = trunc i32 %xor to i16
  br label %for.body742

for.body742:                                      ; preds = %if.end785, %for.body742.lr.ph
  %168 = phi %struct.InputParameters* [ %164, %for.body742.lr.ph ], [ %185, %if.end785 ]
  %169 = phi i16 [ %conv738, %for.body742.lr.ph ], [ %184, %if.end785 ]
  %170 = phi i16 [ %conv734, %for.body742.lr.ph ], [ %183, %if.end785 ]
  %min_mcostbi.01292 = phi i32 [ 2147483647, %for.body742.lr.ph ], [ %min_mcostbi.1, %if.end785 ]
  %i.31291 = phi i32 [ 0, %for.body742.lr.ph ], [ %inc787, %if.end785 ]
  %rem7431265 = and i32 %i.31291, 1
  %tobool744 = icmp eq i32 %rem7431265, 0
  %171 = load i16, i16* %15, align 2, !tbaa !308
  %172 = load i16, i16* %arrayidx56, align 2, !tbaa !308
  br i1 %tobool744, label %if.else752, label %if.then745

if.then745:                                       ; preds = %for.body742
  %173 = load i16, i16* %bimv_x, align 2, !tbaa !308
  store i16 %173, i16* %tempmv_x, align 2, !tbaa !308
  %174 = load i16, i16* %bimv_y, align 2, !tbaa !308
  br label %if.end771

if.else752:                                       ; preds = %for.body742
  %cmp757 = icmp eq i32 %i.31291, 0
  br i1 %cmp757, label %if.else760, label %if.then759

if.then759:                                       ; preds = %if.else752
  %175 = load i16, i16* %bimv_x, align 2, !tbaa !308
  store i16 %175, i16* %tempmv_x, align 2, !tbaa !308
  %176 = load i16, i16* %bimv_y, align 2, !tbaa !308
  br label %if.end771

if.else760:                                       ; preds = %if.else752
  store i16 %170, i16* %tempmv_x, align 2, !tbaa !308
  br label %if.end771

if.end771:                                        ; preds = %if.then759, %if.else760, %if.then745
  %storemerge1348 = phi i16 [ %174, %if.then745 ], [ %169, %if.else760 ], [ %176, %if.then759 ]
  %storemerge1346 = phi i16 [ %170, %if.then745 ], [ %conv764, %if.else760 ], [ %170, %if.then759 ]
  %storemerge1312 = phi i16 [ %169, %if.then745 ], [ %conv768, %if.else760 ], [ %169, %if.then759 ]
  %pred_mv_x1.0 = phi i16 [ %166, %if.then745 ], [ %171, %if.else760 ], [ %171, %if.then759 ]
  %pred_mv_y1.0 = phi i16 [ %167, %if.then745 ], [ %172, %if.else760 ], [ %172, %if.then759 ]
  %pred_mv_x2.1 = phi i16 [ %171, %if.then745 ], [ %166, %if.else760 ], [ %166, %if.then759 ]
  %pred_mv_y2.1 = phi i16 [ %172, %if.then745 ], [ %167, %if.else760 ], [ %167, %if.then759 ]
  %iterlist.1 = phi i16 [ %conv751, %if.then745 ], [ %conv718, %if.else760 ], [ %conv718, %if.then759 ]
  store i16 %storemerge1348, i16* %tempmv_y, align 2, !tbaa !308
  store i16 %storemerge1346, i16* %bimv_x, align 2, !tbaa !308
  store i16 %storemerge1312, i16* %bimv_y, align 2, !tbaa !308
  %FMEnable772 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %168, i64 0, i32 155
  %177 = load i32, i32* %FMEnable772, align 4, !tbaa !321
  %cmp773 = icmp eq i32 %177, 3
  %conv776 = sext i16 %iterlist.1 to i32
  %178 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %168, i64 0, i32 43
  %179 = load i32, i32* %178, align 8
  br i1 %cmp773, label %if.then775, label %if.else780

if.then775:                                       ; preds = %if.end771
  %180 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %ref_idx777 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %180, i64 0, i32 32
  %181 = load i8***, i8**** %ref_idx777, align 8, !tbaa !306
  %mv778 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %180, i64 0, i32 35
  %182 = load i16****, i16***** %mv778, align 8, !tbaa !307
  %call779 = call i32 @EPZSBiPredBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext 0, i32 %conv776, i32 %cond25, i8*** %181, i16**** %182, i32 %add, i32 %add7, i32 %blocktype, i16 signext %pred_mv_x1.0, i16 signext %pred_mv_y1.0, i16 signext %pred_mv_x2.1, i16 signext %pred_mv_y2.1, i16* nonnull %bimv_x, i16* nonnull %bimv_y, i16* nonnull %tempmv_x, i16* nonnull %tempmv_y, i32 %179, i32 %min_mcostbi.01292, i32 %lambda_factor) #8
  br label %if.end785

if.else780:                                       ; preds = %if.end771
  %shr783 = ashr i32 %179, %i.31291
  %call784 = call i32 @FullPelBlockMotionBiPred(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext 0, i32 %conv776, i32 %add, i32 %add7, i32 %blocktype, i16 signext %pred_mv_x1.0, i16 signext %pred_mv_y1.0, i16 signext %pred_mv_x2.1, i16 signext %pred_mv_y2.1, i16* nonnull %bimv_x, i16* nonnull %bimv_y, i16* nonnull %tempmv_x, i16* nonnull %tempmv_y, i32 %shr783, i32 %min_mcostbi.01292, i32 %lambda_factor)
  br label %if.end785

if.end785:                                        ; preds = %if.else780, %if.then775
  %min_mcostbi.1 = phi i32 [ %call779, %if.then775 ], [ %call784, %if.else780 ]
  %183 = load i16, i16* %tempmv_x, align 2, !tbaa !308
  store i16 %183, i16* %mv_x, align 2, !tbaa !308
  %184 = load i16, i16* %tempmv_y, align 2, !tbaa !308
  store i16 %184, i16* %mv_y, align 2, !tbaa !308
  %inc787 = add nuw nsw i32 %i.31291, 1
  %185 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %BiPredMERefinements = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %185, i64 0, i32 42
  %186 = load i32, i32* %BiPredMERefinements, align 4, !tbaa !350
  %cmp740 = icmp slt i32 %i.31291, %186
  br i1 %cmp740, label %for.body742, label %for.end788.loopexit

for.end788.loopexit:                              ; preds = %if.end785
  %.pre1337 = load i16, i16* %bimv_x, align 2, !tbaa !308
  %.pre1338 = load i16, i16* %bimv_y, align 2, !tbaa !308
  %phitmp = shl i16 %183, 2
  %phitmp1342 = shl i16 %184, 2
  %phitmp1343 = shl i16 %.pre1337, 2
  %phitmp1344 = shl i16 %.pre1338, 2
  br label %for.end788

for.end788:                                       ; preds = %for.end788.loopexit, %if.then712
  %187 = phi %struct.InputParameters* [ %164, %if.then712 ], [ %185, %for.end788.loopexit ]
  %188 = phi i16 [ 0, %if.then712 ], [ %phitmp1344, %for.end788.loopexit ]
  %189 = phi i16 [ 0, %if.then712 ], [ %phitmp1343, %for.end788.loopexit ]
  %190 = phi i16 [ 0, %if.then712 ], [ %phitmp1342, %for.end788.loopexit ]
  %191 = phi i16 [ 0, %if.then712 ], [ %phitmp, %for.end788.loopexit ]
  %min_mcostbi.0.lcssa = phi i32 [ 2147483647, %if.then712 ], [ %min_mcostbi.1, %for.end788.loopexit ]
  %pred_mv_x2.0.lcssa = phi i16 [ 0, %if.then712 ], [ %pred_mv_x2.1, %for.end788.loopexit ]
  %pred_mv_y2.0.lcssa = phi i16 [ 0, %if.then712 ], [ %pred_mv_y2.1, %for.end788.loopexit ]
  %iterlist.0.lcssa = phi i16 [ %conv718, %if.then712 ], [ %iterlist.1, %for.end788.loopexit ]
  store i16 %191, i16* %mv_x, align 2, !tbaa !308
  store i16 %190, i16* %mv_y, align 2, !tbaa !308
  store i16 %189, i16* %bimv_x, align 2, !tbaa !308
  store i16 %188, i16* %bimv_y, align 2, !tbaa !308
  %BiPredMESubPel = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %187, i64 0, i32 44
  %192 = load i32, i32* %BiPredMESubPel, align 4, !tbaa !351
  %tobool801 = icmp eq i32 %192, 0
  br i1 %tobool801, label %for.cond830.preheader, label %land.lhs.true802

land.lhs.true802:                                 ; preds = %for.end788
  %DisableSubpelME803 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %187, i64 0, i32 7
  %193 = load i32, i32* %DisableSubpelME803, align 4, !tbaa !347
  %tobool804 = icmp eq i32 %193, 0
  br i1 %tobool804, label %if.then805, label %if.end812

if.then805:                                       ; preds = %land.lhs.true802
  %hadamard806 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %187, i64 0, i32 6
  %194 = load i32, i32* %hadamard806, align 8, !tbaa !338
  %tobool807 = icmp eq i32 %194, 0
  %min_mcostbi.0. = select i1 %tobool807, i32 %min_mcostbi.0.lcssa, i32 2147483647
  %conv810 = sext i16 %iterlist.0.lcssa to i32
  %call811 = call i32 @SubPelBlockSearchBiPred(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext 0, i32 %conv810, i32 %add, i32 %add7, i32 %blocktype, i16 signext %pred_mv_x2.0.lcssa, i16 signext %pred_mv_y2.0.lcssa, i16* nonnull %bimv_x, i16* nonnull %bimv_y, i16* nonnull %mv_x, i16* nonnull %mv_y, i32 9, i32 9, i32 %min_mcostbi.0., i32 %lambda_factor)
  %.pre1339 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %BiPredMESubPel813.phi.trans.insert = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %.pre1339, i64 0, i32 44
  %.pre1340 = load i32, i32* %BiPredMESubPel813.phi.trans.insert, align 4, !tbaa !351
  br label %if.end812

if.end812:                                        ; preds = %land.lhs.true802, %if.then805
  %195 = phi i32 [ %192, %land.lhs.true802 ], [ %.pre1340, %if.then805 ]
  %196 = phi %struct.InputParameters* [ %187, %land.lhs.true802 ], [ %.pre1339, %if.then805 ]
  %min_mcostbi.3 = phi i32 [ %min_mcostbi.0.lcssa, %land.lhs.true802 ], [ %call811, %if.then805 ]
  %cmp814 = icmp eq i32 %195, 2
  br i1 %cmp814, label %land.lhs.true816, label %for.cond830.preheader

land.lhs.true816:                                 ; preds = %if.end812
  %DisableSubpelME817 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %196, i64 0, i32 7
  %197 = load i32, i32* %DisableSubpelME817, align 4, !tbaa !347
  %tobool818 = icmp eq i32 %197, 0
  br i1 %tobool818, label %if.then819, label %for.cond830.preheader

if.then819:                                       ; preds = %land.lhs.true816
  %hadamard820 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %196, i64 0, i32 6
  %198 = load i32, i32* %hadamard820, align 8, !tbaa !338
  %tobool821 = icmp eq i32 %198, 0
  %min_mcostbi.3. = select i1 %tobool821, i32 %min_mcostbi.3, i32 2147483647
  %cmp825 = icmp eq i16 %iterlist.0.lcssa, 0
  %cond827 = zext i1 %cmp825 to i32
  %call828 = call i32 @SubPelBlockSearchBiPred(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext 0, i32 %cond827, i32 %add, i32 %add7, i32 %blocktype, i16 signext %67, i16 signext %68, i16* nonnull %mv_x, i16* nonnull %mv_y, i16* nonnull %bimv_x, i16* nonnull %bimv_y, i32 9, i32 9, i32 %min_mcostbi.3., i32 %lambda_factor)
  br label %for.cond830.preheader

for.cond830.preheader:                            ; preds = %for.end788, %land.lhs.true816, %if.then819, %if.end812
  br i1 %cmp6621298, label %for.cond836.preheader.lr.ph, label %for.end891

for.cond836.preheader.lr.ph:                      ; preds = %for.cond830.preheader
  %shr837 = ashr i32 %3, 2
  %add838 = add nsw i32 %shr837, %shr
  %cmp8391285 = icmp sgt i32 %shr837, 0
  %idxprom846 = sext i16 %iterlist.0.lcssa to i64
  %xor867 = xor i64 %idxprom846, 1
  %199 = sext i32 %add838 to i64
  %200 = sext i32 %add661 to i64
  br label %for.cond836.preheader

for.cond836.preheader:                            ; preds = %for.cond836.preheader.lr.ph, %for.inc889
  %indvars.iv1314 = phi i64 [ %idxprom9, %for.cond836.preheader.lr.ph ], [ %indvars.iv.next1315, %for.inc889 ]
  br i1 %cmp8391285, label %for.body841.lr.ph, label %for.inc889

for.body841.lr.ph:                                ; preds = %for.cond836.preheader
  %arrayidx843 = getelementptr inbounds i16*****, i16****** %151, i64 %indvars.iv1314
  %201 = load i16*****, i16****** %arrayidx843, align 8, !tbaa !1
  br label %for.body841

for.body841:                                      ; preds = %for.body841.lr.ph, %for.body841
  %indvars.iv = phi i64 [ %idxprom11, %for.body841.lr.ph ], [ %indvars.iv.next, %for.body841 ]
  %202 = load i16, i16* %mv_x, align 2, !tbaa !308
  %arrayidx845 = getelementptr inbounds i16****, i16***** %201, i64 %indvars.iv
  %203 = load i16****, i16***** %arrayidx845, align 8, !tbaa !1
  %arrayidx847 = getelementptr inbounds i16***, i16**** %203, i64 %idxprom846
  %204 = load i16***, i16**** %arrayidx847, align 8, !tbaa !1
  %205 = load i16**, i16*** %204, align 8, !tbaa !1
  %arrayidx850 = getelementptr inbounds i16*, i16** %205, i64 %idxprom
  %206 = load i16*, i16** %arrayidx850, align 8, !tbaa !1
  store i16 %202, i16* %206, align 2, !tbaa !308
  %207 = load i16, i16* %mv_y, align 2, !tbaa !308
  %arrayidx861 = getelementptr inbounds i16, i16* %206, i64 1
  store i16 %207, i16* %arrayidx861, align 2, !tbaa !308
  %208 = load i16, i16* %bimv_x, align 2, !tbaa !308
  %arrayidx869 = getelementptr inbounds i16***, i16**** %203, i64 %xor867
  %209 = load i16***, i16**** %arrayidx869, align 8, !tbaa !1
  %210 = load i16**, i16*** %209, align 8, !tbaa !1
  %arrayidx872 = getelementptr inbounds i16*, i16** %210, i64 %idxprom
  %211 = load i16*, i16** %arrayidx872, align 8, !tbaa !1
  store i16 %208, i16* %211, align 2, !tbaa !308
  %212 = load i16, i16* %bimv_y, align 2, !tbaa !308
  %arrayidx885 = getelementptr inbounds i16, i16* %211, i64 1
  store i16 %212, i16* %arrayidx885, align 2, !tbaa !308
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp839 = icmp slt i64 %indvars.iv.next, %199
  br i1 %cmp839, label %for.body841, label %for.inc889.loopexit

for.inc889.loopexit:                              ; preds = %for.body841
  br label %for.inc889

for.inc889:                                       ; preds = %for.inc889.loopexit, %for.cond836.preheader
  %indvars.iv.next1315 = add nsw i64 %indvars.iv1314, 1
  %cmp833 = icmp slt i64 %indvars.iv.next1315, %200
  br i1 %cmp833, label %for.cond836.preheader, label %for.end891.loopexit

for.end891.loopexit:                              ; preds = %for.inc889
  br label %for.end891

for.end891:                                       ; preds = %for.end891.loopexit, %for.cond830.preheader
  call void @llvm.lifetime.end(i64 4, i8* nonnull %156) #8
  call void @llvm.lifetime.end(i64 2, i8* nonnull %155) #8
  call void @llvm.lifetime.end(i64 2, i8* nonnull %154) #8
  call void @llvm.lifetime.end(i64 2, i8* nonnull %153) #8
  call void @llvm.lifetime.end(i64 2, i8* nonnull %152) #8
  br label %if.end892

if.end892:                                        ; preds = %for.end891, %land.lhs.true702, %for.end698
  %call893 = call i32 @ftime(%struct.timeb* nonnull %tstruct2) #8
  %time = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct2, i64 0, i32 0
  %213 = load i64, i64* %time, align 8, !tbaa !352
  %millitm = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct2, i64 0, i32 1
  %214 = load i16, i16* %millitm, align 8, !tbaa !355
  %conv895 = zext i16 %214 to i64
  %time897 = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct1, i64 0, i32 0
  %215 = load i64, i64* %time897, align 8, !tbaa !352
  %millitm899 = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct1, i64 0, i32 1
  %216 = load i16, i16* %millitm899, align 8, !tbaa !355
  %conv900 = zext i16 %216 to i64
  %tmp = sub i64 %213, %215
  %tmp1283 = mul i64 %tmp, 1000
  %add896 = sub nsw i64 %conv895, %conv900
  %sub902 = add i64 %add896, %tmp1283
  %conv903 = trunc i64 %sub902 to i32
  %217 = load i32, i32* @me_tot_time, align 4, !tbaa !13
  %add904 = add nsw i32 %conv903, %217
  store i32 %add904, i32* @me_tot_time, align 4, !tbaa !13
  %218 = load i32, i32* @me_time, align 4, !tbaa !13
  %add905 = add nsw i32 %218, %conv903
  store i32 %add905, i32* @me_time, align 4, !tbaa !13
  call void @llvm.lifetime.end(i64 16, i8* nonnull %9) #8
  call void @llvm.lifetime.end(i64 16, i8* nonnull %8) #8
  call void @llvm.lifetime.end(i64 2, i8* nonnull %1) #8
  call void @llvm.lifetime.end(i64 2, i8* nonnull %0) #8
  ret i32 %min_mcost.4
}

declare i32 @ftime(%struct.timeb*) local_unnamed_addr #3

declare void @setup_FME(i16 signext, i32, i32, i32, i32, i16******) local_unnamed_addr #3

declare void @simplified_setup_FME(i16 signext, i32, i32, i32, i32, i16******) local_unnamed_addr #3

declare i32 @FastIntegerPelBlockMotionSearch(i16**, i16 signext, i32, i32, i32, i32, i16 signext, i16 signext, i16*, i16*, i32, i32, i32) local_unnamed_addr #3

declare i32 @simplified_FastIntegerPelBlockMotionSearch(i16**, i16 signext, i32, i32, i32, i32, i16 signext, i16 signext, i16*, i16*, i32, i32, i32) local_unnamed_addr #3

declare i32 @EPZSPelBlockMotionSearch(i16**, i16 signext, i32, i32, i8***, i16****, i32, i32, i32, i16 signext, i16 signext, i16*, i16*, i32, i32, i32) local_unnamed_addr #3

declare i32 @FastSubPelBlockMotionSearch(i16**, i16 signext, i32, i32, i32, i32, i16 signext, i16 signext, i16*, i16*, i32, i32, i32, i32, i32) local_unnamed_addr #3

declare i32 @simplified_FastSubPelBlockMotionSearch(i16**, i16 signext, i32, i32, i32, i32, i16 signext, i16 signext, i16*, i16*, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @FindSkipModeMotionVector() local_unnamed_addr #0 {
entry:
  %pmv = alloca i32, align 4
  %mb_a = alloca %struct.pix_pos, align 4
  %mb_b = alloca %struct.pix_pos, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %all_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 75
  %1 = load i16******, i16******* %all_mv1, align 8, !tbaa !343
  %2 = bitcast i32* %pmv to i8*
  call void @llvm.lifetime.start(i64 4, i8* nonnull %2) #8
  %3 = bitcast %struct.pix_pos* %mb_a to i8*
  call void @llvm.lifetime.start(i64 24, i8* nonnull %3) #8
  %4 = bitcast %struct.pix_pos* %mb_b to i8*
  call void @llvm.lifetime.start(i64 24, i8* nonnull %4) #8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 55
  %5 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8, !tbaa !293
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 3
  %6 = load i32, i32* %current_mb_nr, align 4, !tbaa !294
  %idxprom = sext i32 %6 to i64
  call void @getLuma4x4Neighbour(i32 %6, i32 0, i32 0, i32 -1, i32 0, %struct.pix_pos* nonnull %mb_a) #8
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %current_mb_nr3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i64 0, i32 3
  %8 = load i32, i32* %current_mb_nr3, align 4, !tbaa !294
  call void @getLuma4x4Neighbour(i32 %8, i32 0, i32 0, i32 0, i32 -1, %struct.pix_pos* nonnull %mb_b) #8
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 0
  %9 = load i32, i32* %available, align 4, !tbaa !322
  %tobool = icmp eq i32 %9, 0
  br i1 %tobool, label %if.end37, label %if.then

if.then:                                          ; preds = %entry
  %10 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %10, i64 0, i32 35
  %11 = load i16****, i16***** %mv, align 8, !tbaa !307
  %12 = load i16***, i16**** %11, align 8, !tbaa !1
  %pos_y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 5
  %13 = load i32, i32* %pos_y, align 4, !tbaa !326
  %idxprom5 = sext i32 %13 to i64
  %arrayidx6 = getelementptr inbounds i16**, i16*** %12, i64 %idxprom5
  %14 = load i16**, i16*** %arrayidx6, align 8, !tbaa !1
  %pos_x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 4
  %15 = load i32, i32* %pos_x, align 4, !tbaa !327
  %idxprom7 = sext i32 %15 to i64
  %arrayidx8 = getelementptr inbounds i16*, i16** %14, i64 %idxprom7
  %16 = load i16*, i16** %arrayidx8, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds i16, i16* %16, i64 1
  %17 = load i16, i16* %arrayidx9, align 2, !tbaa !308
  %conv = sext i16 %17 to i32
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %10, i64 0, i32 32
  %18 = load i8***, i8**** %ref_idx, align 8, !tbaa !306
  %19 = load i8**, i8*** %18, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds i8*, i8** %19, i64 %idxprom5
  %20 = load i8*, i8** %arrayidx13, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds i8, i8* %20, i64 %idxprom7
  %21 = load i8, i8* %arrayidx16, align 1, !tbaa !328
  %conv17 = sext i8 %21 to i32
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %5, i64 %idxprom, i32 19
  %22 = load i32, i32* %mb_field, align 8, !tbaa !329
  %tobool18 = icmp eq i32 %22, 0
  %.pre = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %mb_data28.phi.trans.insert = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %.pre, i64 0, i32 55
  %.pre225 = load %struct.macroblock*, %struct.macroblock** %mb_data28.phi.trans.insert, align 8, !tbaa !293
  %mb_addr29.phi.trans.insert = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 1
  %.pre226 = load i32, i32* %mb_addr29.phi.trans.insert, align 4, !tbaa !330
  %idxprom30.phi.trans.insert = sext i32 %.pre226 to i64
  %mb_field32.phi.trans.insert = getelementptr inbounds %struct.macroblock, %struct.macroblock* %.pre225, i64 %idxprom30.phi.trans.insert, i32 19
  %.pre227 = load i32, i32* %mb_field32.phi.trans.insert, align 8, !tbaa !329
  %tobool33 = icmp eq i32 %.pre227, 0
  br i1 %tobool18, label %land.lhs.true27, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  br i1 %tobool33, label %if.then24, label %if.end37

if.then24:                                        ; preds = %land.lhs.true
  %div = sdiv i32 %conv, 2
  %mul = shl nsw i32 %conv17, 1
  br label %if.end37

land.lhs.true27:                                  ; preds = %if.then
  br i1 %tobool33, label %if.end37, label %if.then34

if.then34:                                        ; preds = %land.lhs.true27
  %mul35 = shl nsw i32 %conv, 1
  %shr = ashr i32 %conv17, 1
  br label %if.end37

if.end37:                                         ; preds = %if.then24, %land.lhs.true, %land.lhs.true27, %entry, %if.then34
  %a_mv_y.1 = phi i32 [ %mul35, %if.then34 ], [ %conv, %land.lhs.true27 ], [ 0, %entry ], [ %div, %if.then24 ], [ %conv, %land.lhs.true ]
  %a_ref_idx.1 = phi i32 [ %shr, %if.then34 ], [ %conv17, %land.lhs.true27 ], [ 0, %entry ], [ %mul, %if.then24 ], [ %conv17, %land.lhs.true ]
  %available38 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 0
  %23 = load i32, i32* %available38, align 4, !tbaa !322
  %tobool39 = icmp eq i32 %23, 0
  br i1 %tobool39, label %if.end86, label %if.then40

if.then40:                                        ; preds = %if.end37
  %24 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %mv41 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %24, i64 0, i32 35
  %25 = load i16****, i16***** %mv41, align 8, !tbaa !307
  %26 = load i16***, i16**** %25, align 8, !tbaa !1
  %pos_y43 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 5
  %27 = load i32, i32* %pos_y43, align 4, !tbaa !326
  %idxprom44 = sext i32 %27 to i64
  %arrayidx45 = getelementptr inbounds i16**, i16*** %26, i64 %idxprom44
  %28 = load i16**, i16*** %arrayidx45, align 8, !tbaa !1
  %pos_x46 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 4
  %29 = load i32, i32* %pos_x46, align 4, !tbaa !327
  %idxprom47 = sext i32 %29 to i64
  %arrayidx48 = getelementptr inbounds i16*, i16** %28, i64 %idxprom47
  %30 = load i16*, i16** %arrayidx48, align 8, !tbaa !1
  %arrayidx49 = getelementptr inbounds i16, i16* %30, i64 1
  %31 = load i16, i16* %arrayidx49, align 2, !tbaa !308
  %conv50 = sext i16 %31 to i32
  %ref_idx51 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %24, i64 0, i32 32
  %32 = load i8***, i8**** %ref_idx51, align 8, !tbaa !306
  %33 = load i8**, i8*** %32, align 8, !tbaa !1
  %arrayidx55 = getelementptr inbounds i8*, i8** %33, i64 %idxprom44
  %34 = load i8*, i8** %arrayidx55, align 8, !tbaa !1
  %arrayidx58 = getelementptr inbounds i8, i8* %34, i64 %idxprom47
  %35 = load i8, i8* %arrayidx58, align 1, !tbaa !328
  %conv59 = sext i8 %35 to i32
  %mb_field60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %5, i64 %idxprom, i32 19
  %36 = load i32, i32* %mb_field60, align 8, !tbaa !329
  %tobool61 = icmp eq i32 %36, 0
  %.pre228 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %mb_data76.phi.trans.insert = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %.pre228, i64 0, i32 55
  %.pre229 = load %struct.macroblock*, %struct.macroblock** %mb_data76.phi.trans.insert, align 8, !tbaa !293
  %mb_addr77.phi.trans.insert = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 1
  %.pre230 = load i32, i32* %mb_addr77.phi.trans.insert, align 4, !tbaa !330
  %idxprom78.phi.trans.insert = sext i32 %.pre230 to i64
  %mb_field80.phi.trans.insert = getelementptr inbounds %struct.macroblock, %struct.macroblock* %.pre229, i64 %idxprom78.phi.trans.insert, i32 19
  %.pre231 = load i32, i32* %mb_field80.phi.trans.insert, align 8, !tbaa !329
  %tobool81 = icmp eq i32 %.pre231, 0
  br i1 %tobool61, label %land.lhs.true75, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %if.then40
  br i1 %tobool81, label %if.then69, label %if.end86

if.then69:                                        ; preds = %land.lhs.true62
  %div70 = sdiv i32 %conv50, 2
  %mul71 = shl nsw i32 %conv59, 1
  br label %if.end86

land.lhs.true75:                                  ; preds = %if.then40
  br i1 %tobool81, label %if.end86, label %if.then82

if.then82:                                        ; preds = %land.lhs.true75
  %mul83 = shl nsw i32 %conv50, 1
  %shr84 = ashr i32 %conv59, 1
  br label %if.end86

if.end86:                                         ; preds = %if.then69, %land.lhs.true62, %land.lhs.true75, %if.end37, %if.then82
  %b_mv_y.1 = phi i32 [ %mul83, %if.then82 ], [ %conv50, %land.lhs.true75 ], [ 0, %if.end37 ], [ %div70, %if.then69 ], [ %conv50, %land.lhs.true62 ]
  %b_ref_idx.1 = phi i32 [ %shr84, %if.then82 ], [ %conv59, %land.lhs.true75 ], [ 0, %if.end37 ], [ %mul71, %if.then69 ], [ %conv59, %land.lhs.true62 ]
  br i1 %tobool, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.end86
  %cmp = icmp eq i32 %a_ref_idx.1, 0
  br i1 %cmp, label %land.lhs.true90, label %land.end

land.lhs.true90:                                  ; preds = %cond.false
  %37 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %mv91 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %37, i64 0, i32 35
  %38 = load i16****, i16***** %mv91, align 8, !tbaa !307
  %39 = load i16***, i16**** %38, align 8, !tbaa !1
  %pos_y93 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 5
  %40 = load i32, i32* %pos_y93, align 4, !tbaa !326
  %idxprom94 = sext i32 %40 to i64
  %arrayidx95 = getelementptr inbounds i16**, i16*** %39, i64 %idxprom94
  %41 = load i16**, i16*** %arrayidx95, align 8, !tbaa !1
  %pos_x96 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 4
  %42 = load i32, i32* %pos_x96, align 4, !tbaa !327
  %idxprom97 = sext i32 %42 to i64
  %arrayidx98 = getelementptr inbounds i16*, i16** %41, i64 %idxprom97
  %43 = load i16*, i16** %arrayidx98, align 8, !tbaa !1
  %44 = load i16, i16* %43, align 2, !tbaa !308
  %cmp101 = icmp eq i16 %44, 0
  %cmp103 = icmp eq i32 %a_mv_y.1, 0
  %cmp103. = and i1 %cmp103, %cmp101
  br label %land.end

land.end:                                         ; preds = %land.lhs.true90, %cond.false
  %45 = phi i1 [ false, %cond.false ], [ %cmp103., %land.lhs.true90 ]
  %cond = zext i1 %45 to i32
  br label %cond.end

cond.end:                                         ; preds = %if.end86, %land.end
  %cond105 = phi i32 [ %cond, %land.end ], [ 1, %if.end86 ]
  br i1 %tobool39, label %if.end177, label %cond.false109

cond.false109:                                    ; preds = %cond.end
  %cmp110 = icmp eq i32 %b_ref_idx.1, 0
  br i1 %cmp110, label %land.lhs.true112, label %cond.end130

land.lhs.true112:                                 ; preds = %cond.false109
  %46 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %mv113 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %46, i64 0, i32 35
  %47 = load i16****, i16***** %mv113, align 8, !tbaa !307
  %48 = load i16***, i16**** %47, align 8, !tbaa !1
  %pos_y115 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 5
  %49 = load i32, i32* %pos_y115, align 4, !tbaa !326
  %idxprom116 = sext i32 %49 to i64
  %arrayidx117 = getelementptr inbounds i16**, i16*** %48, i64 %idxprom116
  %50 = load i16**, i16*** %arrayidx117, align 8, !tbaa !1
  %pos_x118 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 4
  %51 = load i32, i32* %pos_x118, align 4, !tbaa !327
  %idxprom119 = sext i32 %51 to i64
  %arrayidx120 = getelementptr inbounds i16*, i16** %50, i64 %idxprom119
  %52 = load i16*, i16** %arrayidx120, align 8, !tbaa !1
  %53 = load i16, i16* %52, align 2, !tbaa !308
  %cmp123 = icmp eq i16 %53, 0
  %cmp126 = icmp eq i32 %b_mv_y.1, 0
  %cmp126. = and i1 %cmp126, %cmp123
  br label %cond.end130

cond.end130:                                      ; preds = %land.lhs.true112, %cond.false109
  %cond131 = phi i1 [ false, %cond.false109 ], [ %cmp126., %land.lhs.true112 ]
  %tobool133 = icmp ne i32 %cond105, 0
  %or.cond = or i1 %tobool133, %cond131
  br i1 %or.cond, label %if.end177, label %if.else

if.else:                                          ; preds = %cond.end130
  %arraydecay = bitcast i32* %pmv to i16*
  %54 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %ref_idx151 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %54, i64 0, i32 32
  %55 = load i8***, i8**** %ref_idx151, align 8, !tbaa !306
  %56 = load i8**, i8*** %55, align 8, !tbaa !1
  %mv153 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %54, i64 0, i32 35
  %57 = load i16****, i16***** %mv153, align 8, !tbaa !307
  %58 = load i16***, i16**** %57, align 8, !tbaa !1
  call void @SetMotionVectorPredictor(i16* nonnull %arraydecay, i8** %56, i16*** %58, i16 signext 0, i32 0, i32 0, i32 0, i32 16, i32 16)
  %59 = load i32, i32* %pmv, align 4
  br label %if.end177

if.end177:                                        ; preds = %cond.end, %cond.end130, %if.else
  %.sink342 = phi i32 [ %59, %if.else ], [ 0, %cond.end130 ], [ 0, %cond.end ]
  %60 = bitcast i16****** %1 to i32******
  %61 = load i32*****, i32****** %60, align 8, !tbaa !1
  %62 = load i32****, i32***** %61, align 8, !tbaa !1
  %63 = load i32***, i32**** %62, align 8, !tbaa !1
  %64 = load i32**, i32*** %63, align 8, !tbaa !1
  %65 = load i32*, i32** %64, align 8, !tbaa !1
  store i32 %.sink342, i32* %65, align 2
  %66 = load i16*****, i16****** %1, align 8, !tbaa !1
  %arrayidx166.1 = getelementptr inbounds i16****, i16***** %66, i64 1
  %67 = bitcast i16***** %arrayidx166.1 to i32*****
  %68 = load i32****, i32***** %67, align 8, !tbaa !1
  %69 = load i32***, i32**** %68, align 8, !tbaa !1
  %70 = load i32**, i32*** %69, align 8, !tbaa !1
  %71 = load i32*, i32** %70, align 8, !tbaa !1
  store i32 %.sink342, i32* %71, align 2
  %72 = load i16*****, i16****** %1, align 8, !tbaa !1
  %arrayidx166.2 = getelementptr inbounds i16****, i16***** %72, i64 2
  %73 = bitcast i16***** %arrayidx166.2 to i32*****
  %74 = load i32****, i32***** %73, align 8, !tbaa !1
  %75 = load i32***, i32**** %74, align 8, !tbaa !1
  %76 = load i32**, i32*** %75, align 8, !tbaa !1
  %77 = load i32*, i32** %76, align 8, !tbaa !1
  store i32 %.sink342, i32* %77, align 2
  %78 = load i16*****, i16****** %1, align 8, !tbaa !1
  %arrayidx166.3 = getelementptr inbounds i16****, i16***** %78, i64 3
  %79 = bitcast i16***** %arrayidx166.3 to i32*****
  %80 = load i32****, i32***** %79, align 8, !tbaa !1
  %81 = load i32***, i32**** %80, align 8, !tbaa !1
  %82 = load i32**, i32*** %81, align 8, !tbaa !1
  %83 = load i32*, i32** %82, align 8, !tbaa !1
  store i32 %.sink342, i32* %83, align 2
  %arrayidx164.1 = getelementptr inbounds i16*****, i16****** %1, i64 1
  %84 = bitcast i16****** %arrayidx164.1 to i32******
  %85 = load i32*****, i32****** %84, align 8, !tbaa !1
  %86 = load i32****, i32***** %85, align 8, !tbaa !1
  %87 = load i32***, i32**** %86, align 8, !tbaa !1
  %88 = load i32**, i32*** %87, align 8, !tbaa !1
  %89 = load i32*, i32** %88, align 8, !tbaa !1
  store i32 %.sink342, i32* %89, align 2
  %90 = load i16*****, i16****** %arrayidx164.1, align 8, !tbaa !1
  %arrayidx166.1.1 = getelementptr inbounds i16****, i16***** %90, i64 1
  %91 = bitcast i16***** %arrayidx166.1.1 to i32*****
  %92 = load i32****, i32***** %91, align 8, !tbaa !1
  %93 = load i32***, i32**** %92, align 8, !tbaa !1
  %94 = load i32**, i32*** %93, align 8, !tbaa !1
  %95 = load i32*, i32** %94, align 8, !tbaa !1
  store i32 %.sink342, i32* %95, align 2
  %96 = load i16*****, i16****** %arrayidx164.1, align 8, !tbaa !1
  %arrayidx166.2.1 = getelementptr inbounds i16****, i16***** %96, i64 2
  %97 = bitcast i16***** %arrayidx166.2.1 to i32*****
  %98 = load i32****, i32***** %97, align 8, !tbaa !1
  %99 = load i32***, i32**** %98, align 8, !tbaa !1
  %100 = load i32**, i32*** %99, align 8, !tbaa !1
  %101 = load i32*, i32** %100, align 8, !tbaa !1
  store i32 %.sink342, i32* %101, align 2
  %102 = load i16*****, i16****** %arrayidx164.1, align 8, !tbaa !1
  %arrayidx166.3.1 = getelementptr inbounds i16****, i16***** %102, i64 3
  %103 = bitcast i16***** %arrayidx166.3.1 to i32*****
  %104 = load i32****, i32***** %103, align 8, !tbaa !1
  %105 = load i32***, i32**** %104, align 8, !tbaa !1
  %106 = load i32**, i32*** %105, align 8, !tbaa !1
  %107 = load i32*, i32** %106, align 8, !tbaa !1
  store i32 %.sink342, i32* %107, align 2
  %arrayidx164.2 = getelementptr inbounds i16*****, i16****** %1, i64 2
  %108 = bitcast i16****** %arrayidx164.2 to i32******
  %109 = load i32*****, i32****** %108, align 8, !tbaa !1
  %110 = load i32****, i32***** %109, align 8, !tbaa !1
  %111 = load i32***, i32**** %110, align 8, !tbaa !1
  %112 = load i32**, i32*** %111, align 8, !tbaa !1
  %113 = load i32*, i32** %112, align 8, !tbaa !1
  store i32 %.sink342, i32* %113, align 2
  %114 = load i16*****, i16****** %arrayidx164.2, align 8, !tbaa !1
  %arrayidx166.1.2 = getelementptr inbounds i16****, i16***** %114, i64 1
  %115 = bitcast i16***** %arrayidx166.1.2 to i32*****
  %116 = load i32****, i32***** %115, align 8, !tbaa !1
  %117 = load i32***, i32**** %116, align 8, !tbaa !1
  %118 = load i32**, i32*** %117, align 8, !tbaa !1
  %119 = load i32*, i32** %118, align 8, !tbaa !1
  store i32 %.sink342, i32* %119, align 2
  %120 = load i16*****, i16****** %arrayidx164.2, align 8, !tbaa !1
  %arrayidx166.2.2 = getelementptr inbounds i16****, i16***** %120, i64 2
  %121 = bitcast i16***** %arrayidx166.2.2 to i32*****
  %122 = load i32****, i32***** %121, align 8, !tbaa !1
  %123 = load i32***, i32**** %122, align 8, !tbaa !1
  %124 = load i32**, i32*** %123, align 8, !tbaa !1
  %125 = load i32*, i32** %124, align 8, !tbaa !1
  store i32 %.sink342, i32* %125, align 2
  %126 = load i16*****, i16****** %arrayidx164.2, align 8, !tbaa !1
  %arrayidx166.3.2 = getelementptr inbounds i16****, i16***** %126, i64 3
  %127 = bitcast i16***** %arrayidx166.3.2 to i32*****
  %128 = load i32****, i32***** %127, align 8, !tbaa !1
  %129 = load i32***, i32**** %128, align 8, !tbaa !1
  %130 = load i32**, i32*** %129, align 8, !tbaa !1
  %131 = load i32*, i32** %130, align 8, !tbaa !1
  store i32 %.sink342, i32* %131, align 2
  %arrayidx164.3 = getelementptr inbounds i16*****, i16****** %1, i64 3
  %132 = bitcast i16****** %arrayidx164.3 to i32******
  %133 = load i32*****, i32****** %132, align 8, !tbaa !1
  %134 = load i32****, i32***** %133, align 8, !tbaa !1
  %135 = load i32***, i32**** %134, align 8, !tbaa !1
  %136 = load i32**, i32*** %135, align 8, !tbaa !1
  %137 = load i32*, i32** %136, align 8, !tbaa !1
  store i32 %.sink342, i32* %137, align 2
  %138 = load i16*****, i16****** %arrayidx164.3, align 8, !tbaa !1
  %arrayidx166.1.3 = getelementptr inbounds i16****, i16***** %138, i64 1
  %139 = bitcast i16***** %arrayidx166.1.3 to i32*****
  %140 = load i32****, i32***** %139, align 8, !tbaa !1
  %141 = load i32***, i32**** %140, align 8, !tbaa !1
  %142 = load i32**, i32*** %141, align 8, !tbaa !1
  %143 = load i32*, i32** %142, align 8, !tbaa !1
  store i32 %.sink342, i32* %143, align 2
  %144 = load i16*****, i16****** %arrayidx164.3, align 8, !tbaa !1
  %arrayidx166.2.3 = getelementptr inbounds i16****, i16***** %144, i64 2
  %145 = bitcast i16***** %arrayidx166.2.3 to i32*****
  %146 = load i32****, i32***** %145, align 8, !tbaa !1
  %147 = load i32***, i32**** %146, align 8, !tbaa !1
  %148 = load i32**, i32*** %147, align 8, !tbaa !1
  %149 = load i32*, i32** %148, align 8, !tbaa !1
  store i32 %.sink342, i32* %149, align 2
  %150 = load i16*****, i16****** %arrayidx164.3, align 8, !tbaa !1
  %arrayidx166.3.3 = getelementptr inbounds i16****, i16***** %150, i64 3
  %151 = bitcast i16***** %arrayidx166.3.3 to i32*****
  %152 = load i32****, i32***** %151, align 8, !tbaa !1
  %153 = load i32***, i32**** %152, align 8, !tbaa !1
  %154 = load i32**, i32*** %153, align 8, !tbaa !1
  %155 = load i32*, i32** %154, align 8, !tbaa !1
  store i32 %.sink342, i32* %155, align 2
  call void @llvm.lifetime.end(i64 24, i8* nonnull %4) #8
  call void @llvm.lifetime.end(i64 24, i8* nonnull %3) #8
  call void @llvm.lifetime.end(i64 4, i8* nonnull %2) #8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @GetSkipCostMB(i32 %lambda_factor) local_unnamed_addr #0 {
entry:
  %diff = alloca [16 x i32], align 16
  %curr_diff = alloca [8 x [8 x i32]], align 16
  %diff8x8 = alloca [64 x i32], align 16
  %0 = bitcast [16 x i32]* %diff to i8*
  call void @llvm.lifetime.start(i64 64, i8* nonnull %0) #8
  %1 = bitcast [8 x [8 x i32]]* %curr_diff to i8*
  call void @llvm.lifetime.start(i64 256, i8* nonnull %1) #8
  %2 = bitcast [64 x i32]* %diff8x8 to i8*
  call void @llvm.lifetime.start(i64 256, i8* nonnull %2) #8
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %arraydecay70 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 0
  %.pre.pre = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %3 = bitcast [64 x i32]* %diff8x8 to i8*
  %4 = bitcast [8 x [8 x i32]]* %curr_diff to i8*
  %arrayidx63.1 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 8
  %5 = bitcast i32* %arrayidx63.1 to i8*
  %arrayidx65.1 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 1
  %6 = bitcast [8 x i32]* %arrayidx65.1 to i8*
  %arrayidx63.2 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 16
  %7 = bitcast i32* %arrayidx63.2 to i8*
  %arrayidx65.2 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 2
  %8 = bitcast [8 x i32]* %arrayidx65.2 to i8*
  %arrayidx63.3 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 24
  %9 = bitcast i32* %arrayidx63.3 to i8*
  %arrayidx65.3 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 3
  %10 = bitcast [8 x i32]* %arrayidx65.3 to i8*
  %arrayidx63.4 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 32
  %11 = bitcast i32* %arrayidx63.4 to i8*
  %arrayidx65.4 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 4
  %12 = bitcast [8 x i32]* %arrayidx65.4 to i8*
  %arrayidx63.5 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 40
  %13 = bitcast i32* %arrayidx63.5 to i8*
  %arrayidx65.5 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 5
  %14 = bitcast [8 x i32]* %arrayidx65.5 to i8*
  %arrayidx63.6 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 48
  %15 = bitcast i32* %arrayidx63.6 to i8*
  %arrayidx65.6 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 6
  %16 = bitcast [8 x i32]* %arrayidx65.6 to i8*
  %arrayidx63.7 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 56
  %17 = bitcast i32* %arrayidx63.7 to i8*
  %arrayidx65.7 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 7
  %18 = bitcast [8 x i32]* %arrayidx65.7 to i8*
  %19 = bitcast [16 x i32]* %diff to <4 x i32>*
  %arrayidx37.1 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 4
  %20 = bitcast i32* %arrayidx37.1 to <4 x i32>*
  %arrayidx37.2 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 8
  %21 = bitcast i32* %arrayidx37.2 to <4 x i32>*
  %arrayidx37.3 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 12
  %22 = bitcast i32* %arrayidx37.3 to <4 x i32>*
  br label %for.body

for.body:                                         ; preds = %for.inc75, %entry
  %.pre = phi %struct.ImageParameters* [ %.pre.pre, %entry ], [ %47, %for.inc75 ]
  %block.0133 = phi i32 [ 0, %entry ], [ %inc76, %for.inc75 ]
  %cost.0132 = phi i32 [ 0, %entry ], [ %cost.4, %for.inc75 ]
  %div = sdiv i32 %block.0133, 2
  %shl = shl i32 %div, 3
  %rem = srem i32 %block.0133, 2
  %shl1 = shl nsw i32 %rem, 3
  %23 = sext i32 %shl1 to i64
  %24 = sext i32 %shl to i64
  %25 = or i32 %shl1, 4
  %26 = sext i32 %25 to i64
  %27 = or i32 %shl, 4
  %28 = sext i32 %27 to i64
  br label %for.body4

for.body4:                                        ; preds = %for.body, %for.inc48
  %29 = phi %struct.ImageParameters* [ %.pre, %for.body ], [ %47, %for.inc48 ]
  %indvars.iv148 = phi i64 [ %24, %for.body ], [ %indvars.iv.next149, %for.inc48 ]
  %cost.1128 = phi i32 [ %cost.0132, %for.body ], [ %cost.3, %for.inc48 ]
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i64 0, i32 38
  %30 = load i32, i32* %opix_y, align 4, !tbaa !312
  %31 = trunc i64 %indvars.iv148 to i32
  %add5 = add nsw i32 %30, %31
  %32 = sub nuw nsw i64 %indvars.iv148, %24
  %33 = sext i32 %add5 to i64
  %34 = add nsw i64 %33, 1
  %35 = or i64 %indvars.iv148, 1
  %36 = or i64 %32, 1
  %37 = add nsw i64 %33, 2
  %38 = or i64 %indvars.iv148, 2
  %39 = or i64 %32, 2
  %40 = add nsw i64 %33, 3
  %41 = or i64 %indvars.iv148, 3
  %42 = or i64 %32, 3
  br label %for.body9

for.body9:                                        ; preds = %for.body4, %for.inc45
  %43 = phi %struct.ImageParameters* [ %29, %for.body4 ], [ %47, %for.inc45 ]
  %indvars.iv145 = phi i64 [ %23, %for.body4 ], [ %indvars.iv.next146, %for.inc45 ]
  %cost.2126 = phi i32 [ %cost.1128, %for.body4 ], [ %cost.3, %for.inc45 ]
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %43, i64 0, i32 37
  %44 = load i32, i32* %opix_x, align 8, !tbaa !311
  %45 = trunc i64 %indvars.iv145 to i32
  %add10 = add nsw i32 %44, %45
  tail call void @LumaPrediction4x4(i32 %45, i32 %31, i32 0, i32 0, i32 0, i16 signext 0, i16 signext 0) #8
  %46 = load i16**, i16*** @imgY_org, align 8, !tbaa !1
  %47 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %48 = sub nuw nsw i64 %indvars.iv145, %23
  %49 = sext i32 %add10 to i64
  br label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body9
  %arrayidx = getelementptr inbounds i16*, i16** %46, i64 %33
  %50 = load i16*, i16** %arrayidx, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds i16, i16* %50, i64 %49
  %arrayidx26 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %47, i64 0, i32 45, i64 %indvars.iv148, i64 %indvars.iv145
  %arrayidx35 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 %32, i64 %48
  %51 = bitcast i16* %arrayidx20 to <4 x i16>*
  %52 = load <4 x i16>, <4 x i16>* %51, align 2, !tbaa !308
  %53 = zext <4 x i16> %52 to <4 x i32>
  %54 = bitcast i16* %arrayidx26 to <4 x i16>*
  %55 = load <4 x i16>, <4 x i16>* %54, align 2, !tbaa !308
  %56 = zext <4 x i16> %55 to <4 x i32>
  %57 = sub nsw <4 x i32> %53, %56
  %58 = bitcast i32* %arrayidx35 to <4 x i32>*
  store <4 x i32> %57, <4 x i32>* %58, align 16, !tbaa !13
  store <4 x i32> %57, <4 x i32>* %19, align 16, !tbaa !13
  %arrayidx.1 = getelementptr inbounds i16*, i16** %46, i64 %34
  %59 = load i16*, i16** %arrayidx.1, align 8, !tbaa !1
  %arrayidx20.1 = getelementptr inbounds i16, i16* %59, i64 %49
  %arrayidx26.1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %47, i64 0, i32 45, i64 %35, i64 %indvars.iv145
  %arrayidx35.1 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 %36, i64 %48
  %60 = bitcast i16* %arrayidx20.1 to <4 x i16>*
  %61 = load <4 x i16>, <4 x i16>* %60, align 2, !tbaa !308
  %62 = zext <4 x i16> %61 to <4 x i32>
  %63 = bitcast i16* %arrayidx26.1 to <4 x i16>*
  %64 = load <4 x i16>, <4 x i16>* %63, align 2, !tbaa !308
  %65 = zext <4 x i16> %64 to <4 x i32>
  %66 = sub nsw <4 x i32> %62, %65
  %67 = bitcast i32* %arrayidx35.1 to <4 x i32>*
  store <4 x i32> %66, <4 x i32>* %67, align 16, !tbaa !13
  store <4 x i32> %66, <4 x i32>* %20, align 16, !tbaa !13
  %arrayidx.2 = getelementptr inbounds i16*, i16** %46, i64 %37
  %68 = load i16*, i16** %arrayidx.2, align 8, !tbaa !1
  %arrayidx20.2 = getelementptr inbounds i16, i16* %68, i64 %49
  %arrayidx26.2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %47, i64 0, i32 45, i64 %38, i64 %indvars.iv145
  %arrayidx35.2 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 %39, i64 %48
  %69 = bitcast i16* %arrayidx20.2 to <4 x i16>*
  %70 = load <4 x i16>, <4 x i16>* %69, align 2, !tbaa !308
  %71 = zext <4 x i16> %70 to <4 x i32>
  %72 = bitcast i16* %arrayidx26.2 to <4 x i16>*
  %73 = load <4 x i16>, <4 x i16>* %72, align 2, !tbaa !308
  %74 = zext <4 x i16> %73 to <4 x i32>
  %75 = sub nsw <4 x i32> %71, %74
  %76 = bitcast i32* %arrayidx35.2 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %76, align 16, !tbaa !13
  store <4 x i32> %75, <4 x i32>* %21, align 16, !tbaa !13
  %arrayidx.3 = getelementptr inbounds i16*, i16** %46, i64 %40
  %77 = load i16*, i16** %arrayidx.3, align 8, !tbaa !1
  %arrayidx20.3 = getelementptr inbounds i16, i16* %77, i64 %49
  %arrayidx26.3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %47, i64 0, i32 45, i64 %41, i64 %indvars.iv145
  %arrayidx35.3 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 %42, i64 %48
  %78 = bitcast i16* %arrayidx20.3 to <4 x i16>*
  %79 = load <4 x i16>, <4 x i16>* %78, align 2, !tbaa !308
  %80 = zext <4 x i16> %79 to <4 x i32>
  %81 = bitcast i16* %arrayidx26.3 to <4 x i16>*
  %82 = load <4 x i16>, <4 x i16>* %81, align 2, !tbaa !308
  %83 = zext <4 x i16> %82 to <4 x i32>
  %84 = sub nsw <4 x i32> %80, %83
  %85 = bitcast i32* %arrayidx35.3 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %85, align 16, !tbaa !13
  store <4 x i32> %84, <4 x i32>* %22, align 16, !tbaa !13
  %86 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i64 0, i32 106
  %87 = load i32, i32* %rdopt, align 8, !tbaa !309
  %cmp42 = icmp eq i32 %87, 0
  br i1 %cmp42, label %land.lhs.true, label %if.then

land.lhs.true:                                    ; preds = %for.cond14.preheader
  %Transform8x8Mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i64 0, i32 144
  %88 = load i32, i32* %Transform8x8Mode, align 4, !tbaa !339
  %tobool = icmp eq i32 %88, 0
  br i1 %tobool, label %if.then, label %for.inc45

if.then:                                          ; preds = %land.lhs.true, %for.cond14.preheader
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i64 0, i32 6
  %89 = load i32, i32* %hadamard, align 8, !tbaa !338
  %call = call i32 @SATD(i32* nonnull %arraydecay, i32 %89)
  %add44 = add nsw i32 %call, %cost.2126
  br label %for.inc45

for.inc45:                                        ; preds = %land.lhs.true, %if.then
  %cost.3 = phi i32 [ %cost.2126, %land.lhs.true ], [ %add44, %if.then ]
  %indvars.iv.next146 = add nsw i64 %indvars.iv145, 4
  %cmp8 = icmp slt i64 %indvars.iv145, %26
  br i1 %cmp8, label %for.body9, label %for.inc48

for.inc48:                                        ; preds = %for.inc45
  %indvars.iv.next149 = add nsw i64 %indvars.iv148, 4
  %cmp3 = icmp slt i64 %indvars.iv148, %28
  br i1 %cmp3, label %for.body4, label %for.end50

for.end50:                                        ; preds = %for.inc48
  br i1 %cmp42, label %land.lhs.true54, label %for.inc75

land.lhs.true54:                                  ; preds = %for.end50
  %Transform8x8Mode55 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i64 0, i32 144
  %90 = load i32, i32* %Transform8x8Mode55, align 4, !tbaa !339
  %tobool56 = icmp eq i32 %90, 0
  br i1 %tobool56, label %for.inc75, label %for.body61.preheader

for.body61.preheader:                             ; preds = %land.lhs.true54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %3, i8* nonnull %4, i64 32, i32 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 32, i32 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 32, i32 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 32, i32 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 32, i32 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 32, i32 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 32, i32 16, i1 false)
  %hadamard71 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i64 0, i32 6
  %91 = load i32, i32* %hadamard71, align 8, !tbaa !338
  %call72 = call i32 @SATD8X8(i32* nonnull %arraydecay70, i32 %91)
  %add73 = add nsw i32 %call72, %cost.3
  br label %for.inc75

for.inc75:                                        ; preds = %land.lhs.true54, %for.end50, %for.body61.preheader
  %cost.4 = phi i32 [ %add73, %for.body61.preheader ], [ %cost.3, %land.lhs.true54 ], [ %cost.3, %for.end50 ]
  %inc76 = add nuw nsw i32 %block.0133, 1
  %exitcond156 = icmp eq i32 %inc76, 4
  br i1 %exitcond156, label %for.end77, label %for.body

for.end77:                                        ; preds = %for.inc75
  call void @llvm.lifetime.end(i64 256, i8* nonnull %2) #8
  call void @llvm.lifetime.end(i64 256, i8* nonnull %1) #8
  call void @llvm.lifetime.end(i64 64, i8* nonnull %0) #8
  ret i32 %cost.4
}

declare i32 @EPZSBiPredBlockMotionSearch(i16**, i16 signext, i32, i32, i8***, i16****, i32, i32, i32, i16 signext, i16 signext, i16 signext, i16 signext, i16*, i16*, i16*, i16*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @BIDPartitionCost(i32 %blocktype, i32 %block8x8, i16 signext %fw_ref, i16 signext %bw_ref, i32 %lambda_factor) local_unnamed_addr #0 {
entry:
  %diff = alloca [64 x i32], align 16
  %curr_blk = alloca [16 x [16 x i32]], align 16
  %0 = bitcast [64 x i32]* %diff to i8*
  call void @llvm.lifetime.start(i64 256, i8* nonnull %0) #8
  %1 = bitcast [16 x [16 x i32]]* %curr_blk to i8*
  call void @llvm.lifetime.start(i64 1024, i8* nonnull %1) #8
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %idxprom = sext i32 %blocktype to i64
  %arrayidx1 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 21, i64 %idxprom, i64 0
  %3 = load i32, i32* %arrayidx1, align 4, !tbaa !13
  %cmp = icmp slt i32 %3, 8
  %. = select i1 %cmp, i32 %3, i32 8
  %arrayidx9 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 21, i64 %idxprom, i64 1
  %4 = load i32, i32* %arrayidx9, align 4, !tbaa !13
  %cmp10 = icmp slt i32 %4, 8
  %cond18 = select i1 %cmp10, i32 %4, i32 8
  %cmp19 = icmp slt i32 %blocktype, 4
  %cond23 = select i1 %cmp19, i32 %blocktype, i32 4
  %idxprom24 = sext i32 %cond23 to i64
  %arrayidx26 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 22, i64 %idxprom24, i64 0
  %5 = load i32, i32* %arrayidx26, align 4, !tbaa !13
  %arrayidx30 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 22, i64 %idxprom24, i64 1
  %6 = load i32, i32* %arrayidx30, align 4, !tbaa !13
  %idxprom41 = sext i32 %block8x8 to i64
  %arrayidx42 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.bx0, i64 0, i64 %idxprom24, i64 %idxprom41
  %7 = load i32, i32* %arrayidx42, align 4, !tbaa !13
  %arrayidx46 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.by0, i64 0, i64 %idxprom24, i64 %idxprom41
  %8 = load i32, i32* %arrayidx46, align 4, !tbaa !13
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %all_mv47 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i64 0, i32 75
  %10 = load i16******, i16******* %all_mv47, align 8, !tbaa !343
  %pred_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i64 0, i32 74
  %11 = load i16******, i16******* %pred_mv, align 8, !tbaa !342
  %add = add nsw i32 %8, %6
  %cmp48424 = icmp sgt i32 %6, 0
  br i1 %cmp48424, label %for.cond49.preheader.lr.ph, label %for.end219

for.cond49.preheader.lr.ph:                       ; preds = %entry
  %arrayidx38 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 22, i64 %idxprom, i64 1
  %12 = load i32, i32* %arrayidx38, align 4, !tbaa !13
  %arrayidx34 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 22, i64 %idxprom, i64 0
  %13 = load i32, i32* %arrayidx34, align 4, !tbaa !13
  %add50 = add nsw i32 %7, %5
  %cmp51420 = icmp sgt i32 %5, 0
  %14 = load i32*, i32** @mvbits, align 8
  %idxprom58 = sext i16 %fw_ref to i64
  %idxprom108 = sext i16 %bw_ref to i64
  %15 = sext i32 %7 to i64
  %16 = sext i32 %13 to i64
  %17 = sext i32 %add50 to i64
  %18 = sext i32 %8 to i64
  %19 = sext i32 %12 to i64
  %20 = sext i32 %add to i64
  br label %for.cond49.preheader

for.cond49.preheader:                             ; preds = %for.cond49.preheader.lr.ph, %for.inc156
  %indvars.iv457 = phi i64 [ %18, %for.cond49.preheader.lr.ph ], [ %indvars.iv.next458, %for.inc156 ]
  %mvd_bits.0425 = phi i32 [ 0, %for.cond49.preheader.lr.ph ], [ %mvd_bits.1.lcssa, %for.inc156 ]
  br i1 %cmp51420, label %for.body52.lr.ph, label %for.inc156

for.body52.lr.ph:                                 ; preds = %for.cond49.preheader
  %arrayidx54 = getelementptr inbounds i16*****, i16****** %10, i64 %indvars.iv457
  %21 = load i16*****, i16****** %arrayidx54, align 8, !tbaa !1
  %arrayidx64 = getelementptr inbounds i16*****, i16****** %11, i64 %indvars.iv457
  %22 = load i16*****, i16****** %arrayidx64, align 8, !tbaa !1
  br label %for.body52

for.body52:                                       ; preds = %for.body52.lr.ph, %for.body52
  %indvars.iv455 = phi i64 [ %15, %for.body52.lr.ph ], [ %indvars.iv.next456, %for.body52 ]
  %mvd_bits.1421 = phi i32 [ %mvd_bits.0425, %for.body52.lr.ph ], [ %add154, %for.body52 ]
  %arrayidx56 = getelementptr inbounds i16****, i16***** %21, i64 %indvars.iv455
  %23 = load i16****, i16***** %arrayidx56, align 8, !tbaa !1
  %24 = load i16***, i16**** %23, align 8, !tbaa !1
  %arrayidx59 = getelementptr inbounds i16**, i16*** %24, i64 %idxprom58
  %25 = load i16**, i16*** %arrayidx59, align 8, !tbaa !1
  %arrayidx61 = getelementptr inbounds i16*, i16** %25, i64 %idxprom
  %26 = load i16*, i16** %arrayidx61, align 8, !tbaa !1
  %27 = load i16, i16* %26, align 2, !tbaa !308
  %conv = sext i16 %27 to i64
  %arrayidx66 = getelementptr inbounds i16****, i16***** %22, i64 %indvars.iv455
  %28 = load i16****, i16***** %arrayidx66, align 8, !tbaa !1
  %29 = load i16***, i16**** %28, align 8, !tbaa !1
  %arrayidx69 = getelementptr inbounds i16**, i16*** %29, i64 %idxprom58
  %30 = load i16**, i16*** %arrayidx69, align 8, !tbaa !1
  %arrayidx71 = getelementptr inbounds i16*, i16** %30, i64 %idxprom
  %31 = load i16*, i16** %arrayidx71, align 8, !tbaa !1
  %32 = load i16, i16* %31, align 2, !tbaa !308
  %conv73 = sext i16 %32 to i64
  %sub = sub nsw i64 %conv, %conv73
  %arrayidx75 = getelementptr inbounds i32, i32* %14, i64 %sub
  %33 = load i32, i32* %arrayidx75, align 4, !tbaa !13
  %add76 = add nsw i32 %33, %mvd_bits.1421
  %arrayidx86 = getelementptr inbounds i16, i16* %26, i64 1
  %34 = load i16, i16* %arrayidx86, align 2, !tbaa !308
  %conv87 = sext i16 %34 to i64
  %arrayidx97 = getelementptr inbounds i16, i16* %31, i64 1
  %35 = load i16, i16* %arrayidx97, align 2, !tbaa !308
  %conv98 = sext i16 %35 to i64
  %sub99 = sub nsw i64 %conv87, %conv98
  %arrayidx101 = getelementptr inbounds i32, i32* %14, i64 %sub99
  %36 = load i32, i32* %arrayidx101, align 4, !tbaa !13
  %add102 = add nsw i32 %add76, %36
  %arrayidx107 = getelementptr inbounds i16***, i16**** %23, i64 1
  %37 = load i16***, i16**** %arrayidx107, align 8, !tbaa !1
  %arrayidx109 = getelementptr inbounds i16**, i16*** %37, i64 %idxprom108
  %38 = load i16**, i16*** %arrayidx109, align 8, !tbaa !1
  %arrayidx111 = getelementptr inbounds i16*, i16** %38, i64 %idxprom
  %39 = load i16*, i16** %arrayidx111, align 8, !tbaa !1
  %40 = load i16, i16* %39, align 2, !tbaa !308
  %conv113 = sext i16 %40 to i64
  %arrayidx118 = getelementptr inbounds i16***, i16**** %28, i64 1
  %41 = load i16***, i16**** %arrayidx118, align 8, !tbaa !1
  %arrayidx120 = getelementptr inbounds i16**, i16*** %41, i64 %idxprom108
  %42 = load i16**, i16*** %arrayidx120, align 8, !tbaa !1
  %arrayidx122 = getelementptr inbounds i16*, i16** %42, i64 %idxprom
  %43 = load i16*, i16** %arrayidx122, align 8, !tbaa !1
  %44 = load i16, i16* %43, align 2, !tbaa !308
  %conv124 = sext i16 %44 to i64
  %sub125 = sub nsw i64 %conv113, %conv124
  %arrayidx127 = getelementptr inbounds i32, i32* %14, i64 %sub125
  %45 = load i32, i32* %arrayidx127, align 4, !tbaa !13
  %add128 = add nsw i32 %add102, %45
  %arrayidx138 = getelementptr inbounds i16, i16* %39, i64 1
  %46 = load i16, i16* %arrayidx138, align 2, !tbaa !308
  %conv139 = sext i16 %46 to i64
  %arrayidx149 = getelementptr inbounds i16, i16* %43, i64 1
  %47 = load i16, i16* %arrayidx149, align 2, !tbaa !308
  %conv150 = sext i16 %47 to i64
  %sub151 = sub nsw i64 %conv139, %conv150
  %arrayidx153 = getelementptr inbounds i32, i32* %14, i64 %sub151
  %48 = load i32, i32* %arrayidx153, align 4, !tbaa !13
  %add154 = add nsw i32 %add128, %48
  %indvars.iv.next456 = add i64 %indvars.iv455, %16
  %cmp51 = icmp slt i64 %indvars.iv.next456, %17
  br i1 %cmp51, label %for.body52, label %for.inc156.loopexit

for.inc156.loopexit:                              ; preds = %for.body52
  br label %for.inc156

for.inc156:                                       ; preds = %for.inc156.loopexit, %for.cond49.preheader
  %mvd_bits.1.lcssa = phi i32 [ %mvd_bits.0425, %for.cond49.preheader ], [ %add154, %for.inc156.loopexit ]
  %indvars.iv.next458 = add i64 %indvars.iv457, %19
  %cmp48 = icmp slt i64 %indvars.iv.next458, %20
  br i1 %cmp48, label %for.cond49.preheader, label %for.end158

for.end158:                                       ; preds = %for.inc156
  %mul = mul nsw i32 %mvd_bits.1.lcssa, %lambda_factor
  %shr = ashr i32 %mul, 16
  br i1 %cmp48424, label %for.body163.lr.ph, label %for.end219

for.body163.lr.ph:                                ; preds = %for.end158
  %add166 = add nsw i32 %7, %5
  %cmp167409 = icmp sgt i32 %5, 0
  %cmp209 = icmp sgt i32 %blocktype, 4
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 0
  %49 = sext i32 %7 to i64
  %50 = sext i32 %add166 to i64
  %51 = sext i32 %8 to i64
  %52 = sext i32 %add to i64
  %53 = bitcast [64 x i32]* %diff to <4 x i32>*
  %arrayidx202.1 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 4
  %54 = bitcast i32* %arrayidx202.1 to <4 x i32>*
  %arrayidx202.2 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 8
  %55 = bitcast i32* %arrayidx202.2 to <4 x i32>*
  %arrayidx202.3 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 12
  %56 = bitcast i32* %arrayidx202.3 to <4 x i32>*
  br label %for.body163

for.body163:                                      ; preds = %for.body163.lr.ph, %for.inc216
  %57 = phi %struct.InputParameters* [ %2, %for.body163.lr.ph ], [ %118, %for.inc216 ]
  %58 = phi %struct.ImageParameters* [ %9, %for.body163.lr.ph ], [ %119, %for.inc216 ]
  %indvars.iv453 = phi i64 [ 0, %for.body163.lr.ph ], [ %indvars.iv.next454, %for.inc216 ]
  %indvars.iv451 = phi i64 [ %51, %for.body163.lr.ph ], [ %indvars.iv.next452, %for.inc216 ]
  %mcost.0417 = phi i32 [ %shr, %for.body163.lr.ph ], [ %mcost.1.lcssa, %for.inc216 ]
  %59 = trunc i64 %indvars.iv451 to i32
  %shl = shl i32 %59, 2
  br i1 %cmp167409, label %for.body169.preheader, label %for.inc216

for.body169.preheader:                            ; preds = %for.body163
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %58, i64 0, i32 38
  %60 = load i32, i32* %opix_y, align 4, !tbaa !312
  %add164 = add nsw i32 %60, %shl
  %61 = sext i32 %shl to i64
  %62 = sext i32 %add164 to i64
  %63 = add nsw i64 %62, 1
  %64 = or i64 %61, 1
  %65 = or i64 %indvars.iv453, 1
  %66 = add nsw i64 %62, 2
  %67 = or i64 %61, 2
  %68 = or i64 %indvars.iv453, 2
  %69 = add nsw i64 %62, 3
  %70 = or i64 %61, 3
  %71 = or i64 %indvars.iv453, 3
  br label %for.body169

for.body169:                                      ; preds = %for.body169.preheader, %for.inc212
  %72 = phi %struct.ImageParameters* [ %58, %for.body169.preheader ], [ %76, %for.inc212 ]
  %indvars.iv449 = phi i64 [ 0, %for.body169.preheader ], [ %indvars.iv.next450, %for.inc212 ]
  %indvars.iv447 = phi i64 [ %49, %for.body169.preheader ], [ %indvars.iv.next448, %for.inc212 ]
  %mcost.1411 = phi i32 [ %mcost.0417, %for.body169.preheader ], [ %mcost.2, %for.inc212 ]
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %72, i64 0, i32 37
  %73 = load i32, i32* %opix_x, align 8, !tbaa !311
  %74 = trunc i64 %indvars.iv447 to i32
  %shl170 = shl i32 %74, 2
  %add171 = add nsw i32 %73, %shl170
  tail call void @LumaPrediction4x4(i32 %shl170, i32 %shl, i32 2, i32 %blocktype, i32 %blocktype, i16 signext %fw_ref, i16 signext %bw_ref) #8
  %75 = load i16**, i16*** @imgY_org, align 8, !tbaa !1
  %76 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %77 = sext i32 %shl170 to i64
  %78 = sext i32 %add171 to i64
  br label %for.cond176.preheader

for.cond176.preheader:                            ; preds = %for.body169
  %arrayidx182 = getelementptr inbounds i16*, i16** %75, i64 %62
  %79 = load i16*, i16** %arrayidx182, align 8, !tbaa !1
  %arrayidx185 = getelementptr inbounds i16, i16* %79, i64 %78
  %arrayidx192 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i64 0, i32 45, i64 %61, i64 %77
  %arrayidx200 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv453, i64 %indvars.iv449
  %80 = bitcast i16* %arrayidx185 to <4 x i16>*
  %81 = load <4 x i16>, <4 x i16>* %80, align 2, !tbaa !308
  %82 = zext <4 x i16> %81 to <4 x i32>
  %83 = bitcast i16* %arrayidx192 to <4 x i16>*
  %84 = load <4 x i16>, <4 x i16>* %83, align 2, !tbaa !308
  %85 = zext <4 x i16> %84 to <4 x i32>
  %86 = sub nsw <4 x i32> %82, %85
  %87 = bitcast i32* %arrayidx200 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %87, align 16, !tbaa !13
  store <4 x i32> %86, <4 x i32>* %53, align 16, !tbaa !13
  %arrayidx182.1 = getelementptr inbounds i16*, i16** %75, i64 %63
  %88 = load i16*, i16** %arrayidx182.1, align 8, !tbaa !1
  %arrayidx185.1 = getelementptr inbounds i16, i16* %88, i64 %78
  %arrayidx192.1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i64 0, i32 45, i64 %64, i64 %77
  %arrayidx200.1 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %65, i64 %indvars.iv449
  %89 = bitcast i16* %arrayidx185.1 to <4 x i16>*
  %90 = load <4 x i16>, <4 x i16>* %89, align 2, !tbaa !308
  %91 = zext <4 x i16> %90 to <4 x i32>
  %92 = bitcast i16* %arrayidx192.1 to <4 x i16>*
  %93 = load <4 x i16>, <4 x i16>* %92, align 2, !tbaa !308
  %94 = zext <4 x i16> %93 to <4 x i32>
  %95 = sub nsw <4 x i32> %91, %94
  %96 = bitcast i32* %arrayidx200.1 to <4 x i32>*
  store <4 x i32> %95, <4 x i32>* %96, align 16, !tbaa !13
  store <4 x i32> %95, <4 x i32>* %54, align 16, !tbaa !13
  %arrayidx182.2 = getelementptr inbounds i16*, i16** %75, i64 %66
  %97 = load i16*, i16** %arrayidx182.2, align 8, !tbaa !1
  %arrayidx185.2 = getelementptr inbounds i16, i16* %97, i64 %78
  %arrayidx192.2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i64 0, i32 45, i64 %67, i64 %77
  %arrayidx200.2 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %68, i64 %indvars.iv449
  %98 = bitcast i16* %arrayidx185.2 to <4 x i16>*
  %99 = load <4 x i16>, <4 x i16>* %98, align 2, !tbaa !308
  %100 = zext <4 x i16> %99 to <4 x i32>
  %101 = bitcast i16* %arrayidx192.2 to <4 x i16>*
  %102 = load <4 x i16>, <4 x i16>* %101, align 2, !tbaa !308
  %103 = zext <4 x i16> %102 to <4 x i32>
  %104 = sub nsw <4 x i32> %100, %103
  %105 = bitcast i32* %arrayidx200.2 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %105, align 16, !tbaa !13
  store <4 x i32> %104, <4 x i32>* %55, align 16, !tbaa !13
  %arrayidx182.3 = getelementptr inbounds i16*, i16** %75, i64 %69
  %106 = load i16*, i16** %arrayidx182.3, align 8, !tbaa !1
  %arrayidx185.3 = getelementptr inbounds i16, i16* %106, i64 %78
  %arrayidx192.3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i64 0, i32 45, i64 %70, i64 %77
  %arrayidx200.3 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %71, i64 %indvars.iv449
  %107 = bitcast i16* %arrayidx185.3 to <4 x i16>*
  %108 = load <4 x i16>, <4 x i16>* %107, align 2, !tbaa !308
  %109 = zext <4 x i16> %108 to <4 x i32>
  %110 = bitcast i16* %arrayidx192.3 to <4 x i16>*
  %111 = load <4 x i16>, <4 x i16>* %110, align 2, !tbaa !308
  %112 = zext <4 x i16> %111 to <4 x i32>
  %113 = sub nsw <4 x i32> %109, %112
  %114 = bitcast i32* %arrayidx200.3 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %114, align 16, !tbaa !13
  store <4 x i32> %113, <4 x i32>* %56, align 16, !tbaa !13
  %115 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %Transform8x8Mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %115, i64 0, i32 144
  %116 = load i32, i32* %Transform8x8Mode, align 4, !tbaa !339
  %tobool = icmp eq i32 %116, 0
  %or.cond = or i1 %cmp209, %tobool
  br i1 %or.cond, label %if.then, label %for.inc212

if.then:                                          ; preds = %for.cond176.preheader
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %115, i64 0, i32 6
  %117 = load i32, i32* %hadamard, align 8, !tbaa !338
  %call = call i32 @SATD(i32* nonnull %arraydecay, i32 %117)
  %add211 = add nsw i32 %call, %mcost.1411
  br label %for.inc212

for.inc212:                                       ; preds = %if.then, %for.cond176.preheader
  %mcost.2 = phi i32 [ %add211, %if.then ], [ %mcost.1411, %for.cond176.preheader ]
  %indvars.iv.next450 = add nuw nsw i64 %indvars.iv449, 4
  %indvars.iv.next448 = add nsw i64 %indvars.iv447, 1
  %cmp167 = icmp slt i64 %indvars.iv.next448, %50
  br i1 %cmp167, label %for.body169, label %for.inc216.loopexit

for.inc216.loopexit:                              ; preds = %for.inc212
  br label %for.inc216

for.inc216:                                       ; preds = %for.inc216.loopexit, %for.body163
  %118 = phi %struct.InputParameters* [ %57, %for.body163 ], [ %115, %for.inc216.loopexit ]
  %119 = phi %struct.ImageParameters* [ %58, %for.body163 ], [ %76, %for.inc216.loopexit ]
  %mcost.1.lcssa = phi i32 [ %mcost.0417, %for.body163 ], [ %mcost.2, %for.inc216.loopexit ]
  %indvars.iv.next454 = add nuw nsw i64 %indvars.iv453, 4
  %indvars.iv.next452 = add nsw i64 %indvars.iv451, 1
  %cmp161 = icmp slt i64 %indvars.iv.next452, %52
  br i1 %cmp161, label %for.body163, label %for.end219.loopexit

for.end219.loopexit:                              ; preds = %for.inc216
  br label %for.end219

for.end219:                                       ; preds = %for.end219.loopexit, %entry, %for.end158
  %120 = phi %struct.InputParameters* [ %2, %for.end158 ], [ %2, %entry ], [ %118, %for.end219.loopexit ]
  %mcost.0.lcssa = phi i32 [ %shr, %for.end158 ], [ 0, %entry ], [ %mcost.1.lcssa, %for.end219.loopexit ]
  %Transform8x8Mode220 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %120, i64 0, i32 144
  %121 = load i32, i32* %Transform8x8Mode220, align 4, !tbaa !339
  %tobool221 = icmp ne i32 %121, 0
  %cmp222 = icmp slt i32 %blocktype, 5
  %or.cond267 = and i1 %cmp222, %tobool221
  br i1 %or.cond267, label %for.cond225.preheader, label %if.end266

for.cond225.preheader:                            ; preds = %for.end219
  %arrayidx229399 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %120, i64 0, i32 21, i64 %idxprom24, i64 1
  %122 = load i32, i32* %arrayidx229399, align 4, !tbaa !13
  %cmp230400 = icmp sgt i32 %122, 0
  br i1 %cmp230400, label %for.cond233.preheader.lr.ph, label %if.end266

for.cond233.preheader.lr.ph:                      ; preds = %for.cond225.preheader
  %arraydecay256 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 0
  %123 = add i32 %cond18, 1
  %124 = sext i32 %123 to i64
  %125 = add nsw i64 %124, -1
  %126 = add i32 %., 1
  %127 = sext i32 %126 to i64
  %128 = add nsw i64 %127, -1
  %arrayidx237395.phi.trans.insert = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %120, i64 0, i32 21, i64 %idxprom24, i64 0
  %.pre459 = load i32, i32* %arrayidx237395.phi.trans.insert, align 4, !tbaa !13
  %129 = bitcast [64 x i32]* %diff to i8*
  %arrayidx247.1 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 8
  %130 = bitcast i32* %arrayidx247.1 to i8*
  %arrayidx247.2 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 16
  %131 = bitcast i32* %arrayidx247.2 to i8*
  %arrayidx247.3 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 24
  %132 = bitcast i32* %arrayidx247.3 to i8*
  %arrayidx247.4 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 32
  %133 = bitcast i32* %arrayidx247.4 to i8*
  %arrayidx247.5 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 40
  %134 = bitcast i32* %arrayidx247.5 to i8*
  %arrayidx247.6 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 48
  %135 = bitcast i32* %arrayidx247.6 to i8*
  %arrayidx247.7 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 56
  %136 = bitcast i32* %arrayidx247.7 to i8*
  %hadamard257 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %120, i64 0, i32 6
  br label %for.cond233.preheader

for.cond233.preheader:                            ; preds = %for.cond233.preheader.lr.ph, %for.inc263
  %137 = phi i32 [ %.pre459, %for.cond233.preheader.lr.ph ], [ %148, %for.inc263 ]
  %indvars.iv435 = phi i64 [ 0, %for.cond233.preheader.lr.ph ], [ %indvars.iv.next436, %for.inc263 ]
  %mcost.3403 = phi i32 [ %mcost.0.lcssa, %for.cond233.preheader.lr.ph ], [ %mcost.4.lcssa, %for.inc263 ]
  %cmp238396 = icmp sgt i32 %137, 0
  br i1 %cmp238396, label %for.end255.preheader, label %for.inc263

for.end255.preheader:                             ; preds = %for.cond233.preheader
  %indvars.iv.next430 = add nsw i64 %indvars.iv435, 1
  %indvars.iv.next430.1 = add nsw i64 %indvars.iv435, 2
  %indvars.iv.next430.2 = add i64 %indvars.iv435, 3
  %indvars.iv.next430.3 = add i64 %indvars.iv435, 4
  %indvars.iv.next430.4 = add i64 %indvars.iv435, 5
  %indvars.iv.next430.5 = add i64 %indvars.iv435, 6
  %indvars.iv.next430.6 = add i64 %indvars.iv435, 7
  br label %for.end255

for.end255:                                       ; preds = %for.end255.preheader, %for.end255
  %indvars.iv433 = phi i64 [ %indvars.iv.next434, %for.end255 ], [ 0, %for.end255.preheader ]
  %mcost.4398 = phi i32 [ %add259, %for.end255 ], [ %mcost.3403, %for.end255.preheader ]
  %arrayidx251 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv435, i64 %indvars.iv433
  %138 = bitcast i32* %arrayidx251 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %129, i8* %138, i64 32, i32 4, i1 false)
  %arrayidx251.1 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next430, i64 %indvars.iv433
  %139 = bitcast i32* %arrayidx251.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %130, i8* %139, i64 32, i32 4, i1 false)
  %arrayidx251.2 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next430.1, i64 %indvars.iv433
  %140 = bitcast i32* %arrayidx251.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %140, i64 32, i32 4, i1 false)
  %arrayidx251.3 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next430.2, i64 %indvars.iv433
  %141 = bitcast i32* %arrayidx251.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %141, i64 32, i32 4, i1 false)
  %arrayidx251.4 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next430.3, i64 %indvars.iv433
  %142 = bitcast i32* %arrayidx251.4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %142, i64 32, i32 4, i1 false)
  %arrayidx251.5 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next430.4, i64 %indvars.iv433
  %143 = bitcast i32* %arrayidx251.5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %134, i8* %143, i64 32, i32 4, i1 false)
  %arrayidx251.6 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next430.5, i64 %indvars.iv433
  %144 = bitcast i32* %arrayidx251.6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %144, i64 32, i32 4, i1 false)
  %arrayidx251.7 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %indvars.iv.next430.6, i64 %indvars.iv433
  %145 = bitcast i32* %arrayidx251.7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %145, i64 32, i32 4, i1 false)
  %.pre = load i32, i32* %arrayidx237395.phi.trans.insert, align 4, !tbaa !13
  %146 = load i32, i32* %hadamard257, align 8, !tbaa !338
  %call258 = call i32 @SATD8X8(i32* nonnull %arraydecay256, i32 %146)
  %add259 = add nsw i32 %call258, %mcost.4398
  %indvars.iv.next434 = add i64 %indvars.iv433, %128
  %147 = sext i32 %.pre to i64
  %cmp238 = icmp slt i64 %indvars.iv.next434, %147
  br i1 %cmp238, label %for.end255, label %for.inc263.loopexit

for.inc263.loopexit:                              ; preds = %for.end255
  br label %for.inc263

for.inc263:                                       ; preds = %for.inc263.loopexit, %for.cond233.preheader
  %148 = phi i32 [ %137, %for.cond233.preheader ], [ %.pre, %for.inc263.loopexit ]
  %mcost.4.lcssa = phi i32 [ %mcost.3403, %for.cond233.preheader ], [ %add259, %for.inc263.loopexit ]
  %indvars.iv.next436 = add i64 %indvars.iv435, %125
  %149 = load i32, i32* %arrayidx229399, align 4, !tbaa !13
  %150 = sext i32 %149 to i64
  %cmp230 = icmp slt i64 %indvars.iv.next436, %150
  br i1 %cmp230, label %for.cond233.preheader, label %if.end266.loopexit

if.end266.loopexit:                               ; preds = %for.inc263
  br label %if.end266

if.end266:                                        ; preds = %if.end266.loopexit, %for.cond225.preheader, %for.end219
  %mcost.5 = phi i32 [ %mcost.0.lcssa, %for.end219 ], [ %mcost.0.lcssa, %for.cond225.preheader ], [ %mcost.4.lcssa, %if.end266.loopexit ]
  call void @llvm.lifetime.end(i64 1024, i8* nonnull %1) #8
  call void @llvm.lifetime.end(i64 256, i8* nonnull %0) #8
  ret i32 %mcost.5
}

declare void @LumaPrediction4x4(i32, i32, i32, i32, i32, i16 signext, i16 signext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #1

; Function Attrs: nounwind uwtable
define i32 @Get_Direct_Cost8x8(i32 %block, i32* nocapture %cost8x8) local_unnamed_addr #0 {
entry:
  %curr_diff = alloca [8 x [8 x i32]], align 16
  %diff8x8 = alloca [64 x i32], align 16
  %diff = alloca [16 x i32], align 16
  %0 = bitcast [8 x [8 x i32]]* %curr_diff to i8*
  call void @llvm.lifetime.start(i64 256, i8* nonnull %0) #8
  %1 = bitcast [64 x i32]* %diff8x8 to i8*
  call void @llvm.lifetime.start(i64 256, i8* nonnull %1) #8
  %2 = bitcast [16 x i32]* %diff to i8*
  call void @llvm.lifetime.start(i64 64, i8* nonnull %2) #8
  %div = sdiv i32 %block, 2
  %shl = shl i32 %div, 3
  %rem = srem i32 %block, 2
  %shl1 = shl nsw i32 %rem, 3
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %3 = sext i32 %shl1 to i64
  %4 = sext i32 %shl to i64
  %.pre = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %5 = or i32 %shl1, 4
  %6 = sext i32 %5 to i64
  %7 = or i32 %shl, 4
  %8 = sext i32 %7 to i64
  %9 = bitcast [16 x i32]* %diff to <4 x i32>*
  %arrayidx67.1 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 4
  %10 = bitcast i32* %arrayidx67.1 to <4 x i32>*
  %arrayidx67.2 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 8
  %11 = bitcast i32* %arrayidx67.2 to <4 x i32>*
  %arrayidx67.3 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 12
  %12 = bitcast i32* %arrayidx67.3 to <4 x i32>*
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc76
  %13 = phi %struct.ImageParameters* [ %.pre, %entry ], [ %41, %for.inc76 ]
  %indvars.iv188 = phi i64 [ %4, %entry ], [ %indvars.iv.next189, %for.inc76 ]
  %cost.0170 = phi i32 [ 0, %entry ], [ %add72, %for.inc76 ]
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i64 0, i32 38
  %14 = load i32, i32* %opix_y, align 4, !tbaa !312
  %15 = trunc i64 %indvars.iv188 to i32
  %add2 = add nsw i32 %14, %15
  %shr = ashr i32 %add2, 2
  %idxprom = sext i32 %shr to i64
  %16 = sub nuw nsw i64 %indvars.iv188, %4
  %17 = sext i32 %add2 to i64
  %18 = add nsw i64 %17, 1
  %19 = or i64 %indvars.iv188, 1
  %20 = or i64 %16, 1
  %21 = add nsw i64 %17, 2
  %22 = or i64 %indvars.iv188, 2
  %23 = or i64 %16, 2
  %24 = add nsw i64 %17, 3
  %25 = or i64 %indvars.iv188, 3
  %26 = or i64 %16, 3
  br label %for.body6

for.body6:                                        ; preds = %for.body, %for.cond40.preheader
  %27 = phi %struct.ImageParameters* [ %13, %for.body ], [ %41, %for.cond40.preheader ]
  %indvars.iv185 = phi i64 [ %3, %for.body ], [ %indvars.iv.next186, %for.cond40.preheader ]
  %cost.1169 = phi i32 [ %cost.0170, %for.body ], [ %add72, %for.cond40.preheader ]
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i64 0, i32 37
  %28 = load i32, i32* %opix_x, align 8, !tbaa !311
  %29 = trunc i64 %indvars.iv185 to i32
  %add7 = add nsw i32 %28, %29
  %30 = load i16**, i16*** @direct_pdir, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i16*, i16** %30, i64 %idxprom
  %31 = load i16*, i16** %arrayidx, align 8, !tbaa !1
  %shr8 = ashr i32 %add7, 2
  %idxprom9 = sext i32 %shr8 to i64
  %arrayidx10 = getelementptr inbounds i16, i16* %31, i64 %idxprom9
  %32 = load i16, i16* %arrayidx10, align 2, !tbaa !308
  %cmp11 = icmp slt i16 %32, 0
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %for.body6
  store i32 2147483647, i32* %cost8x8, align 4, !tbaa !13
  br label %cleanup

if.end:                                           ; preds = %for.body6
  %conv = sext i16 %32 to i32
  %33 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %34 = load i8**, i8*** %33, align 8, !tbaa !1
  %arrayidx23 = getelementptr inbounds i8*, i8** %34, i64 %idxprom
  %35 = load i8*, i8** %arrayidx23, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds i8, i8* %35, i64 %idxprom9
  %36 = load i8, i8* %arrayidx26, align 1, !tbaa !328
  %conv27 = sext i8 %36 to i16
  %arrayidx28 = getelementptr inbounds i8**, i8*** %33, i64 1
  %37 = load i8**, i8*** %arrayidx28, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds i8*, i8** %37, i64 %idxprom
  %38 = load i8*, i8** %arrayidx31, align 8, !tbaa !1
  %arrayidx34 = getelementptr inbounds i8, i8* %38, i64 %idxprom9
  %39 = load i8, i8* %arrayidx34, align 1, !tbaa !328
  %conv35 = sext i8 %39 to i16
  tail call void @LumaPrediction4x4(i32 %29, i32 %15, i32 %conv, i32 0, i32 0, i16 signext %conv27, i16 signext %conv35) #8
  %40 = load i16**, i16*** @imgY_org, align 8, !tbaa !1
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %42 = sub nuw nsw i64 %indvars.iv185, %3
  %43 = sext i32 %add7 to i64
  br label %for.cond40.preheader

for.cond40.preheader:                             ; preds = %if.end
  %arrayidx46 = getelementptr inbounds i16*, i16** %40, i64 %17
  %44 = load i16*, i16** %arrayidx46, align 8, !tbaa !1
  %arrayidx49 = getelementptr inbounds i16, i16* %44, i64 %43
  %arrayidx56 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i64 0, i32 45, i64 %indvars.iv188, i64 %indvars.iv185
  %arrayidx65 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 %16, i64 %42
  %45 = bitcast i16* %arrayidx49 to <4 x i16>*
  %46 = load <4 x i16>, <4 x i16>* %45, align 2, !tbaa !308
  %47 = zext <4 x i16> %46 to <4 x i32>
  %48 = bitcast i16* %arrayidx56 to <4 x i16>*
  %49 = load <4 x i16>, <4 x i16>* %48, align 2, !tbaa !308
  %50 = zext <4 x i16> %49 to <4 x i32>
  %51 = sub nsw <4 x i32> %47, %50
  %52 = bitcast i32* %arrayidx65 to <4 x i32>*
  store <4 x i32> %51, <4 x i32>* %52, align 16, !tbaa !13
  store <4 x i32> %51, <4 x i32>* %9, align 16, !tbaa !13
  %arrayidx46.1 = getelementptr inbounds i16*, i16** %40, i64 %18
  %53 = load i16*, i16** %arrayidx46.1, align 8, !tbaa !1
  %arrayidx49.1 = getelementptr inbounds i16, i16* %53, i64 %43
  %arrayidx56.1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i64 0, i32 45, i64 %19, i64 %indvars.iv185
  %arrayidx65.1 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 %20, i64 %42
  %54 = bitcast i16* %arrayidx49.1 to <4 x i16>*
  %55 = load <4 x i16>, <4 x i16>* %54, align 2, !tbaa !308
  %56 = zext <4 x i16> %55 to <4 x i32>
  %57 = bitcast i16* %arrayidx56.1 to <4 x i16>*
  %58 = load <4 x i16>, <4 x i16>* %57, align 2, !tbaa !308
  %59 = zext <4 x i16> %58 to <4 x i32>
  %60 = sub nsw <4 x i32> %56, %59
  %61 = bitcast i32* %arrayidx65.1 to <4 x i32>*
  store <4 x i32> %60, <4 x i32>* %61, align 16, !tbaa !13
  store <4 x i32> %60, <4 x i32>* %10, align 16, !tbaa !13
  %arrayidx46.2 = getelementptr inbounds i16*, i16** %40, i64 %21
  %62 = load i16*, i16** %arrayidx46.2, align 8, !tbaa !1
  %arrayidx49.2 = getelementptr inbounds i16, i16* %62, i64 %43
  %arrayidx56.2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i64 0, i32 45, i64 %22, i64 %indvars.iv185
  %arrayidx65.2 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 %23, i64 %42
  %63 = bitcast i16* %arrayidx49.2 to <4 x i16>*
  %64 = load <4 x i16>, <4 x i16>* %63, align 2, !tbaa !308
  %65 = zext <4 x i16> %64 to <4 x i32>
  %66 = bitcast i16* %arrayidx56.2 to <4 x i16>*
  %67 = load <4 x i16>, <4 x i16>* %66, align 2, !tbaa !308
  %68 = zext <4 x i16> %67 to <4 x i32>
  %69 = sub nsw <4 x i32> %65, %68
  %70 = bitcast i32* %arrayidx65.2 to <4 x i32>*
  store <4 x i32> %69, <4 x i32>* %70, align 16, !tbaa !13
  store <4 x i32> %69, <4 x i32>* %11, align 16, !tbaa !13
  %arrayidx46.3 = getelementptr inbounds i16*, i16** %40, i64 %24
  %71 = load i16*, i16** %arrayidx46.3, align 8, !tbaa !1
  %arrayidx49.3 = getelementptr inbounds i16, i16* %71, i64 %43
  %arrayidx56.3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i64 0, i32 45, i64 %25, i64 %indvars.iv185
  %arrayidx65.3 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 %26, i64 %42
  %72 = bitcast i16* %arrayidx49.3 to <4 x i16>*
  %73 = load <4 x i16>, <4 x i16>* %72, align 2, !tbaa !308
  %74 = zext <4 x i16> %73 to <4 x i32>
  %75 = bitcast i16* %arrayidx56.3 to <4 x i16>*
  %76 = load <4 x i16>, <4 x i16>* %75, align 2, !tbaa !308
  %77 = zext <4 x i16> %76 to <4 x i32>
  %78 = sub nsw <4 x i32> %74, %77
  %79 = bitcast i32* %arrayidx65.3 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %79, align 16, !tbaa !13
  store <4 x i32> %78, <4 x i32>* %12, align 16, !tbaa !13
  %80 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %80, i64 0, i32 6
  %81 = load i32, i32* %hadamard, align 8, !tbaa !338
  %call = call i32 @SATD(i32* nonnull %arraydecay, i32 %81)
  %add72 = add nsw i32 %call, %cost.1169
  %indvars.iv.next186 = add nsw i64 %indvars.iv185, 4
  %cmp5 = icmp slt i64 %indvars.iv185, %6
  br i1 %cmp5, label %for.body6, label %for.inc76

for.inc76:                                        ; preds = %for.cond40.preheader
  %indvars.iv.next189 = add nsw i64 %indvars.iv188, 4
  %cmp = icmp slt i64 %indvars.iv188, %8
  br i1 %cmp, label %for.body, label %for.end78

for.end78:                                        ; preds = %for.inc76
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %80, i64 0, i32 106
  %82 = load i32, i32* %rdopt, align 8, !tbaa !309
  %cmp79 = icmp eq i32 %82, 0
  br i1 %cmp79, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %for.end78
  %Transform8x8Mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %80, i64 0, i32 144
  %83 = load i32, i32* %Transform8x8Mode, align 4, !tbaa !339
  %tobool = icmp eq i32 %83, 0
  br i1 %tobool, label %cleanup, label %for.body85.preheader

for.body85.preheader:                             ; preds = %land.lhs.true
  %arrayidx87 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 0
  %84 = bitcast [64 x i32]* %diff8x8 to i8*
  %85 = bitcast [8 x [8 x i32]]* %curr_diff to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %84, i8* nonnull %85, i64 32, i32 16, i1 false)
  %arrayidx87.1 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 8
  %86 = bitcast i32* %arrayidx87.1 to i8*
  %arrayidx89.1 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 1
  %87 = bitcast [8 x i32]* %arrayidx89.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 32, i32 16, i1 false)
  %arrayidx87.2 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 16
  %88 = bitcast i32* %arrayidx87.2 to i8*
  %arrayidx89.2 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 2
  %89 = bitcast [8 x i32]* %arrayidx89.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 32, i32 16, i1 false)
  %arrayidx87.3 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 24
  %90 = bitcast i32* %arrayidx87.3 to i8*
  %arrayidx89.3 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 3
  %91 = bitcast [8 x i32]* %arrayidx89.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 32, i32 16, i1 false)
  %arrayidx87.4 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 32
  %92 = bitcast i32* %arrayidx87.4 to i8*
  %arrayidx89.4 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 4
  %93 = bitcast [8 x i32]* %arrayidx89.4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 32, i32 16, i1 false)
  %arrayidx87.5 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 40
  %94 = bitcast i32* %arrayidx87.5 to i8*
  %arrayidx89.5 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 5
  %95 = bitcast [8 x i32]* %arrayidx89.5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 32, i32 16, i1 false)
  %arrayidx87.6 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 48
  %96 = bitcast i32* %arrayidx87.6 to i8*
  %arrayidx89.6 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 6
  %97 = bitcast [8 x i32]* %arrayidx89.6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 32, i32 16, i1 false)
  %arrayidx87.7 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 56
  %98 = bitcast i32* %arrayidx87.7 to i8*
  %arrayidx89.7 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 7
  %99 = bitcast [8 x i32]* %arrayidx89.7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 32, i32 16, i1 false)
  %call96 = call i32 @SATD8X8(i32* nonnull %arrayidx87, i32 %81)
  %100 = load i32, i32* %cost8x8, align 4, !tbaa !13
  %add97 = add nsw i32 %100, %call96
  store i32 %add97, i32* %cost8x8, align 4, !tbaa !13
  br label %cleanup

cleanup:                                          ; preds = %for.end78, %for.body85.preheader, %land.lhs.true, %if.then
  %retval.0 = phi i32 [ 2147483647, %if.then ], [ %add72, %land.lhs.true ], [ %add72, %for.body85.preheader ], [ %add72, %for.end78 ]
  call void @llvm.lifetime.end(i64 64, i8* nonnull %2) #8
  call void @llvm.lifetime.end(i64 256, i8* nonnull %1) #8
  call void @llvm.lifetime.end(i64 256, i8* nonnull %0) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @Get_Direct_CostMB(i32 %lambda_factor) local_unnamed_addr #0 {
entry:
  %cost8x8 = alloca i32, align 4
  %0 = bitcast i32* %cost8x8 to i8*
  call void @llvm.lifetime.start(i64 4, i8* nonnull %0) #8
  store i32 0, i32* %cost8x8, align 4, !tbaa !13
  %call = call i32 @Get_Direct_Cost8x8(i32 0, i32* nonnull %cost8x8)
  %1 = load i32, i32* %cost8x8, align 4, !tbaa !13
  %cmp1 = icmp eq i32 %1, 2147483647
  br i1 %cmp1, label %cleanup, label %for.inc

for.inc:                                          ; preds = %entry
  %call.1 = call i32 @Get_Direct_Cost8x8(i32 1, i32* nonnull %cost8x8)
  %2 = load i32, i32* %cost8x8, align 4, !tbaa !13
  %cmp1.1 = icmp eq i32 %2, 2147483647
  br i1 %cmp1.1, label %cleanup, label %for.inc.1

sw.bb:                                            ; preds = %for.inc.3
  %cmp2 = icmp slt i32 %7, %add.3
  br i1 %cmp2, label %if.then6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %InterSearch8x4 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i64 0, i32 76
  %3 = load i32, i32* %InterSearch8x4, align 4, !tbaa !356
  %tobool = icmp eq i32 %3, 0
  br i1 %tobool, label %if.then6, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %InterSearch4x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i64 0, i32 77
  %4 = load i32, i32* %InterSearch4x8, align 8, !tbaa !357
  %tobool3 = icmp eq i32 %4, 0
  br i1 %tobool3, label %if.then6, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true
  %InterSearch4x4 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i64 0, i32 78
  %5 = load i32, i32* %InterSearch4x4, align 4, !tbaa !358
  %tobool5 = icmp eq i32 %5, 0
  br i1 %tobool5, label %if.then6, label %cleanup

if.then6:                                         ; preds = %land.lhs.true4, %land.lhs.true, %lor.lhs.false, %sw.bb
  br label %cleanup

sw.bb8:                                           ; preds = %for.inc.3
  br label %cleanup

cleanup:                                          ; preds = %entry, %for.inc, %for.inc.1, %for.inc.2, %sw.bb8, %if.then6, %for.inc.3, %land.lhs.true4
  %retval.0 = phi i32 [ %add.3, %for.inc.3 ], [ %7, %sw.bb8 ], [ %7, %if.then6 ], [ %add.3, %land.lhs.true4 ], [ 2147483647, %for.inc.2 ], [ 2147483647, %for.inc.1 ], [ 2147483647, %for.inc ], [ 2147483647, %entry ]
  call void @llvm.lifetime.end(i64 4, i8* nonnull %0) #8
  ret i32 %retval.0

for.inc.1:                                        ; preds = %for.inc
  %call.2 = call i32 @Get_Direct_Cost8x8(i32 2, i32* nonnull %cost8x8)
  %6 = load i32, i32* %cost8x8, align 4, !tbaa !13
  %cmp1.2 = icmp eq i32 %6, 2147483647
  br i1 %cmp1.2, label %cleanup, label %for.inc.2

for.inc.2:                                        ; preds = %for.inc.1
  %call.3 = call i32 @Get_Direct_Cost8x8(i32 3, i32* nonnull %cost8x8)
  %7 = load i32, i32* %cost8x8, align 4, !tbaa !13
  %cmp1.3 = icmp eq i32 %7, 2147483647
  br i1 %cmp1.3, label %cleanup, label %for.inc.3

for.inc.3:                                        ; preds = %for.inc.2
  %add.1 = add nsw i32 %call.1, %call
  %add.2 = add nsw i32 %call.2, %add.1
  %add.3 = add nsw i32 %call.3, %add.2
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %Transform8x8Mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i64 0, i32 144
  %9 = load i32, i32* %Transform8x8Mode, align 4, !tbaa !339
  switch i32 %9, label %cleanup [
    i32 1, label %sw.bb
    i32 2, label %sw.bb8
  ]
}

; Function Attrs: nounwind uwtable
define void @PartitionMotionSearch(i32 %blocktype, i32 %block8x8, i32 %lambda_factor) local_unnamed_addr #0 {
entry:
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 6
  %1 = load i32, i32* %type, align 8, !tbaa !300
  %cmp = icmp eq i32 %1, 1
  %cmp1 = icmp slt i32 %blocktype, 4
  %cond = select i1 %cmp1, i32 %blocktype, i32 4
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %idxprom = sext i32 %cond to i64
  %arrayidx3 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 22, i64 %idxprom, i64 0
  %3 = load i32, i32* %arrayidx3, align 4, !tbaa !13
  %arrayidx7 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 22, i64 %idxprom, i64 1
  %4 = load i32, i32* %arrayidx7, align 4, !tbaa !13
  %idxprom9 = sext i32 %blocktype to i64
  %arrayidx11 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 22, i64 %idxprom9, i64 0
  %5 = load i32, i32* %arrayidx11, align 4, !tbaa !13
  %arrayidx15 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i64 0, i32 22, i64 %idxprom9, i64 1
  %6 = load i32, i32* %arrayidx15, align 4, !tbaa !13
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 55
  %7 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8, !tbaa !293
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i64 0, i32 3
  %8 = load i32, i32* %current_mb_nr, align 4, !tbaa !294
  %idxprom17 = sext i32 %8 to i64
  %list_offset19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %7, i64 %idxprom17, i32 20
  %9 = load i32, i32* %list_offset19, align 4, !tbaa !295
  %idxprom22 = sext i32 %block8x8 to i64
  %arrayidx23 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.by0, i64 0, i64 %idxprom, i64 %idxprom22
  %10 = load i32, i32* %arrayidx23, align 4, !tbaa !13
  %arrayidx27 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.bx0, i64 0, i64 %idxprom, i64 %idxprom22
  %11 = load i32, i32* %arrayidx27, align 4, !tbaa !13
  %add86 = add nsw i32 %10, %4
  %cmp87225 = icmp sgt i32 %4, 0
  %add93 = add nsw i32 %11, %3
  %cmp94223 = icmp sgt i32 %3, 0
  %cmp112221 = icmp sgt i32 %6, 0
  %conv121 = sext i32 %5 to i64
  %cmp124219 = icmp sgt i32 %5, 0
  %12 = icmp slt i32 %blocktype, 2
  %cond78 = select i1 %12, i32 %blocktype, i32 2
  %13 = sext i32 %11 to i64
  %14 = sext i32 %add93 to i64
  %15 = sext i32 %10 to i64
  %16 = sext i32 %6 to i64
  %17 = sext i32 %add86 to i64
  %18 = sext i32 %9 to i64
  %19 = select i1 %cmp, i64 2, i64 1
  %wide.trip.count = zext i32 %5 to i64
  %wide.trip.count235 = zext i32 %6 to i64
  %20 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 3
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %21 = icmp ult i64 %20, 3
  br label %for.cond30.preheader

for.cond30.preheader:                             ; preds = %entry, %for.inc144
  %indvars.iv241 = phi i64 [ 0, %entry ], [ %indvars.iv.next242, %for.inc144 ]
  %22 = add nsw i64 %indvars.iv241, %18
  %arrayidx33 = getelementptr inbounds [6 x i32], [6 x i32]* @listXsize, i64 0, i64 %22
  %23 = load i32, i32* %arrayidx33, align 4, !tbaa !13
  %cmp34227 = icmp sgt i32 %23, 0
  br i1 %cmp34227, label %for.body36.preheader, label %for.inc144

for.body36.preheader:                             ; preds = %for.cond30.preheader
  %24 = trunc i64 %indvars.iv241 to i32
  br label %for.body36

for.body36:                                       ; preds = %for.body36.preheader, %for.inc141
  %conv31229 = phi i32 [ %conv31, %for.inc141 ], [ 0, %for.body36.preheader ]
  %ref.0228 = phi i16 [ %inc142, %for.inc141 ], [ 0, %for.body36.preheader ]
  %25 = load i32****, i32***** @motion_cost, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds i32***, i32**** %25, i64 %idxprom9
  %26 = load i32***, i32**** %arrayidx38, align 8, !tbaa !1
  %arrayidx40 = getelementptr inbounds i32**, i32*** %26, i64 %indvars.iv241
  %27 = load i32**, i32*** %arrayidx40, align 8, !tbaa !1
  %idxprom41 = sext i16 %ref.0228 to i64
  %arrayidx42 = getelementptr inbounds i32*, i32** %27, i64 %idxprom41
  %28 = load i32*, i32** %arrayidx42, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds i32, i32* %28, i64 %idxprom22
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8, !tbaa !1
  %full_search = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i64 0, i32 99
  %30 = load i32, i32* %full_search, align 4, !tbaa !14
  %cmp45 = icmp eq i32 %30, 2
  br i1 %cmp45, label %if.then, label %if.else

if.then:                                          ; preds = %for.body36
  %search_range47 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i64 0, i32 8
  %31 = load i32, i32* %search_range47, align 8, !tbaa !5
  br label %if.end80

if.else:                                          ; preds = %for.body36
  %cmp49 = icmp eq i32 %30, 1
  %search_range52 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i64 0, i32 8
  %32 = load i32, i32* %search_range52, align 8, !tbaa !5
  %cmp54 = icmp slt i32 %conv31229, 1
  %cond60 = select i1 %cmp54, i32 %conv31229, i32 1
  %add61 = add nsw i32 %cond60, 1
  br i1 %cmp49, label %cond.end59, label %cond.end70

cond.end59:                                       ; preds = %if.else
  %div = sdiv i32 %32, %add61
  br label %if.end80

cond.end70:                                       ; preds = %if.else
  %mul = mul nsw i32 %add61, %cond78
  %div79 = sdiv i32 %32, %mul
  br label %if.end80

if.end80:                                         ; preds = %cond.end59, %cond.end70, %if.then
  %search_range.0 = phi i32 [ %31, %if.then ], [ %div, %cond.end59 ], [ %div79, %cond.end70 ]
  %33 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %33, i64 0, i32 32
  %34 = load i8***, i8**** %ref_idx, align 8, !tbaa !306
  %arrayidx82 = getelementptr inbounds i8**, i8*** %34, i64 %indvars.iv241
  %35 = load i8**, i8*** %arrayidx82, align 8, !tbaa !1
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %33, i64 0, i32 35
  %36 = load i16****, i16***** %mv, align 8, !tbaa !307
  %arrayidx84 = getelementptr inbounds i16***, i16**** %36, i64 %indvars.iv241
  %37 = load i16***, i16**** %arrayidx84, align 8, !tbaa !1
  store i32 0, i32* %arrayidx44, align 4, !tbaa !13
  br i1 %cmp87225, label %for.body89.lr.ph, label %for.inc141

for.body89.lr.ph:                                 ; preds = %if.end80
  %38 = trunc i16 %ref.0228 to i8
  br label %for.body89

for.body89:                                       ; preds = %for.body89.lr.ph, %for.inc138
  %indvars.iv239 = phi i64 [ %15, %for.body89.lr.ph ], [ %indvars.iv.next240, %for.inc138 ]
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %40 = trunc i64 %indvars.iv239 to i32
  br i1 %cmp94223, label %for.body96.lr.ph, label %for.inc138

for.body96.lr.ph:                                 ; preds = %for.body89
  %block_y90 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i64 0, i32 32
  %41 = load i32, i32* %block_y90, align 4, !tbaa !359
  %add91 = add nsw i32 %41, %40
  %shl109 = shl i32 %40, 2
  %42 = sext i32 %add91 to i64
  br label %for.body96

for.body96:                                       ; preds = %for.inc135.for.body96_crit_edge, %for.body96.lr.ph
  %43 = phi %struct.ImageParameters* [ %39, %for.body96.lr.ph ], [ %.pre, %for.inc135.for.body96_crit_edge ]
  %indvars.iv237 = phi i64 [ %13, %for.body96.lr.ph ], [ %indvars.iv.next238, %for.inc135.for.body96_crit_edge ]
  %all_mv97 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %43, i64 0, i32 75
  %44 = load i16******, i16******* %all_mv97, align 8, !tbaa !343
  %arrayidx99 = getelementptr inbounds i16*****, i16****** %44, i64 %indvars.iv239
  %45 = load i16*****, i16****** %arrayidx99, align 8, !tbaa !1
  %arrayidx101 = getelementptr inbounds i16****, i16***** %45, i64 %indvars.iv237
  %46 = load i16****, i16***** %arrayidx101, align 8, !tbaa !1
  %arrayidx103 = getelementptr inbounds i16***, i16**** %46, i64 %indvars.iv241
  %47 = load i16***, i16**** %arrayidx103, align 8, !tbaa !1
  %arrayidx105 = getelementptr inbounds i16**, i16*** %47, i64 %idxprom41
  %48 = load i16**, i16*** %arrayidx105, align 8, !tbaa !1
  %arrayidx107 = getelementptr inbounds i16*, i16** %48, i64 %idxprom9
  %49 = bitcast i16** %arrayidx107 to i32**
  %50 = load i32*, i32** %49, align 8, !tbaa !1
  %block_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %43, i64 0, i32 31
  %51 = load i32, i32* %block_x, align 8, !tbaa !360
  %52 = trunc i64 %indvars.iv237 to i32
  %shl = shl i32 %52, 2
  %call = tail call i32 @BlockMotionSearch(i16 signext %ref.0228, i32 %24, i32 %shl, i32 %shl109, i32 %blocktype, i32 %search_range.0, i32 %lambda_factor)
  %53 = load i32, i32* %arrayidx44, align 4, !tbaa !13
  %add110 = add nsw i32 %53, %call
  store i32 %add110, i32* %arrayidx44, align 4, !tbaa !13
  br i1 %cmp112221, label %for.body114.lr.ph, label %for.inc135

for.body114.lr.ph:                                ; preds = %for.body96
  %add108 = add nsw i32 %51, %52
  %idxprom118 = sext i32 %add108 to i64
  br label %for.body114

for.body114:                                      ; preds = %for.inc132, %for.body114.lr.ph
  %indvars.iv232 = phi i64 [ 0, %for.body114.lr.ph ], [ %indvars.iv.next233, %for.inc132 ]
  %54 = add nsw i64 %42, %indvars.iv232
  %arrayidx117 = getelementptr inbounds i8*, i8** %35, i64 %54
  %55 = load i8*, i8** %arrayidx117, align 8, !tbaa !1
  %arrayidx119 = getelementptr inbounds i8, i8* %55, i64 %idxprom118
  tail call void @llvm.memset.p0i8.i64(i8* %arrayidx119, i8 %38, i64 %conv121, i32 1, i1 false)
  br i1 %cmp124219, label %for.body126.lr.ph, label %for.inc132

for.body126.lr.ph:                                ; preds = %for.body114
  %arrayidx128 = getelementptr inbounds i16**, i16*** %37, i64 %54
  br i1 %lcmp.mod, label %for.body126.prol.loopexit, label %for.body126.prol.preheader

for.body126.prol.preheader:                       ; preds = %for.body126.lr.ph
  br label %for.body126.prol

for.body126.prol:                                 ; preds = %for.body126.prol, %for.body126.prol.preheader
  %indvars.iv.prol = phi i64 [ 0, %for.body126.prol.preheader ], [ %indvars.iv.next.prol, %for.body126.prol ]
  %prol.iter = phi i64 [ %xtraiter, %for.body126.prol.preheader ], [ %prol.iter.sub, %for.body126.prol ]
  %56 = load i16**, i16*** %arrayidx128, align 8, !tbaa !1
  %57 = add nsw i64 %indvars.iv.prol, %idxprom118
  %arrayidx131.prol = getelementptr inbounds i16*, i16** %56, i64 %57
  %58 = bitcast i16** %arrayidx131.prol to i32**
  %59 = load i32*, i32** %58, align 8, !tbaa !1
  %60 = load i32, i32* %50, align 2
  store i32 %60, i32* %59, align 2
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body126.prol.loopexit.unr-lcssa, label %for.body126.prol, !llvm.loop !361

for.body126.prol.loopexit.unr-lcssa:              ; preds = %for.body126.prol
  br label %for.body126.prol.loopexit

for.body126.prol.loopexit:                        ; preds = %for.body126.lr.ph, %for.body126.prol.loopexit.unr-lcssa
  %indvars.iv.unr = phi i64 [ 0, %for.body126.lr.ph ], [ %indvars.iv.next.prol, %for.body126.prol.loopexit.unr-lcssa ]
  br i1 %21, label %for.inc132.loopexit, label %for.body126.lr.ph.new

for.body126.lr.ph.new:                            ; preds = %for.body126.prol.loopexit
  br label %for.body126

for.body126:                                      ; preds = %for.body126, %for.body126.lr.ph.new
  %indvars.iv = phi i64 [ %indvars.iv.unr, %for.body126.lr.ph.new ], [ %indvars.iv.next.3, %for.body126 ]
  %61 = load i16**, i16*** %arrayidx128, align 8, !tbaa !1
  %62 = add nsw i64 %indvars.iv, %idxprom118
  %arrayidx131 = getelementptr inbounds i16*, i16** %61, i64 %62
  %63 = bitcast i16** %arrayidx131 to i32**
  %64 = load i32*, i32** %63, align 8, !tbaa !1
  %65 = load i32, i32* %50, align 2
  store i32 %65, i32* %64, align 2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %66 = load i16**, i16*** %arrayidx128, align 8, !tbaa !1
  %67 = add nsw i64 %indvars.iv.next, %idxprom118
  %arrayidx131.1 = getelementptr inbounds i16*, i16** %66, i64 %67
  %68 = bitcast i16** %arrayidx131.1 to i32**
  %69 = load i32*, i32** %68, align 8, !tbaa !1
  %70 = load i32, i32* %50, align 2
  store i32 %70, i32* %69, align 2
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %71 = load i16**, i16*** %arrayidx128, align 8, !tbaa !1
  %72 = add nsw i64 %indvars.iv.next.1, %idxprom118
  %arrayidx131.2 = getelementptr inbounds i16*, i16** %71, i64 %72
  %73 = bitcast i16** %arrayidx131.2 to i32**
  %74 = load i32*, i32** %73, align 8, !tbaa !1
  %75 = load i32, i32* %50, align 2
  store i32 %75, i32* %74, align 2
  %indvars.iv.next.2 = add nsw i64 %indvars.iv, 3
  %76 = load i16**, i16*** %arrayidx128, align 8, !tbaa !1
  %77 = add nsw i64 %indvars.iv.next.2, %idxprom118
  %arrayidx131.3 = getelementptr inbounds i16*, i16** %76, i64 %77
  %78 = bitcast i16** %arrayidx131.3 to i32**
  %79 = load i32*, i32** %78, align 8, !tbaa !1
  %80 = load i32, i32* %50, align 2
  store i32 %80, i32* %79, align 2
  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.3, %wide.trip.count
  br i1 %exitcond.3, label %for.inc132.loopexit.unr-lcssa, label %for.body126

for.inc132.loopexit.unr-lcssa:                    ; preds = %for.body126
  br label %for.inc132.loopexit

for.inc132.loopexit:                              ; preds = %for.body126.prol.loopexit, %for.inc132.loopexit.unr-lcssa
  br label %for.inc132

for.inc132:                                       ; preds = %for.inc132.loopexit, %for.body114
  %indvars.iv.next233 = add nuw nsw i64 %indvars.iv232, 1
  %exitcond236 = icmp eq i64 %indvars.iv.next233, %wide.trip.count235
  br i1 %exitcond236, label %for.inc135.loopexit, label %for.body114

for.inc135.loopexit:                              ; preds = %for.inc132
  br label %for.inc135

for.inc135:                                       ; preds = %for.inc135.loopexit, %for.body96
  %indvars.iv.next238 = add i64 %indvars.iv237, %conv121
  %cmp94 = icmp slt i64 %indvars.iv.next238, %14
  br i1 %cmp94, label %for.inc135.for.body96_crit_edge, label %for.inc138.loopexit

for.inc135.for.body96_crit_edge:                  ; preds = %for.inc135
  %.pre = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.body96

for.inc138.loopexit:                              ; preds = %for.inc135
  br label %for.inc138

for.inc138:                                       ; preds = %for.inc138.loopexit, %for.body89
  %indvars.iv.next240 = add i64 %indvars.iv239, %16
  %cmp87 = icmp slt i64 %indvars.iv.next240, %17
  br i1 %cmp87, label %for.body89, label %for.inc141.loopexit

for.inc141.loopexit:                              ; preds = %for.inc138
  br label %for.inc141

for.inc141:                                       ; preds = %for.inc141.loopexit, %if.end80
  %inc142 = add i16 %ref.0228, 1
  %conv31 = sext i16 %inc142 to i32
  %81 = load i32, i32* %arrayidx33, align 4, !tbaa !13
  %cmp34 = icmp slt i32 %conv31, %81
  br i1 %cmp34, label %for.body36, label %for.inc144.loopexit

for.inc144.loopexit:                              ; preds = %for.inc141
  br label %for.inc144

for.inc144:                                       ; preds = %for.inc144.loopexit, %for.cond30.preheader
  %indvars.iv.next242 = add nuw nsw i64 %indvars.iv241, 1
  %cmp28 = icmp slt i64 %indvars.iv.next242, %19
  br i1 %cmp28, label %for.cond30.preheader, label %for.end146

for.end146:                                       ; preds = %for.inc144
  ret void
}

; Function Attrs: nounwind uwtable
define void @Get_Direct_Motion_Vectors() local_unnamed_addr #0 {
entry:
  %pmvfw = alloca i32, align 4
  %tmpcast = bitcast i32* %pmvfw to [2 x i16]*
  %pmvbw = alloca i32, align 4
  %tmpcast2020 = bitcast i32* %pmvbw to [2 x i16]*
  %mb_a = alloca %struct.pix_pos, align 4
  %mb_b = alloca %struct.pix_pos, align 4
  %mb_d = alloca %struct.pix_pos, align 4
  %mb_c = alloca %struct.pix_pos, align 4
  %0 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %ref_idx1 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %0, i64 0, i32 32
  %1 = load i8***, i8**** %ref_idx1, align 8, !tbaa !306
  %2 = load i8**, i8*** %1, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i8**, i8*** %1, i64 1
  %3 = load i8**, i8*** %arrayidx3, align 8, !tbaa !1
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 55
  %5 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8, !tbaa !293
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 3
  %6 = load i32, i32* %current_mb_nr, align 4, !tbaa !294
  %idxprom = sext i32 %6 to i64
  %list_offset = getelementptr inbounds %struct.macroblock, %struct.macroblock* %5, i64 %idxprom, i32 20
  %7 = load i32, i32* %list_offset, align 4, !tbaa !295
  %tobool = icmp eq i32 %7, 0
  br i1 %tobool, label %if.else8, label %if.then

if.then:                                          ; preds = %entry
  %rem2022 = and i32 %6, 1
  %tobool6 = icmp eq i32 %rem2022, 0
  %8 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8, !tbaa !1
  br i1 %tobool6, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.then
  %bottom_moving_block = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %8, i64 0, i32 17
  %bottom_mv = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %8, i64 0, i32 16
  %bottom_ref_idx = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %8, i64 0, i32 14
  %bottom_ref_pic_id = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %8, i64 0, i32 15
  br label %if.end11

if.else:                                          ; preds = %if.then
  %top_moving_block = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %8, i64 0, i32 12
  %top_mv = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %8, i64 0, i32 11
  %top_ref_idx = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %8, i64 0, i32 9
  %top_ref_pic_id = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %8, i64 0, i32 10
  br label %if.end11

if.else8:                                         ; preds = %entry
  %9 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8, !tbaa !1
  %moving_block9 = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %9, i64 0, i32 7
  %mv = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %9, i64 0, i32 6
  %ref_idx10 = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %9, i64 0, i32 4
  %ref_pic_id = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %9, i64 0, i32 5
  br label %if.end11

if.end11:                                         ; preds = %if.then7, %if.else, %if.else8
  %moving_block.0.in = phi i8*** [ %bottom_moving_block, %if.then7 ], [ %top_moving_block, %if.else ], [ %moving_block9, %if.else8 ]
  %co_located_mv.0.in = phi i16***** [ %bottom_mv, %if.then7 ], [ %top_mv, %if.else ], [ %mv, %if.else8 ]
  %co_located_ref_idx.0.in = phi i8**** [ %bottom_ref_idx, %if.then7 ], [ %top_ref_idx, %if.else ], [ %ref_idx10, %if.else8 ]
  %co_located_ref_id.0.in = phi i64**** [ %bottom_ref_pic_id, %if.then7 ], [ %top_ref_pic_id, %if.else ], [ %ref_pic_id, %if.else8 ]
  %co_located_ref_id.0 = load i64***, i64**** %co_located_ref_id.0.in, align 8, !tbaa !1
  %co_located_ref_idx.0 = load i8***, i8**** %co_located_ref_idx.0.in, align 8, !tbaa !1
  %co_located_mv.0 = load i16****, i16***** %co_located_mv.0.in, align 8, !tbaa !1
  %moving_block.0 = load i8**, i8*** %moving_block.0.in, align 8, !tbaa !1
  %direct_spatial_mv_pred_flag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i64 0, i32 82
  %10 = load i32, i32* %direct_spatial_mv_pred_flag, align 4, !tbaa !362
  %tobool12 = icmp eq i32 %10, 0
  br i1 %tobool12, label %if.else1310, label %if.then13

if.then13:                                        ; preds = %if.end11
  %11 = bitcast i32* %pmvfw to i8*
  call void @llvm.lifetime.start(i64 4, i8* nonnull %11) #8
  store i32 0, i32* %pmvfw, align 4
  %12 = bitcast i32* %pmvbw to i8*
  call void @llvm.lifetime.start(i64 4, i8* nonnull %12) #8
  store i32 0, i32* %pmvbw, align 4
  %13 = bitcast %struct.pix_pos* %mb_a to i8*
  call void @llvm.lifetime.start(i64 24, i8* nonnull %13) #8
  %14 = bitcast %struct.pix_pos* %mb_b to i8*
  call void @llvm.lifetime.start(i64 24, i8* nonnull %14) #8
  %15 = bitcast %struct.pix_pos* %mb_d to i8*
  call void @llvm.lifetime.start(i64 24, i8* nonnull %15) #8
  %16 = bitcast %struct.pix_pos* %mb_c to i8*
  call void @llvm.lifetime.start(i64 24, i8* nonnull %16) #8
  call void @getLuma4x4Neighbour(i32 %6, i32 0, i32 0, i32 -1, i32 0, %struct.pix_pos* nonnull %mb_a) #8
  %17 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %current_mb_nr15 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %17, i64 0, i32 3
  %18 = load i32, i32* %current_mb_nr15, align 4, !tbaa !294
  call void @getLuma4x4Neighbour(i32 %18, i32 0, i32 0, i32 0, i32 -1, %struct.pix_pos* nonnull %mb_b) #8
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %current_mb_nr16 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i64 0, i32 3
  %20 = load i32, i32* %current_mb_nr16, align 4, !tbaa !294
  call void @getLuma4x4Neighbour(i32 %20, i32 0, i32 0, i32 16, i32 -1, %struct.pix_pos* nonnull %mb_c) #8
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %current_mb_nr17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i64 0, i32 3
  %22 = load i32, i32* %current_mb_nr17, align 4, !tbaa !294
  call void @getLuma4x4Neighbour(i32 %22, i32 0, i32 0, i32 -1, i32 -1, %struct.pix_pos* nonnull %mb_d) #8
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 95
  %24 = load i32, i32* %MbaffFrameFlag, align 4, !tbaa !325
  %tobool18 = icmp eq i32 %24, 0
  br i1 %tobool18, label %if.then19, label %if.else126

if.then19:                                        ; preds = %if.then13
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 0
  %25 = load i32, i32* %available, align 4, !tbaa !322
  %tobool20 = icmp eq i32 %25, 0
  br i1 %tobool20, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then19
  %pos_y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 5
  %26 = load i32, i32* %pos_y, align 4, !tbaa !326
  %idxprom21 = sext i32 %26 to i64
  %arrayidx22 = getelementptr inbounds i8*, i8** %2, i64 %idxprom21
  %27 = load i8*, i8** %arrayidx22, align 8, !tbaa !1
  %pos_x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 4
  %28 = load i32, i32* %pos_x, align 4, !tbaa !327
  %idxprom23 = sext i32 %28 to i64
  %arrayidx24 = getelementptr inbounds i8, i8* %27, i64 %idxprom23
  %29 = load i8, i8* %arrayidx24, align 1, !tbaa !328
  %conv = sext i8 %29 to i16
  br label %cond.end

cond.end:                                         ; preds = %if.then19, %cond.true
  %cond = phi i16 [ %conv, %cond.true ], [ -1, %if.then19 ]
  %available26 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 0
  %30 = load i32, i32* %available26, align 4, !tbaa !322
  %tobool27 = icmp eq i32 %30, 0
  br i1 %tobool27, label %cond.end37, label %cond.true28

cond.true28:                                      ; preds = %cond.end
  %pos_y29 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 5
  %31 = load i32, i32* %pos_y29, align 4, !tbaa !326
  %idxprom30 = sext i32 %31 to i64
  %arrayidx31 = getelementptr inbounds i8*, i8** %2, i64 %idxprom30
  %32 = load i8*, i8** %arrayidx31, align 8, !tbaa !1
  %pos_x32 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 4
  %33 = load i32, i32* %pos_x32, align 4, !tbaa !327
  %idxprom33 = sext i32 %33 to i64
  %arrayidx34 = getelementptr inbounds i8, i8* %32, i64 %idxprom33
  %34 = load i8, i8* %arrayidx34, align 1, !tbaa !328
  %conv35 = sext i8 %34 to i16
  br label %cond.end37

cond.end37:                                       ; preds = %cond.end, %cond.true28
  %cond38 = phi i16 [ %conv35, %cond.true28 ], [ -1, %cond.end ]
  %available40 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 0
  %35 = load i32, i32* %available40, align 4, !tbaa !322
  %tobool41 = icmp eq i32 %35, 0
  br i1 %tobool41, label %cond.end51, label %cond.true42

cond.true42:                                      ; preds = %cond.end37
  %pos_y43 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 5
  %36 = load i32, i32* %pos_y43, align 4, !tbaa !326
  %idxprom44 = sext i32 %36 to i64
  %arrayidx45 = getelementptr inbounds i8*, i8** %2, i64 %idxprom44
  %37 = load i8*, i8** %arrayidx45, align 8, !tbaa !1
  %pos_x46 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 4
  %38 = load i32, i32* %pos_x46, align 4, !tbaa !327
  %idxprom47 = sext i32 %38 to i64
  %arrayidx48 = getelementptr inbounds i8, i8* %37, i64 %idxprom47
  %39 = load i8, i8* %arrayidx48, align 1, !tbaa !328
  %conv49 = sext i8 %39 to i16
  br label %cond.end51

cond.end51:                                       ; preds = %cond.end37, %cond.true42
  %cond52 = phi i16 [ %conv49, %cond.true42 ], [ -1, %cond.end37 ]
  %available54 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 0
  %40 = load i32, i32* %available54, align 4, !tbaa !322
  %tobool55 = icmp eq i32 %40, 0
  br i1 %tobool55, label %cond.end66, label %cond.true56

cond.true56:                                      ; preds = %cond.end51
  %pos_y57 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 5
  %41 = load i32, i32* %pos_y57, align 4, !tbaa !326
  %idxprom58 = sext i32 %41 to i64
  %arrayidx59 = getelementptr inbounds i8*, i8** %2, i64 %idxprom58
  %42 = load i8*, i8** %arrayidx59, align 8, !tbaa !1
  %pos_x60 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 4
  %43 = load i32, i32* %pos_x60, align 4, !tbaa !327
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds i8, i8* %42, i64 %idxprom61
  %44 = load i8, i8* %arrayidx62, align 1, !tbaa !328
  %conv63 = sext i8 %44 to i16
  br label %cond.end66

cond.end66:                                       ; preds = %cond.end51, %cond.true56
  %cond67 = phi i16 [ %conv63, %cond.true56 ], [ %cond52, %cond.end51 ]
  br i1 %tobool20, label %cond.end80, label %cond.true71

cond.true71:                                      ; preds = %cond.end66
  %pos_y72 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 5
  %45 = load i32, i32* %pos_y72, align 4, !tbaa !326
  %idxprom73 = sext i32 %45 to i64
  %arrayidx74 = getelementptr inbounds i8*, i8** %3, i64 %idxprom73
  %46 = load i8*, i8** %arrayidx74, align 8, !tbaa !1
  %pos_x75 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 4
  %47 = load i32, i32* %pos_x75, align 4, !tbaa !327
  %idxprom76 = sext i32 %47 to i64
  %arrayidx77 = getelementptr inbounds i8, i8* %46, i64 %idxprom76
  %48 = load i8, i8* %arrayidx77, align 1, !tbaa !328
  %conv78 = sext i8 %48 to i16
  br label %cond.end80

cond.end80:                                       ; preds = %cond.end66, %cond.true71
  %cond81 = phi i16 [ %conv78, %cond.true71 ], [ -1, %cond.end66 ]
  br i1 %tobool27, label %cond.end94, label %cond.true85

cond.true85:                                      ; preds = %cond.end80
  %pos_y86 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 5
  %49 = load i32, i32* %pos_y86, align 4, !tbaa !326
  %idxprom87 = sext i32 %49 to i64
  %arrayidx88 = getelementptr inbounds i8*, i8** %3, i64 %idxprom87
  %50 = load i8*, i8** %arrayidx88, align 8, !tbaa !1
  %pos_x89 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 4
  %51 = load i32, i32* %pos_x89, align 4, !tbaa !327
  %idxprom90 = sext i32 %51 to i64
  %arrayidx91 = getelementptr inbounds i8, i8* %50, i64 %idxprom90
  %52 = load i8, i8* %arrayidx91, align 1, !tbaa !328
  %conv92 = sext i8 %52 to i16
  br label %cond.end94

cond.end94:                                       ; preds = %cond.end80, %cond.true85
  %cond95 = phi i16 [ %conv92, %cond.true85 ], [ -1, %cond.end80 ]
  br i1 %tobool41, label %cond.end108, label %cond.true99

cond.true99:                                      ; preds = %cond.end94
  %pos_y100 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 5
  %53 = load i32, i32* %pos_y100, align 4, !tbaa !326
  %idxprom101 = sext i32 %53 to i64
  %arrayidx102 = getelementptr inbounds i8*, i8** %3, i64 %idxprom101
  %54 = load i8*, i8** %arrayidx102, align 8, !tbaa !1
  %pos_x103 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 4
  %55 = load i32, i32* %pos_x103, align 4, !tbaa !327
  %idxprom104 = sext i32 %55 to i64
  %arrayidx105 = getelementptr inbounds i8, i8* %54, i64 %idxprom104
  %56 = load i8, i8* %arrayidx105, align 1, !tbaa !328
  %conv106 = sext i8 %56 to i16
  br label %cond.end108

cond.end108:                                      ; preds = %cond.end94, %cond.true99
  %cond109 = phi i16 [ %conv106, %cond.true99 ], [ -1, %cond.end94 ]
  br i1 %tobool55, label %if.end802, label %cond.true113

cond.true113:                                     ; preds = %cond.end108
  %pos_y114 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 5
  %57 = load i32, i32* %pos_y114, align 4, !tbaa !326
  %idxprom115 = sext i32 %57 to i64
  %arrayidx116 = getelementptr inbounds i8*, i8** %3, i64 %idxprom115
  %58 = load i8*, i8** %arrayidx116, align 8, !tbaa !1
  %pos_x117 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 4
  %59 = load i32, i32* %pos_x117, align 4, !tbaa !327
  %idxprom118 = sext i32 %59 to i64
  %arrayidx119 = getelementptr inbounds i8, i8* %58, i64 %idxprom118
  %60 = load i8, i8* %arrayidx119, align 1, !tbaa !328
  %conv120 = sext i8 %60 to i16
  br label %if.end802

if.else126:                                       ; preds = %if.then13
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %5, i64 %idxprom, i32 19
  %61 = load i32, i32* %mb_field, align 8, !tbaa !329
  %tobool127 = icmp eq i32 %61, 0
  %available129 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 0
  %62 = load i32, i32* %available129, align 4, !tbaa !322
  %tobool130 = icmp ne i32 %62, 0
  br i1 %tobool127, label %if.else463, label %if.then128

if.then128:                                       ; preds = %if.else126
  br i1 %tobool130, label %cond.true131, label %cond.end164

cond.true131:                                     ; preds = %if.then128
  %mb_data132 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %63 = load %struct.macroblock*, %struct.macroblock** %mb_data132, align 8, !tbaa !293
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 1
  %64 = load i32, i32* %mb_addr, align 4, !tbaa !330
  %idxprom133 = sext i32 %64 to i64
  %mb_field135 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %63, i64 %idxprom133, i32 19
  %65 = load i32, i32* %mb_field135, align 8, !tbaa !329
  %pos_y137 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 5
  %66 = load i32, i32* %pos_y137, align 4, !tbaa !326
  %idxprom138 = sext i32 %66 to i64
  %arrayidx139 = getelementptr inbounds i8*, i8** %2, i64 %idxprom138
  %67 = load i8*, i8** %arrayidx139, align 8, !tbaa !1
  %pos_x140 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 4
  %68 = load i32, i32* %pos_x140, align 4, !tbaa !327
  %idxprom141 = sext i32 %68 to i64
  %arrayidx142 = getelementptr inbounds i8, i8* %67, i64 %idxprom141
  %69 = load i8, i8* %arrayidx142, align 1, !tbaa !328
  %conv152 = sext i8 %69 to i16
  %notlhs2181 = icmp eq i32 %65, 0
  %notrhs2182 = icmp sgt i8 %69, -1
  %not.or.cond = and i1 %notrhs2182, %notlhs2181
  %mul = zext i1 %not.or.cond to i16
  %conv152.mul = shl nsw i16 %conv152, %mul
  br label %cond.end164

cond.end164:                                      ; preds = %cond.true131, %if.then128
  %cond165 = phi i16 [ -1, %if.then128 ], [ %conv152.mul, %cond.true131 ]
  %available167 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 0
  %70 = load i32, i32* %available167, align 4, !tbaa !322
  %tobool168 = icmp eq i32 %70, 0
  br i1 %tobool168, label %cond.end206, label %cond.true169

cond.true169:                                     ; preds = %cond.end164
  %mb_data170 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %71 = load %struct.macroblock*, %struct.macroblock** %mb_data170, align 8, !tbaa !293
  %mb_addr171 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 1
  %72 = load i32, i32* %mb_addr171, align 4, !tbaa !330
  %idxprom172 = sext i32 %72 to i64
  %mb_field174 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %71, i64 %idxprom172, i32 19
  %73 = load i32, i32* %mb_field174, align 8, !tbaa !329
  %pos_y177 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 5
  %74 = load i32, i32* %pos_y177, align 4, !tbaa !326
  %idxprom178 = sext i32 %74 to i64
  %arrayidx179 = getelementptr inbounds i8*, i8** %2, i64 %idxprom178
  %75 = load i8*, i8** %arrayidx179, align 8, !tbaa !1
  %pos_x180 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 4
  %76 = load i32, i32* %pos_x180, align 4, !tbaa !327
  %idxprom181 = sext i32 %76 to i64
  %arrayidx182 = getelementptr inbounds i8, i8* %75, i64 %idxprom181
  %77 = load i8, i8* %arrayidx182, align 1, !tbaa !328
  %conv193 = sext i8 %77 to i16
  %notlhs = icmp eq i32 %73, 0
  %notrhs = icmp sgt i8 %77, -1
  %not.or.cond2145 = and i1 %notrhs, %notlhs
  %mul202 = zext i1 %not.or.cond2145 to i16
  %conv193.mul202 = shl nsw i16 %conv193, %mul202
  br label %cond.end206

cond.end206:                                      ; preds = %cond.true169, %cond.end164
  %cond207 = phi i16 [ -1, %cond.end164 ], [ %conv193.mul202, %cond.true169 ]
  %available209 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 0
  %78 = load i32, i32* %available209, align 4, !tbaa !322
  %tobool210 = icmp eq i32 %78, 0
  br i1 %tobool210, label %cond.end248, label %cond.true211

cond.true211:                                     ; preds = %cond.end206
  %mb_data212 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %79 = load %struct.macroblock*, %struct.macroblock** %mb_data212, align 8, !tbaa !293
  %mb_addr213 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 1
  %80 = load i32, i32* %mb_addr213, align 4, !tbaa !330
  %idxprom214 = sext i32 %80 to i64
  %mb_field216 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %79, i64 %idxprom214, i32 19
  %81 = load i32, i32* %mb_field216, align 8, !tbaa !329
  %pos_y219 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 5
  %82 = load i32, i32* %pos_y219, align 4, !tbaa !326
  %idxprom220 = sext i32 %82 to i64
  %arrayidx221 = getelementptr inbounds i8*, i8** %2, i64 %idxprom220
  %83 = load i8*, i8** %arrayidx221, align 8, !tbaa !1
  %pos_x222 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 4
  %84 = load i32, i32* %pos_x222, align 4, !tbaa !327
  %idxprom223 = sext i32 %84 to i64
  %arrayidx224 = getelementptr inbounds i8, i8* %83, i64 %idxprom223
  %85 = load i8, i8* %arrayidx224, align 1, !tbaa !328
  %conv235 = sext i8 %85 to i16
  %notlhs2169 = icmp eq i32 %81, 0
  %notrhs2170 = icmp sgt i8 %85, -1
  %not.or.cond2146 = and i1 %notrhs2170, %notlhs2169
  %mul244 = zext i1 %not.or.cond2146 to i16
  %conv235.mul244 = shl nsw i16 %conv235, %mul244
  br label %cond.end248

cond.end248:                                      ; preds = %cond.true211, %cond.end206
  %cond249 = phi i16 [ -1, %cond.end206 ], [ %conv235.mul244, %cond.true211 ]
  %available251 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 0
  %86 = load i32, i32* %available251, align 4, !tbaa !322
  %tobool252 = icmp eq i32 %86, 0
  br i1 %tobool252, label %cond.end291, label %cond.true253

cond.true253:                                     ; preds = %cond.end248
  %mb_data254 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %87 = load %struct.macroblock*, %struct.macroblock** %mb_data254, align 8, !tbaa !293
  %mb_addr255 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 1
  %88 = load i32, i32* %mb_addr255, align 4, !tbaa !330
  %idxprom256 = sext i32 %88 to i64
  %mb_field258 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %87, i64 %idxprom256, i32 19
  %89 = load i32, i32* %mb_field258, align 8, !tbaa !329
  %pos_y261 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 5
  %90 = load i32, i32* %pos_y261, align 4, !tbaa !326
  %idxprom262 = sext i32 %90 to i64
  %arrayidx263 = getelementptr inbounds i8*, i8** %2, i64 %idxprom262
  %91 = load i8*, i8** %arrayidx263, align 8, !tbaa !1
  %pos_x264 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 4
  %92 = load i32, i32* %pos_x264, align 4, !tbaa !327
  %idxprom265 = sext i32 %92 to i64
  %arrayidx266 = getelementptr inbounds i8, i8* %91, i64 %idxprom265
  %93 = load i8, i8* %arrayidx266, align 1, !tbaa !328
  %conv277 = sext i8 %93 to i16
  %notlhs2171 = icmp eq i32 %89, 0
  %notrhs2172 = icmp sgt i8 %93, -1
  %not.or.cond2147 = and i1 %notrhs2172, %notlhs2171
  %mul286 = zext i1 %not.or.cond2147 to i16
  %conv277.mul286 = shl nsw i16 %conv277, %mul286
  br label %cond.end291

cond.end291:                                      ; preds = %cond.true253, %cond.end248
  %cond292 = phi i16 [ %cond249, %cond.end248 ], [ %conv277.mul286, %cond.true253 ]
  %tobool295 = icmp eq i32 %62, 0
  br i1 %tobool295, label %cond.end333, label %cond.true296

cond.true296:                                     ; preds = %cond.end291
  %mb_data297 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %94 = load %struct.macroblock*, %struct.macroblock** %mb_data297, align 8, !tbaa !293
  %mb_addr298 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 1
  %95 = load i32, i32* %mb_addr298, align 4, !tbaa !330
  %idxprom299 = sext i32 %95 to i64
  %mb_field301 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %94, i64 %idxprom299, i32 19
  %96 = load i32, i32* %mb_field301, align 8, !tbaa !329
  %pos_y304 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 5
  %97 = load i32, i32* %pos_y304, align 4, !tbaa !326
  %idxprom305 = sext i32 %97 to i64
  %arrayidx306 = getelementptr inbounds i8*, i8** %3, i64 %idxprom305
  %98 = load i8*, i8** %arrayidx306, align 8, !tbaa !1
  %pos_x307 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 4
  %99 = load i32, i32* %pos_x307, align 4, !tbaa !327
  %idxprom308 = sext i32 %99 to i64
  %arrayidx309 = getelementptr inbounds i8, i8* %98, i64 %idxprom308
  %100 = load i8, i8* %arrayidx309, align 1, !tbaa !328
  %conv320 = sext i8 %100 to i16
  %notlhs2173 = icmp eq i32 %96, 0
  %notrhs2174 = icmp sgt i8 %100, -1
  %not.or.cond2148 = and i1 %notrhs2174, %notlhs2173
  %mul329 = zext i1 %not.or.cond2148 to i16
  %conv320.mul329 = shl nsw i16 %conv320, %mul329
  br label %cond.end333

cond.end333:                                      ; preds = %cond.true296, %cond.end291
  %cond334 = phi i16 [ -1, %cond.end291 ], [ %conv320.mul329, %cond.true296 ]
  br i1 %tobool168, label %cond.end375, label %cond.true338

cond.true338:                                     ; preds = %cond.end333
  %mb_data339 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %101 = load %struct.macroblock*, %struct.macroblock** %mb_data339, align 8, !tbaa !293
  %mb_addr340 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 1
  %102 = load i32, i32* %mb_addr340, align 4, !tbaa !330
  %idxprom341 = sext i32 %102 to i64
  %mb_field343 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %101, i64 %idxprom341, i32 19
  %103 = load i32, i32* %mb_field343, align 8, !tbaa !329
  %pos_y346 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 5
  %104 = load i32, i32* %pos_y346, align 4, !tbaa !326
  %idxprom347 = sext i32 %104 to i64
  %arrayidx348 = getelementptr inbounds i8*, i8** %3, i64 %idxprom347
  %105 = load i8*, i8** %arrayidx348, align 8, !tbaa !1
  %pos_x349 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 4
  %106 = load i32, i32* %pos_x349, align 4, !tbaa !327
  %idxprom350 = sext i32 %106 to i64
  %arrayidx351 = getelementptr inbounds i8, i8* %105, i64 %idxprom350
  %107 = load i8, i8* %arrayidx351, align 1, !tbaa !328
  %conv362 = sext i8 %107 to i16
  %notlhs2175 = icmp eq i32 %103, 0
  %notrhs2176 = icmp sgt i8 %107, -1
  %not.or.cond2149 = and i1 %notrhs2176, %notlhs2175
  %mul371 = zext i1 %not.or.cond2149 to i16
  %conv362.mul371 = shl nsw i16 %conv362, %mul371
  br label %cond.end375

cond.end375:                                      ; preds = %cond.true338, %cond.end333
  %cond376 = phi i16 [ -1, %cond.end333 ], [ %conv362.mul371, %cond.true338 ]
  br i1 %tobool210, label %cond.end417, label %cond.true380

cond.true380:                                     ; preds = %cond.end375
  %mb_data381 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %108 = load %struct.macroblock*, %struct.macroblock** %mb_data381, align 8, !tbaa !293
  %mb_addr382 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 1
  %109 = load i32, i32* %mb_addr382, align 4, !tbaa !330
  %idxprom383 = sext i32 %109 to i64
  %mb_field385 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %108, i64 %idxprom383, i32 19
  %110 = load i32, i32* %mb_field385, align 8, !tbaa !329
  %pos_y388 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 5
  %111 = load i32, i32* %pos_y388, align 4, !tbaa !326
  %idxprom389 = sext i32 %111 to i64
  %arrayidx390 = getelementptr inbounds i8*, i8** %3, i64 %idxprom389
  %112 = load i8*, i8** %arrayidx390, align 8, !tbaa !1
  %pos_x391 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 4
  %113 = load i32, i32* %pos_x391, align 4, !tbaa !327
  %idxprom392 = sext i32 %113 to i64
  %arrayidx393 = getelementptr inbounds i8, i8* %112, i64 %idxprom392
  %114 = load i8, i8* %arrayidx393, align 1, !tbaa !328
  %conv404 = sext i8 %114 to i16
  %notlhs2177 = icmp eq i32 %110, 0
  %notrhs2178 = icmp sgt i8 %114, -1
  %not.or.cond2150 = and i1 %notrhs2178, %notlhs2177
  %mul413 = zext i1 %not.or.cond2150 to i16
  %conv404.mul413 = shl nsw i16 %conv404, %mul413
  br label %cond.end417

cond.end417:                                      ; preds = %cond.true380, %cond.end375
  %cond418 = phi i16 [ -1, %cond.end375 ], [ %conv404.mul413, %cond.true380 ]
  br i1 %tobool252, label %if.end802, label %cond.true422

cond.true422:                                     ; preds = %cond.end417
  %mb_data423 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %115 = load %struct.macroblock*, %struct.macroblock** %mb_data423, align 8, !tbaa !293
  %mb_addr424 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 1
  %116 = load i32, i32* %mb_addr424, align 4, !tbaa !330
  %idxprom425 = sext i32 %116 to i64
  %mb_field427 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %115, i64 %idxprom425, i32 19
  %117 = load i32, i32* %mb_field427, align 8, !tbaa !329
  %pos_y430 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 5
  %118 = load i32, i32* %pos_y430, align 4, !tbaa !326
  %idxprom431 = sext i32 %118 to i64
  %arrayidx432 = getelementptr inbounds i8*, i8** %3, i64 %idxprom431
  %119 = load i8*, i8** %arrayidx432, align 8, !tbaa !1
  %pos_x433 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 4
  %120 = load i32, i32* %pos_x433, align 4, !tbaa !327
  %idxprom434 = sext i32 %120 to i64
  %arrayidx435 = getelementptr inbounds i8, i8* %119, i64 %idxprom434
  %121 = load i8, i8* %arrayidx435, align 1, !tbaa !328
  %conv446 = sext i8 %121 to i16
  %notlhs2179 = icmp eq i32 %117, 0
  %notrhs2180 = icmp sgt i8 %121, -1
  %not.or.cond2151 = and i1 %notrhs2180, %notlhs2179
  %mul455 = zext i1 %not.or.cond2151 to i16
  %conv446.mul455 = shl nsw i16 %conv446, %mul455
  br label %if.end802

if.else463:                                       ; preds = %if.else126
  br i1 %tobool130, label %cond.true466, label %cond.end502

cond.true466:                                     ; preds = %if.else463
  %mb_data467 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %122 = load %struct.macroblock*, %struct.macroblock** %mb_data467, align 8, !tbaa !293
  %mb_addr468 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 1
  %123 = load i32, i32* %mb_addr468, align 4, !tbaa !330
  %idxprom469 = sext i32 %123 to i64
  %mb_field471 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %122, i64 %idxprom469, i32 19
  %124 = load i32, i32* %mb_field471, align 8, !tbaa !329
  %tobool472 = icmp ne i32 %124, 0
  %pos_y474 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 5
  %125 = load i32, i32* %pos_y474, align 4, !tbaa !326
  %idxprom475 = sext i32 %125 to i64
  %arrayidx476 = getelementptr inbounds i8*, i8** %2, i64 %idxprom475
  %126 = load i8*, i8** %arrayidx476, align 8, !tbaa !1
  %pos_x477 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 4
  %127 = load i32, i32* %pos_x477, align 4, !tbaa !327
  %idxprom478 = sext i32 %127 to i64
  %arrayidx479 = getelementptr inbounds i8, i8* %126, i64 %idxprom478
  %128 = load i8, i8* %arrayidx479, align 1, !tbaa !328
  %conv490 = sext i8 %128 to i32
  %tobool4722203 = zext i1 %tobool472 to i32
  %.lobit2205 = lshr i8 %128, 7
  %129 = zext i8 %.lobit2205 to i32
  %shr = or i32 %tobool4722203, %129
  %shr.conv490 = ashr i32 %conv490, %shr
  %phitmp = trunc i32 %shr.conv490 to i16
  br label %cond.end502

cond.end502:                                      ; preds = %cond.true466, %if.else463
  %cond503 = phi i16 [ -1, %if.else463 ], [ %phitmp, %cond.true466 ]
  %available505 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 0
  %130 = load i32, i32* %available505, align 4, !tbaa !322
  %tobool506 = icmp eq i32 %130, 0
  br i1 %tobool506, label %cond.end544, label %cond.true507

cond.true507:                                     ; preds = %cond.end502
  %mb_data508 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %131 = load %struct.macroblock*, %struct.macroblock** %mb_data508, align 8, !tbaa !293
  %mb_addr509 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 1
  %132 = load i32, i32* %mb_addr509, align 4, !tbaa !330
  %idxprom510 = sext i32 %132 to i64
  %mb_field512 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %131, i64 %idxprom510, i32 19
  %133 = load i32, i32* %mb_field512, align 8, !tbaa !329
  %tobool513 = icmp ne i32 %133, 0
  %pos_y515 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 5
  %134 = load i32, i32* %pos_y515, align 4, !tbaa !326
  %idxprom516 = sext i32 %134 to i64
  %arrayidx517 = getelementptr inbounds i8*, i8** %2, i64 %idxprom516
  %135 = load i8*, i8** %arrayidx517, align 8, !tbaa !1
  %pos_x518 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 4
  %136 = load i32, i32* %pos_x518, align 4, !tbaa !327
  %idxprom519 = sext i32 %136 to i64
  %arrayidx520 = getelementptr inbounds i8, i8* %135, i64 %idxprom519
  %137 = load i8, i8* %arrayidx520, align 1, !tbaa !328
  %conv531 = sext i8 %137 to i32
  %tobool5132183 = zext i1 %tobool513 to i32
  %.lobit = lshr i8 %137, 7
  %138 = zext i8 %.lobit to i32
  %shr532 = or i32 %tobool5132183, %138
  %shr532.conv531 = ashr i32 %conv531, %shr532
  %phitmp2207 = trunc i32 %shr532.conv531 to i16
  br label %cond.end544

cond.end544:                                      ; preds = %cond.true507, %cond.end502
  %cond545 = phi i16 [ -1, %cond.end502 ], [ %phitmp2207, %cond.true507 ]
  %available547 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 0
  %139 = load i32, i32* %available547, align 4, !tbaa !322
  %tobool548 = icmp eq i32 %139, 0
  br i1 %tobool548, label %cond.end586, label %cond.true549

cond.true549:                                     ; preds = %cond.end544
  %mb_data550 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %140 = load %struct.macroblock*, %struct.macroblock** %mb_data550, align 8, !tbaa !293
  %mb_addr551 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 1
  %141 = load i32, i32* %mb_addr551, align 4, !tbaa !330
  %idxprom552 = sext i32 %141 to i64
  %mb_field554 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %140, i64 %idxprom552, i32 19
  %142 = load i32, i32* %mb_field554, align 8, !tbaa !329
  %tobool555 = icmp ne i32 %142, 0
  %pos_y557 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 5
  %143 = load i32, i32* %pos_y557, align 4, !tbaa !326
  %idxprom558 = sext i32 %143 to i64
  %arrayidx559 = getelementptr inbounds i8*, i8** %2, i64 %idxprom558
  %144 = load i8*, i8** %arrayidx559, align 8, !tbaa !1
  %pos_x560 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 4
  %145 = load i32, i32* %pos_x560, align 4, !tbaa !327
  %idxprom561 = sext i32 %145 to i64
  %arrayidx562 = getelementptr inbounds i8, i8* %144, i64 %idxprom561
  %146 = load i8, i8* %arrayidx562, align 1, !tbaa !328
  %conv573 = sext i8 %146 to i32
  %tobool5552185 = zext i1 %tobool555 to i32
  %.lobit2187 = lshr i8 %146, 7
  %147 = zext i8 %.lobit2187 to i32
  %shr574 = or i32 %tobool5552185, %147
  %shr574.conv573 = ashr i32 %conv573, %shr574
  br label %cond.end586

cond.end586:                                      ; preds = %cond.true549, %cond.end544
  %cond587 = phi i32 [ -1, %cond.end544 ], [ %shr574.conv573, %cond.true549 ]
  %available589 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 0
  %148 = load i32, i32* %available589, align 4, !tbaa !322
  %tobool590 = icmp eq i32 %148, 0
  br i1 %tobool590, label %cond.end629, label %cond.true591

cond.true591:                                     ; preds = %cond.end586
  %mb_data592 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %149 = load %struct.macroblock*, %struct.macroblock** %mb_data592, align 8, !tbaa !293
  %mb_addr593 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 1
  %150 = load i32, i32* %mb_addr593, align 4, !tbaa !330
  %idxprom594 = sext i32 %150 to i64
  %mb_field596 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %149, i64 %idxprom594, i32 19
  %151 = load i32, i32* %mb_field596, align 8, !tbaa !329
  %tobool597 = icmp ne i32 %151, 0
  %pos_y599 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 5
  %152 = load i32, i32* %pos_y599, align 4, !tbaa !326
  %idxprom600 = sext i32 %152 to i64
  %arrayidx601 = getelementptr inbounds i8*, i8** %2, i64 %idxprom600
  %153 = load i8*, i8** %arrayidx601, align 8, !tbaa !1
  %pos_x602 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 4
  %154 = load i32, i32* %pos_x602, align 4, !tbaa !327
  %idxprom603 = sext i32 %154 to i64
  %arrayidx604 = getelementptr inbounds i8, i8* %153, i64 %idxprom603
  %155 = load i8, i8* %arrayidx604, align 1, !tbaa !328
  %conv615 = sext i8 %155 to i32
  %tobool5972188 = zext i1 %tobool597 to i32
  %.lobit2190 = lshr i8 %155, 7
  %156 = zext i8 %.lobit2190 to i32
  %shr616 = or i32 %tobool5972188, %156
  %shr616.conv615 = ashr i32 %conv615, %shr616
  br label %cond.end629

cond.end629:                                      ; preds = %cond.true591, %cond.end586
  %cond630 = phi i32 [ %cond587, %cond.end586 ], [ %shr616.conv615, %cond.true591 ]
  %conv631 = trunc i32 %cond630 to i16
  %tobool633 = icmp eq i32 %62, 0
  br i1 %tobool633, label %cond.end671, label %cond.true634

cond.true634:                                     ; preds = %cond.end629
  %mb_data635 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %157 = load %struct.macroblock*, %struct.macroblock** %mb_data635, align 8, !tbaa !293
  %mb_addr636 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 1
  %158 = load i32, i32* %mb_addr636, align 4, !tbaa !330
  %idxprom637 = sext i32 %158 to i64
  %mb_field639 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %157, i64 %idxprom637, i32 19
  %159 = load i32, i32* %mb_field639, align 8, !tbaa !329
  %tobool640 = icmp ne i32 %159, 0
  %pos_y642 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 5
  %160 = load i32, i32* %pos_y642, align 4, !tbaa !326
  %idxprom643 = sext i32 %160 to i64
  %arrayidx644 = getelementptr inbounds i8*, i8** %3, i64 %idxprom643
  %161 = load i8*, i8** %arrayidx644, align 8, !tbaa !1
  %pos_x645 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i64 0, i32 4
  %162 = load i32, i32* %pos_x645, align 4, !tbaa !327
  %idxprom646 = sext i32 %162 to i64
  %arrayidx647 = getelementptr inbounds i8, i8* %161, i64 %idxprom646
  %163 = load i8, i8* %arrayidx647, align 1, !tbaa !328
  %conv658 = sext i8 %163 to i32
  %tobool6402191 = zext i1 %tobool640 to i32
  %.lobit2193 = lshr i8 %163, 7
  %164 = zext i8 %.lobit2193 to i32
  %shr659 = or i32 %tobool6402191, %164
  %shr659.conv658 = ashr i32 %conv658, %shr659
  %phitmp2208 = trunc i32 %shr659.conv658 to i16
  br label %cond.end671

cond.end671:                                      ; preds = %cond.true634, %cond.end629
  %cond672 = phi i16 [ -1, %cond.end629 ], [ %phitmp2208, %cond.true634 ]
  br i1 %tobool506, label %cond.end713, label %cond.true676

cond.true676:                                     ; preds = %cond.end671
  %mb_data677 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %165 = load %struct.macroblock*, %struct.macroblock** %mb_data677, align 8, !tbaa !293
  %mb_addr678 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 1
  %166 = load i32, i32* %mb_addr678, align 4, !tbaa !330
  %idxprom679 = sext i32 %166 to i64
  %mb_field681 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %165, i64 %idxprom679, i32 19
  %167 = load i32, i32* %mb_field681, align 8, !tbaa !329
  %tobool682 = icmp ne i32 %167, 0
  %pos_y684 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 5
  %168 = load i32, i32* %pos_y684, align 4, !tbaa !326
  %idxprom685 = sext i32 %168 to i64
  %arrayidx686 = getelementptr inbounds i8*, i8** %3, i64 %idxprom685
  %169 = load i8*, i8** %arrayidx686, align 8, !tbaa !1
  %pos_x687 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i64 0, i32 4
  %170 = load i32, i32* %pos_x687, align 4, !tbaa !327
  %idxprom688 = sext i32 %170 to i64
  %arrayidx689 = getelementptr inbounds i8, i8* %169, i64 %idxprom688
  %171 = load i8, i8* %arrayidx689, align 1, !tbaa !328
  %conv700 = sext i8 %171 to i32
  %tobool6822194 = zext i1 %tobool682 to i32
  %.lobit2196 = lshr i8 %171, 7
  %172 = zext i8 %.lobit2196 to i32
  %shr701 = or i32 %tobool6822194, %172
  %shr701.conv700 = ashr i32 %conv700, %shr701
  %phitmp2209 = trunc i32 %shr701.conv700 to i16
  br label %cond.end713

cond.end713:                                      ; preds = %cond.true676, %cond.end671
  %cond714 = phi i16 [ -1, %cond.end671 ], [ %phitmp2209, %cond.true676 ]
  br i1 %tobool548, label %cond.end755, label %cond.true718

cond.true718:                                     ; preds = %cond.end713
  %mb_data719 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %173 = load %struct.macroblock*, %struct.macroblock** %mb_data719, align 8, !tbaa !293
  %mb_addr720 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 1
  %174 = load i32, i32* %mb_addr720, align 4, !tbaa !330
  %idxprom721 = sext i32 %174 to i64
  %mb_field723 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %173, i64 %idxprom721, i32 19
  %175 = load i32, i32* %mb_field723, align 8, !tbaa !329
  %tobool724 = icmp ne i32 %175, 0
  %pos_y726 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 5
  %176 = load i32, i32* %pos_y726, align 4, !tbaa !326
  %idxprom727 = sext i32 %176 to i64
  %arrayidx728 = getelementptr inbounds i8*, i8** %3, i64 %idxprom727
  %177 = load i8*, i8** %arrayidx728, align 8, !tbaa !1
  %pos_x729 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_d, i64 0, i32 4
  %178 = load i32, i32* %pos_x729, align 4, !tbaa !327
  %idxprom730 = sext i32 %178 to i64
  %arrayidx731 = getelementptr inbounds i8, i8* %177, i64 %idxprom730
  %179 = load i8, i8* %arrayidx731, align 1, !tbaa !328
  %conv742 = sext i8 %179 to i32
  %tobool7242197 = zext i1 %tobool724 to i32
  %.lobit2199 = lshr i8 %179, 7
  %180 = zext i8 %.lobit2199 to i32
  %shr743 = or i32 %tobool7242197, %180
  %shr743.conv742 = ashr i32 %conv742, %shr743
  br label %cond.end755

cond.end755:                                      ; preds = %cond.true718, %cond.end713
  %cond756 = phi i32 [ -1, %cond.end713 ], [ %shr743.conv742, %cond.true718 ]
  br i1 %tobool590, label %cond.end798, label %cond.true760

cond.true760:                                     ; preds = %cond.end755
  %mb_data761 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i64 0, i32 55
  %181 = load %struct.macroblock*, %struct.macroblock** %mb_data761, align 8, !tbaa !293
  %mb_addr762 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 1
  %182 = load i32, i32* %mb_addr762, align 4, !tbaa !330
  %idxprom763 = sext i32 %182 to i64
  %mb_field765 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %181, i64 %idxprom763, i32 19
  %183 = load i32, i32* %mb_field765, align 8, !tbaa !329
  %tobool766 = icmp ne i32 %183, 0
  %pos_y768 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 5
  %184 = load i32, i32* %pos_y768, align 4, !tbaa !326
  %idxprom769 = sext i32 %184 to i64
  %arrayidx770 = getelementptr inbounds i8*, i8** %3, i64 %idxprom769
  %185 = load i8*, i8** %arrayidx770, align 8, !tbaa !1
  %pos_x771 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_c, i64 0, i32 4
  %186 = load i32, i32* %pos_x771, align 4, !tbaa !327
  %idxprom772 = sext i32 %186 to i64
  %arrayidx773 = getelementptr inbounds i8, i8* %185, i64 %idxprom772
  %187 = load i8, i8* %arrayidx773, align 1, !tbaa !328
  %conv784 = sext i8 %187 to i32
  %tobool7662200 = zext i1 %tobool766 to i32
  %.lobit2202 = lshr i8 %187, 7
  %188 = zext i8 %.lobit2202 to i32
  %shr785 = or i32 %tobool7662200, %188
  %shr785.conv784 = ashr i32 %conv784, %shr785
  br label %cond.end798

cond.end798:                                      ; preds = %cond.true760, %cond.end755
  %cond799 = phi i32 [ %cond756, %cond.end755 ], [ %shr785.conv784, %cond.true760 ]
  %conv800 = trunc i32 %cond799 to i16
  br label %if.end802

if.end802:                                        ; preds = %cond.true422, %cond.end417, %cond.true113, %cond.end108, %cond.end798
  %l0_refA.0 = phi i16 [ %cond503, %cond.end798 ], [ %cond, %cond.end108 ], [ %cond, %cond.true113 ], [ %cond165, %cond.end417 ], [ %cond165, %cond.true422 ]
  %l0_refB.0 = phi i16 [ %cond545, %cond.end798 ], [ %cond38, %cond.end108 ], [ %cond38, %cond.true113 ], [ %cond207, %cond.end417 ], [ %cond207, %cond.true422 ]
  %l0_refC.0 = phi i16 [ %conv631, %cond.end798 ], [ %cond67, %cond.end108 ], [ %cond67, %cond.true113 ], [ %cond292, %cond.end417 ], [ %cond292, %cond.true422 ]
  %l1_refA.0 = phi i16 [ %cond672, %cond.end798 ], [ %cond81, %cond.end108 ], [ %cond81, %cond.true113 ], [ %cond334, %cond.end417 ], [ %cond334, %cond.true422 ]
  %l1_refB.0 = phi i16 [ %cond714, %cond.end798 ], [ %cond95, %cond.end108 ], [ %cond95, %cond.true113 ], [ %cond376, %cond.end417 ], [ %cond376, %cond.true422 ]
  %l1_refC.0 = phi i16 [ %conv800, %cond.end798 ], [ %cond109, %cond.end108 ], [ %conv120, %cond.true113 ], [ %cond418, %cond.end417 ], [ %conv446.mul455, %cond.true422 ]
  %189 = or i16 %l0_refB.0, %l0_refA.0
  %190 = icmp sgt i16 %189, -1
  %cmp823 = icmp sgt i16 %l0_refA.0, %l0_refB.0
  %cmp812 = icmp slt i16 %l0_refA.0, %l0_refB.0
  %cmp823.sink = select i1 %190, i1 %cmp812, i1 %cmp823
  %.sink1676 = select i1 %cmp823.sink, i16 %l0_refA.0, i16 %l0_refB.0
  %191 = or i16 %.sink1676, %l0_refC.0
  %192 = icmp sgt i16 %191, -1
  %cmp855 = icmp sgt i16 %.sink1676, %l0_refC.0
  %cmp844 = icmp slt i16 %.sink1676, %l0_refC.0
  %cmp855.sink = select i1 %192, i1 %cmp844, i1 %cmp855
  %.sink1678 = select i1 %cmp855.sink, i16 %.sink1676, i16 %l0_refC.0
  %conv860 = sext i16 %.sink1678 to i32
  %193 = or i16 %l1_refB.0, %l1_refA.0
  %194 = icmp sgt i16 %193, -1
  %cmp887 = icmp sgt i16 %l1_refA.0, %l1_refB.0
  %cmp876 = icmp slt i16 %l1_refA.0, %l1_refB.0
  %cmp887.sink = select i1 %194, i1 %cmp876, i1 %cmp887
  %.sink1680 = select i1 %cmp887.sink, i16 %l1_refA.0, i16 %l1_refB.0
  %195 = or i16 %.sink1680, %l1_refC.0
  %196 = icmp sgt i16 %195, -1
  %cmp919 = icmp sgt i16 %.sink1680, %l1_refC.0
  %cmp908 = icmp slt i16 %.sink1680, %l1_refC.0
  %cmp919.sink = select i1 %196, i1 %cmp908, i1 %cmp919
  %.sink1682 = select i1 %cmp919.sink, i16 %.sink1680, i16 %l1_refC.0
  %conv924 = sext i16 %.sink1682 to i32
  %cmp931 = icmp sgt i16 %.sink1678, -1
  br i1 %cmp931, label %if.then933, label %if.end938

if.then933:                                       ; preds = %if.end802
  %arraydecay = bitcast i32* %pmvfw to i16*
  %197 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %ref_idx934 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %197, i64 0, i32 32
  %198 = load i8***, i8**** %ref_idx934, align 8, !tbaa !306
  %199 = load i8**, i8*** %198, align 8, !tbaa !1
  %mv936 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %197, i64 0, i32 35
  %200 = load i16****, i16***** %mv936, align 8, !tbaa !307
  %201 = load i16***, i16**** %200, align 8, !tbaa !1
  call void @SetMotionVectorPredictor(i16* nonnull %arraydecay, i8** %199, i16*** %201, i16 signext %.sink1678, i32 0, i32 0, i32 0, i32 16, i32 16)
  br label %if.end938

if.end938:                                        ; preds = %if.then933, %if.end802
  %cmp940 = icmp sgt i16 %.sink1682, -1
  br i1 %cmp940, label %if.then942, label %for.cond.preheader

if.then942:                                       ; preds = %if.end938
  %arraydecay943 = bitcast i32* %pmvbw to i16*
  %202 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %ref_idx944 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %202, i64 0, i32 32
  %203 = load i8***, i8**** %ref_idx944, align 8, !tbaa !306
  %arrayidx945 = getelementptr inbounds i8**, i8*** %203, i64 1
  %204 = load i8**, i8*** %arrayidx945, align 8, !tbaa !1
  %mv946 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %202, i64 0, i32 35
  %205 = load i16****, i16***** %mv946, align 8, !tbaa !307
  %arrayidx947 = getelementptr inbounds i16***, i16**** %205, i64 1
  %206 = load i16***, i16**** %arrayidx947, align 8, !tbaa !1
  call void @SetMotionVectorPredictor(i16* nonnull %arraydecay943, i8** %204, i16*** %206, i16 signext %.sink1682, i32 1, i32 0, i32 0, i32 16, i32 16)
  %.pre2135 = load i16, i16* %arraydecay943, align 4
  %arrayidx1056.phi.trans.insert = getelementptr inbounds [2 x i16], [2 x i16]* %tmpcast2020, i64 0, i64 1
  %.pre2136 = load i16, i16* %arrayidx1056.phi.trans.insert, align 2
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end938, %if.then942
  %207 = phi i16 [ %.pre2136, %if.then942 ], [ 0, %if.end938 ]
  %208 = phi i16 [ %.pre2135, %if.then942 ], [ 0, %if.end938 ]
  %tobool970 = icmp eq i16 %.sink1678, 0
  %arrayidx987 = bitcast i32* %pmvfw to i16*
  %209 = load i16, i16* %arrayidx987, align 4
  %idxprom989 = sext i16 %.sink1678 to i64
  %arrayidx993 = getelementptr inbounds [2 x i16], [2 x i16]* %tmpcast, i64 0, i64 1
  %210 = load i16, i16* %arrayidx993, align 2
  %conv999 = trunc i16 %.sink1678 to i8
  %cmp1026 = icmp eq i16 %.sink1682, 0
  %conv1062.sink = trunc i16 %.sink1682 to i8
  %idxprom1052 = sext i16 %.sink1682 to i64
  %211 = and i16 %.sink1682, %.sink1678
  %212 = icmp slt i16 %211, 0
  %213 = icmp sgt i32 %conv860, 0
  %cond1095 = select i1 %213, i32 %conv860, i32 0
  %214 = zext i32 %cond1095 to i64
  %215 = icmp sgt i32 %conv924, 0
  %cond1170 = select i1 %215, i32 %conv924, i32 0
  %216 = zext i32 %cond1170 to i64
  br label %for.body

for.body:                                         ; preds = %for.inc1307, %for.cond.preheader
  %indvars.iv2069 = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next2070, %for.inc1307 ]
  %217 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %217, i64 0, i32 34
  %218 = load i32, i32* %pix_y, align 4, !tbaa !345
  %shr951 = ashr i32 %218, 2
  %219 = trunc i64 %indvars.iv2069 to i32
  %add = add nsw i32 %shr951, %219
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %217, i64 0, i32 38
  %220 = load i32, i32* %opix_y, align 4, !tbaa !312
  %shr952 = ashr i32 %220, 2
  %add953 = add nsw i32 %shr952, %219
  %idxprom972 = sext i32 %add953 to i64
  %arrayidx973 = getelementptr inbounds i8*, i8** %moving_block.0, i64 %idxprom972
  %idxprom982 = sext i32 %add to i64
  br label %for.body957

for.body957:                                      ; preds = %for.inc.for.body957_crit_edge, %for.body
  %221 = phi %struct.ImageParameters* [ %217, %for.body ], [ %.pre2137, %for.inc.for.body957_crit_edge ]
  %indvars.iv2066 = phi i64 [ 0, %for.body ], [ %indvars.iv.next2067, %for.inc.for.body957_crit_edge ]
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %221, i64 0, i32 33
  %222 = load i32, i32* %pix_x, align 8, !tbaa !346
  %shr958 = ashr i32 %222, 2
  %223 = trunc i64 %indvars.iv2066 to i32
  %add959 = add nsw i32 %shr958, %223
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %221, i64 0, i32 37
  %224 = load i32, i32* %opix_x, align 8, !tbaa !311
  %shr960 = ashr i32 %224, 2
  %add961 = add nsw i32 %shr960, %223
  %all_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %221, i64 0, i32 75
  %225 = load i16******, i16******* %all_mv, align 8, !tbaa !343
  %arrayidx963 = getelementptr inbounds i16*****, i16****** %225, i64 %indvars.iv2069
  %226 = load i16*****, i16****** %arrayidx963, align 8, !tbaa !1
  %arrayidx965 = getelementptr inbounds i16****, i16***** %226, i64 %indvars.iv2066
  %227 = load i16****, i16***** %arrayidx965, align 8, !tbaa !1
  br i1 %cmp931, label %if.then969, label %if.else1006

if.then969:                                       ; preds = %for.body957
  br i1 %tobool970, label %land.lhs.true971, label %if.else986

land.lhs.true971:                                 ; preds = %if.then969
  %228 = load i8*, i8** %arrayidx973, align 8, !tbaa !1
  %idxprom974 = sext i32 %add961 to i64
  %arrayidx975 = getelementptr inbounds i8, i8* %228, i64 %idxprom974
  %229 = load i8, i8* %arrayidx975, align 1, !tbaa !328
  %tobool976 = icmp eq i8 %229, 0
  br i1 %tobool976, label %if.then977, label %if.else986

if.then977:                                       ; preds = %land.lhs.true971
  %230 = bitcast i16**** %227 to i32****
  %231 = load i32***, i32**** %230, align 8, !tbaa !1
  %232 = load i32**, i32*** %231, align 8, !tbaa !1
  %233 = load i32*, i32** %232, align 8, !tbaa !1
  store i32 0, i32* %233, align 2
  br label %if.end1020

if.else986:                                       ; preds = %land.lhs.true971, %if.then969
  %234 = load i16***, i16**** %227, align 8, !tbaa !1
  %arrayidx990 = getelementptr inbounds i16**, i16*** %234, i64 %idxprom989
  %235 = load i16**, i16*** %arrayidx990, align 8, !tbaa !1
  %236 = load i16*, i16** %235, align 8, !tbaa !1
  store i16 %209, i16* %236, align 2, !tbaa !308
  %arrayidx998 = getelementptr inbounds i16, i16* %236, i64 1
  store i16 %210, i16* %arrayidx998, align 2, !tbaa !308
  br label %if.end1020

if.else1006:                                      ; preds = %for.body957
  %237 = load i16***, i16**** %227, align 8, !tbaa !1
  %238 = load i16**, i16*** %237, align 8, !tbaa !1
  %239 = load i16*, i16** %238, align 8, !tbaa !1
  store i16 0, i16* %239, align 2, !tbaa !308
  %arrayidx1014 = getelementptr inbounds i16, i16* %239, i64 1
  store i16 0, i16* %arrayidx1014, align 2, !tbaa !308
  br label %if.end1020

if.end1020:                                       ; preds = %if.then977, %if.else986, %if.else1006
  %.sink1685 = phi i8 [ -1, %if.else1006 ], [ %conv999, %if.else986 ], [ 0, %if.then977 ]
  %240 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %241 = load i8**, i8*** %240, align 8, !tbaa !1
  %arrayidx983 = getelementptr inbounds i8*, i8** %241, i64 %idxprom982
  %.sink1686 = load i8*, i8** %arrayidx983, align 8, !tbaa !1
  %idxprom1018 = sext i32 %add959 to i64
  %arrayidx1019 = getelementptr inbounds i8, i8* %.sink1686, i64 %idxprom1018
  store i8 %.sink1685, i8* %arrayidx1019, align 1, !tbaa !328
  br i1 %cmp940, label %if.then1024, label %if.else1069

if.then1024:                                      ; preds = %if.end1020
  br i1 %cmp1026, label %land.lhs.true1028, label %if.else1049

land.lhs.true1028:                                ; preds = %if.then1024
  %242 = load i8*, i8** %arrayidx973, align 8, !tbaa !1
  %idxprom1031 = sext i32 %add961 to i64
  %arrayidx1032 = getelementptr inbounds i8, i8* %242, i64 %idxprom1031
  %243 = load i8, i8* %arrayidx1032, align 1, !tbaa !328
  %tobool1033 = icmp eq i8 %243, 0
  br i1 %tobool1033, label %if.then1034, label %if.else1049

if.then1034:                                      ; preds = %land.lhs.true1028
  %arrayidx1035 = getelementptr inbounds i16***, i16**** %227, i64 1
  %244 = load i16***, i16**** %arrayidx1035, align 8, !tbaa !1
  %245 = load i16**, i16*** %244, align 8, !tbaa !1
  %246 = load i16*, i16** %245, align 8, !tbaa !1
  store i16 0, i16* %246, align 2, !tbaa !308
  br label %if.end1068

if.else1049:                                      ; preds = %land.lhs.true1028, %if.then1024
  %arrayidx1051 = getelementptr inbounds i16***, i16**** %227, i64 1
  %247 = load i16***, i16**** %arrayidx1051, align 8, !tbaa !1
  %arrayidx1053 = getelementptr inbounds i16**, i16*** %247, i64 %idxprom1052
  %248 = load i16**, i16*** %arrayidx1053, align 8, !tbaa !1
  %249 = load i16*, i16** %248, align 8, !tbaa !1
  store i16 %208, i16* %249, align 2, !tbaa !308
  br label %if.end1068

if.end1068:                                       ; preds = %if.else1049, %if.then1034
  %250 = phi i16* [ %249, %if.else1049 ], [ %246, %if.then1034 ]
  %.sink = phi i16 [ %207, %if.else1049 ], [ 0, %if.then1034 ]
  %arrayidx1061 = getelementptr inbounds i16, i16* %250, i64 1
  store i16 %.sink, i16* %arrayidx1061, align 2, !tbaa !308
  %251 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %arrayidx1063 = getelementptr inbounds i8**, i8*** %251, i64 1
  %252 = load i8**, i8*** %arrayidx1063, align 8, !tbaa !1
  %arrayidx1065 = getelementptr inbounds i8*, i8** %252, i64 %idxprom982
  %.sink1688 = load i8*, i8** %arrayidx1065, align 8, !tbaa !1
  %arrayidx1067 = getelementptr inbounds i8, i8* %.sink1688, i64 %idxprom1018
  store i8 %conv1062.sink, i8* %arrayidx1067, align 1, !tbaa !328
  br label %if.end1083

if.else1069:                                      ; preds = %if.end1020
  %253 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %arrayidx1070 = getelementptr inbounds i8**, i8*** %253, i64 1
  %254 = load i8**, i8*** %arrayidx1070, align 8, !tbaa !1
  %arrayidx1072 = getelementptr inbounds i8*, i8** %254, i64 %idxprom982
  %255 = load i8*, i8** %arrayidx1072, align 8, !tbaa !1
  %arrayidx1074 = getelementptr inbounds i8, i8* %255, i64 %idxprom1018
  store i8 -1, i8* %arrayidx1074, align 1, !tbaa !328
  %arrayidx1075 = getelementptr inbounds i16***, i16**** %227, i64 1
  %256 = load i16***, i16**** %arrayidx1075, align 8, !tbaa !1
  %257 = load i16**, i16*** %256, align 8, !tbaa !1
  %258 = load i16*, i16** %257, align 8, !tbaa !1
  store i16 0, i16* %258, align 2, !tbaa !308
  %arrayidx1082 = getelementptr inbounds i16, i16* %258, i64 1
  store i16 0, i16* %arrayidx1082, align 2, !tbaa !308
  br label %if.end1083

if.end1083:                                       ; preds = %if.else1069, %if.end1068
  %259 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %MbaffFrameFlag1084 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %259, i64 0, i32 95
  %260 = load i32, i32* %MbaffFrameFlag1084, align 4, !tbaa !325
  %tobool1085 = icmp eq i32 %260, 0
  br i1 %tobool1085, label %if.else1252, label %land.lhs.true1086

land.lhs.true1086:                                ; preds = %if.end1083
  %261 = load i16***, i16**** %227, align 8, !tbaa !1
  %arrayidx1097 = getelementptr inbounds i16**, i16*** %261, i64 %214
  %262 = load i16**, i16*** %arrayidx1097, align 8, !tbaa !1
  %263 = load i16*, i16** %262, align 8, !tbaa !1
  %264 = load i16, i16* %263, align 2, !tbaa !308
  %.off = add i16 %264, 8192
  %265 = icmp ugt i16 %.off, 16383
  br i1 %265, label %if.then1237, label %lor.lhs.false1120

lor.lhs.false1120:                                ; preds = %land.lhs.true1086
  %arrayidx1133 = getelementptr inbounds i16, i16* %263, i64 1
  %266 = load i16, i16* %arrayidx1133, align 2, !tbaa !308
  %conv1134 = sext i16 %266 to i32
  %LevelIndex = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %259, i64 0, i32 2
  %267 = load i32, i32* %LevelIndex, align 8, !tbaa !310
  %idxprom1135 = sext i32 %267 to i64
  %arrayidx1137 = getelementptr inbounds [17 x [6 x i32]], [17 x [6 x i32]]* @LEVELMVLIMIT, i64 0, i64 %idxprom1135, i64 4
  %268 = load i32, i32* %arrayidx1137, align 8, !tbaa !13
  %cmp1138 = icmp slt i32 %conv1134, %268
  br i1 %cmp1138, label %if.then1237, label %lor.lhs.false1140

lor.lhs.false1140:                                ; preds = %lor.lhs.false1120
  %arrayidx1158 = getelementptr inbounds [17 x [6 x i32]], [17 x [6 x i32]]* @LEVELMVLIMIT, i64 0, i64 %idxprom1135, i64 5
  %269 = load i32, i32* %arrayidx1158, align 4, !tbaa !13
  %cmp1159 = icmp sgt i32 %conv1134, %269
  br i1 %cmp1159, label %if.then1237, label %lor.lhs.false1161

lor.lhs.false1161:                                ; preds = %lor.lhs.false1140
  %arrayidx1162 = getelementptr inbounds i16***, i16**** %227, i64 1
  %270 = load i16***, i16**** %arrayidx1162, align 8, !tbaa !1
  %arrayidx1172 = getelementptr inbounds i16**, i16*** %270, i64 %216
  %271 = load i16**, i16*** %arrayidx1172, align 8, !tbaa !1
  %272 = load i16*, i16** %271, align 8, !tbaa !1
  %273 = load i16, i16* %272, align 2, !tbaa !308
  %.off2045 = add i16 %273, 8192
  %274 = icmp ugt i16 %.off2045, 16383
  br i1 %274, label %if.then1237, label %lor.lhs.false1195

lor.lhs.false1195:                                ; preds = %lor.lhs.false1161
  %arrayidx1208 = getelementptr inbounds i16, i16* %272, i64 1
  %275 = load i16, i16* %arrayidx1208, align 2, !tbaa !308
  %conv1209 = sext i16 %275 to i32
  %cmp1214 = icmp slt i32 %conv1209, %268
  %cmp1235 = icmp sgt i32 %conv1209, %269
  %or.cond2031 = or i1 %cmp1214, %cmp1235
  br i1 %or.cond2031, label %if.then1237, label %if.else1252

if.then1237:                                      ; preds = %lor.lhs.false1195, %lor.lhs.false1161, %lor.lhs.false1140, %lor.lhs.false1120, %land.lhs.true1086
  %276 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %277 = load i8**, i8*** %276, align 8, !tbaa !1
  %arrayidx1240 = getelementptr inbounds i8*, i8** %277, i64 %idxprom982
  %278 = load i8*, i8** %arrayidx1240, align 8, !tbaa !1
  %arrayidx1242 = getelementptr inbounds i8, i8* %278, i64 %idxprom1018
  store i8 -1, i8* %arrayidx1242, align 1, !tbaa !328
  %279 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %arrayidx1243 = getelementptr inbounds i8**, i8*** %279, i64 1
  %280 = load i8**, i8*** %arrayidx1243, align 8, !tbaa !1
  %arrayidx1245 = getelementptr inbounds i8*, i8** %280, i64 %idxprom982
  %281 = load i8*, i8** %arrayidx1245, align 8, !tbaa !1
  %arrayidx1247 = getelementptr inbounds i8, i8* %281, i64 %idxprom1018
  store i8 -1, i8* %arrayidx1247, align 1, !tbaa !328
  %282 = load i16**, i16*** @direct_pdir, align 8, !tbaa !1
  %arrayidx1249 = getelementptr inbounds i16*, i16** %282, i64 %idxprom982
  %283 = load i16*, i16** %arrayidx1249, align 8, !tbaa !1
  %arrayidx1251 = getelementptr inbounds i16, i16* %283, i64 %idxprom1018
  store i16 -1, i16* %arrayidx1251, align 2, !tbaa !308
  br label %for.inc

if.else1252:                                      ; preds = %lor.lhs.false1195, %if.end1083
  br i1 %212, label %if.then1260, label %if.end1271

if.then1260:                                      ; preds = %if.else1252
  %284 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %arrayidx1261 = getelementptr inbounds i8**, i8*** %284, i64 1
  %285 = load i8**, i8*** %arrayidx1261, align 8, !tbaa !1
  %arrayidx1263 = getelementptr inbounds i8*, i8** %285, i64 %idxprom982
  %286 = load i8*, i8** %arrayidx1263, align 8, !tbaa !1
  %arrayidx1265 = getelementptr inbounds i8, i8* %286, i64 %idxprom1018
  store i8 0, i8* %arrayidx1265, align 1, !tbaa !328
  %287 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %288 = load i8**, i8*** %287, align 8, !tbaa !1
  %arrayidx1268 = getelementptr inbounds i8*, i8** %288, i64 %idxprom982
  %289 = load i8*, i8** %arrayidx1268, align 8, !tbaa !1
  %arrayidx1270 = getelementptr inbounds i8, i8* %289, i64 %idxprom1018
  store i8 0, i8* %arrayidx1270, align 1, !tbaa !328
  br label %if.end1271

if.end1271:                                       ; preds = %if.then1260, %if.else1252
  %290 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %arrayidx1272 = getelementptr inbounds i8**, i8*** %290, i64 1
  %291 = load i8**, i8*** %arrayidx1272, align 8, !tbaa !1
  %arrayidx1274 = getelementptr inbounds i8*, i8** %291, i64 %idxprom982
  %292 = load i8*, i8** %arrayidx1274, align 8, !tbaa !1
  %arrayidx1276 = getelementptr inbounds i8, i8* %292, i64 %idxprom1018
  %293 = load i8, i8* %arrayidx1276, align 1, !tbaa !328
  %cmp1278 = icmp eq i8 %293, -1
  br i1 %cmp1278, label %if.then1280, label %if.else1285

if.then1280:                                      ; preds = %if.end1271
  %294 = load i16**, i16*** @direct_pdir, align 8, !tbaa !1
  %arrayidx1282 = getelementptr inbounds i16*, i16** %294, i64 %idxprom982
  %295 = load i16*, i16** %arrayidx1282, align 8, !tbaa !1
  %arrayidx1284 = getelementptr inbounds i16, i16* %295, i64 %idxprom1018
  store i16 0, i16* %arrayidx1284, align 2, !tbaa !308
  br label %for.inc

if.else1285:                                      ; preds = %if.end1271
  %296 = load i8**, i8*** %290, align 8, !tbaa !1
  %arrayidx1288 = getelementptr inbounds i8*, i8** %296, i64 %idxprom982
  %297 = load i8*, i8** %arrayidx1288, align 8, !tbaa !1
  %arrayidx1290 = getelementptr inbounds i8, i8* %297, i64 %idxprom1018
  %298 = load i8, i8* %arrayidx1290, align 1, !tbaa !328
  %cmp1292 = icmp eq i8 %298, -1
  %299 = load i16**, i16*** @direct_pdir, align 8, !tbaa !1
  %arrayidx1296 = getelementptr inbounds i16*, i16** %299, i64 %idxprom982
  %300 = load i16*, i16** %arrayidx1296, align 8, !tbaa !1
  %arrayidx1298 = getelementptr inbounds i16, i16* %300, i64 %idxprom1018
  %.sink1690 = select i1 %cmp1292, i16 1, i16 2
  store i16 %.sink1690, i16* %arrayidx1298, align 2, !tbaa !308
  br label %for.inc

for.inc:                                          ; preds = %if.then1237, %if.else1285, %if.then1280
  %indvars.iv.next2067 = add nuw nsw i64 %indvars.iv2066, 1
  %exitcond2068 = icmp eq i64 %indvars.iv.next2067, 4
  br i1 %exitcond2068, label %for.inc1307, label %for.inc.for.body957_crit_edge

for.inc.for.body957_crit_edge:                    ; preds = %for.inc
  %.pre2137 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.body957

for.inc1307:                                      ; preds = %for.inc
  %indvars.iv.next2070 = add nuw nsw i64 %indvars.iv2069, 1
  %exitcond2071 = icmp eq i64 %indvars.iv.next2070, 4
  br i1 %exitcond2071, label %for.end1309, label %for.body

for.end1309:                                      ; preds = %for.inc1307
  call void @llvm.lifetime.end(i64 24, i8* nonnull %16) #8
  call void @llvm.lifetime.end(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end(i64 24, i8* nonnull %14) #8
  call void @llvm.lifetime.end(i64 24, i8* nonnull %13) #8
  call void @llvm.lifetime.end(i64 4, i8* nonnull %12) #8
  call void @llvm.lifetime.end(i64 4, i8* nonnull %11) #8
  br label %if.end1675

if.else1310:                                      ; preds = %if.end11
  %idxprom1313 = sext i32 %7 to i64
  br label %for.body1319

for.body1319:                                     ; preds = %for.inc1672.for.body1319_crit_edge, %if.else1310
  %301 = phi %struct.ImageParameters* [ %4, %if.else1310 ], [ %.pre2138, %for.inc1672.for.body1319_crit_edge ]
  %indvars.iv2063 = phi i64 [ 0, %if.else1310 ], [ %indvars.iv.next2064, %for.inc1672.for.body1319_crit_edge ]
  %pix_y1320 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %301, i64 0, i32 34
  %302 = load i32, i32* %pix_y1320, align 4, !tbaa !345
  %shr1321 = ashr i32 %302, 2
  %303 = trunc i64 %indvars.iv2063 to i32
  %add1322 = add nsw i32 %shr1321, %303
  %opix_y1323 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %301, i64 0, i32 38
  %304 = load i32, i32* %opix_y1323, align 4, !tbaa !312
  %shr1324 = ashr i32 %304, 2
  %add1325 = add nsw i32 %shr1324, %303
  %idxprom1342 = sext i32 %add1325 to i64
  %idxprom1377 = sext i32 %add1322 to i64
  br label %for.body1329

for.body1329:                                     ; preds = %for.inc1669.for.body1329_crit_edge, %for.body1319
  %305 = phi %struct.ImageParameters* [ %301, %for.body1319 ], [ %.pre2139, %for.inc1669.for.body1329_crit_edge ]
  %indvars.iv2061 = phi i64 [ 0, %for.body1319 ], [ %indvars.iv.next2062, %for.inc1669.for.body1329_crit_edge ]
  %pix_x1330 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %305, i64 0, i32 33
  %306 = load i32, i32* %pix_x1330, align 8, !tbaa !346
  %shr1331 = ashr i32 %306, 2
  %307 = trunc i64 %indvars.iv2061 to i32
  %add1332 = add nsw i32 %shr1331, %307
  %opix_x1333 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %305, i64 0, i32 37
  %308 = load i32, i32* %opix_x1333, align 8, !tbaa !311
  %shr1334 = ashr i32 %308, 2
  %add1335 = add nsw i32 %shr1334, %307
  %all_mv1336 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %305, i64 0, i32 75
  %309 = load i16******, i16******* %all_mv1336, align 8, !tbaa !343
  %arrayidx1338 = getelementptr inbounds i16*****, i16****** %309, i64 %indvars.iv2063
  %310 = load i16*****, i16****** %arrayidx1338, align 8, !tbaa !1
  %arrayidx1340 = getelementptr inbounds i16****, i16***** %310, i64 %indvars.iv2061
  %311 = load i16****, i16***** %arrayidx1340, align 8, !tbaa !1
  %312 = load i8**, i8*** %co_located_ref_idx.0, align 8, !tbaa !1
  %arrayidx1343 = getelementptr inbounds i8*, i8** %312, i64 %idxprom1342
  %313 = load i8*, i8** %arrayidx1343, align 8, !tbaa !1
  %idxprom1344 = sext i32 %add1335 to i64
  %arrayidx1345 = getelementptr inbounds i8, i8* %313, i64 %idxprom1344
  %314 = load i8, i8* %arrayidx1345, align 1, !tbaa !328
  %cmp1347 = icmp eq i8 %314, -1
  %idxprom1350 = zext i1 %cmp1347 to i64
  %arrayidx1351 = getelementptr inbounds i8**, i8*** %co_located_ref_idx.0, i64 %idxprom1350
  %315 = load i8**, i8*** %arrayidx1351, align 8, !tbaa !1
  %arrayidx1353 = getelementptr inbounds i8*, i8** %315, i64 %idxprom1342
  %316 = load i8*, i8** %arrayidx1353, align 8, !tbaa !1
  %arrayidx1355 = getelementptr inbounds i8, i8* %316, i64 %idxprom1344
  %317 = load i8, i8* %arrayidx1355, align 1, !tbaa !328
  %cmp1357 = icmp eq i8 %317, -1
  br i1 %cmp1357, label %if.then1359, label %for.cond1391.preheader

for.cond1391.preheader:                           ; preds = %for.body1329
  %num_ref_idx_l0_active2049 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %305, i64 0, i32 83
  %318 = load i32, i32* %num_ref_idx_l0_active2049, align 8, !tbaa !363
  %319 = load i32, i32* %list_offset, align 4, !tbaa !295
  %idxprom13942050 = sext i32 %319 to i64
  %arrayidx13952051 = getelementptr inbounds [6 x i32], [6 x i32]* @listXsize, i64 0, i64 %idxprom13942050
  %320 = load i32, i32* %arrayidx13952051, align 4, !tbaa !13
  %cmp13962052 = icmp slt i32 %318, %320
  %.2053 = select i1 %cmp13962052, i32 %318, i32 %320
  %cmp14072054 = icmp sgt i32 %.2053, 0
  br i1 %cmp14072054, label %for.body1409.lr.ph, label %if.else1652

for.body1409.lr.ph:                               ; preds = %for.cond1391.preheader
  %arrayidx1413 = getelementptr inbounds i64**, i64*** %co_located_ref_id.0, i64 %idxprom1350
  %321 = load i64**, i64*** %arrayidx1413, align 8, !tbaa !1
  %arrayidx1415 = getelementptr inbounds i64*, i64** %321, i64 %idxprom1342
  %322 = load i64*, i64** %arrayidx1415, align 8, !tbaa !1
  %arrayidx1417 = getelementptr inbounds i64, i64* %322, i64 %idxprom1344
  %323 = load i64, i64* %arrayidx1417, align 8, !tbaa !364
  %324 = sext i32 %.2053 to i64
  br label %for.body1409

if.then1359:                                      ; preds = %for.body1329
  %325 = load i16***, i16**** %311, align 8, !tbaa !1
  %326 = load i16**, i16*** %325, align 8, !tbaa !1
  %327 = load i16*, i16** %326, align 8, !tbaa !1
  store i16 0, i16* %327, align 2, !tbaa !308
  %arrayidx1367 = getelementptr inbounds i16, i16* %327, i64 1
  store i16 0, i16* %arrayidx1367, align 2, !tbaa !308
  %arrayidx1368 = getelementptr inbounds i16***, i16**** %311, i64 1
  %328 = load i16***, i16**** %arrayidx1368, align 8, !tbaa !1
  %329 = load i16**, i16*** %328, align 8, !tbaa !1
  %330 = load i16*, i16** %329, align 8, !tbaa !1
  store i16 0, i16* %330, align 2, !tbaa !308
  %arrayidx1375 = getelementptr inbounds i16, i16* %330, i64 1
  store i16 0, i16* %arrayidx1375, align 2, !tbaa !308
  %331 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %332 = load i8**, i8*** %331, align 8, !tbaa !1
  %arrayidx1378 = getelementptr inbounds i8*, i8** %332, i64 %idxprom1377
  %333 = load i8*, i8** %arrayidx1378, align 8, !tbaa !1
  %idxprom1379 = sext i32 %add1332 to i64
  %arrayidx1380 = getelementptr inbounds i8, i8* %333, i64 %idxprom1379
  store i8 0, i8* %arrayidx1380, align 1, !tbaa !328
  br label %for.inc1669

for.body1409:                                     ; preds = %for.body1409.lr.ph, %if.else1421
  %indvars.iv = phi i64 [ 0, %for.body1409.lr.ph ], [ %indvars.iv.next, %if.else1421 ]
  %arrayidx1411 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %0, i64 0, i32 6, i64 %idxprom1313, i64 %indvars.iv
  %334 = load i64, i64* %arrayidx1411, align 8, !tbaa !364
  %cmp1418 = icmp eq i64 %334, %323
  br i1 %cmp1418, label %for.end1425, label %if.else1421

if.else1421:                                      ; preds = %for.body1409
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %cmp1407 = icmp slt i64 %indvars.iv.next, %324
  br i1 %cmp1407, label %for.body1409, label %if.else1652.loopexit

for.end1425:                                      ; preds = %for.body1409
  %335 = trunc i64 %indvars.iv to i32
  %cmp1426 = icmp eq i32 %335, -135792468
  br i1 %cmp1426, label %if.else1652, label %if.then1428

if.then1428:                                      ; preds = %for.end1425
  %sext = shl i64 %indvars.iv, 32
  %idxprom1433 = ashr exact i64 %sext, 32
  %arrayidx1434 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %305, i64 0, i32 87, i64 %idxprom13942050, i64 %idxprom1433
  %336 = load i32, i32* %arrayidx1434, align 4, !tbaa !13
  %cmp1435 = icmp eq i32 %336, 9999
  %arrayidx1439 = getelementptr inbounds i16***, i16**** %co_located_mv.0, i64 %idxprom1350
  %337 = load i16***, i16**** %arrayidx1439, align 8, !tbaa !1
  %arrayidx1441 = getelementptr inbounds i16**, i16*** %337, i64 %idxprom1342
  %338 = load i16**, i16*** %arrayidx1441, align 8, !tbaa !1
  %arrayidx1443 = getelementptr inbounds i16*, i16** %338, i64 %idxprom1344
  %339 = load i16*, i16** %arrayidx1443, align 8, !tbaa !1
  %340 = load i16, i16* %339, align 2, !tbaa !308
  br i1 %cmp1435, label %if.then1437, label %if.else1468

if.then1437:                                      ; preds = %if.then1428
  %341 = load i16***, i16**** %311, align 8, !tbaa !1
  %342 = load i16**, i16*** %341, align 8, !tbaa !1
  %343 = load i16*, i16** %342, align 8, !tbaa !1
  store i16 %340, i16* %343, align 2, !tbaa !308
  %arrayidx1455 = getelementptr inbounds i16, i16* %339, i64 1
  %344 = load i16, i16* %arrayidx1455, align 2, !tbaa !308
  %arrayidx1459 = getelementptr inbounds i16, i16* %343, i64 1
  store i16 %344, i16* %arrayidx1459, align 2, !tbaa !308
  %arrayidx1460 = getelementptr inbounds i16***, i16**** %311, i64 1
  %345 = load i16***, i16**** %arrayidx1460, align 8, !tbaa !1
  %346 = load i16**, i16*** %345, align 8, !tbaa !1
  %347 = load i16*, i16** %346, align 8, !tbaa !1
  store i16 0, i16* %347, align 2, !tbaa !308
  %arrayidx1539.phi.trans.insert = getelementptr inbounds i16**, i16*** %341, i64 %idxprom1433
  %.pre2140 = load i16**, i16*** %arrayidx1539.phi.trans.insert, align 8, !tbaa !1
  %.pre2141 = load i16*, i16** %.pre2140, align 8, !tbaa !1
  br label %if.end1536

if.else1468:                                      ; preds = %if.then1428
  %conv1476 = sext i16 %340 to i32
  %mul1477 = mul nsw i32 %conv1476, %336
  %add1478 = add nsw i32 %mul1477, 128
  %shr14792016 = lshr i32 %add1478, 8
  %conv1480 = trunc i32 %shr14792016 to i16
  %348 = load i16***, i16**** %311, align 8, !tbaa !1
  %arrayidx1483 = getelementptr inbounds i16**, i16*** %348, i64 %idxprom1433
  %349 = load i16**, i16*** %arrayidx1483, align 8, !tbaa !1
  %350 = load i16*, i16** %349, align 8, !tbaa !1
  store i16 %conv1480, i16* %350, align 2, !tbaa !308
  %arrayidx1492 = getelementptr inbounds i16, i16* %339, i64 1
  %351 = load i16, i16* %arrayidx1492, align 2, !tbaa !308
  %conv1493 = sext i16 %351 to i32
  %mul1494 = mul nsw i32 %conv1493, %336
  %add1495 = add nsw i32 %mul1494, 128
  %shr14962017 = lshr i32 %add1495, 8
  %conv1497 = trunc i32 %shr14962017 to i16
  %arrayidx1502 = getelementptr inbounds i16, i16* %350, i64 1
  store i16 %conv1497, i16* %arrayidx1502, align 2, !tbaa !308
  %sub = add nsw i32 %336, -256
  %352 = load i16, i16* %339, align 2, !tbaa !308
  %conv1510 = sext i16 %352 to i32
  %mul1511 = mul nsw i32 %conv1510, %sub
  %add1512 = add nsw i32 %mul1511, 128
  %shr15132018 = lshr i32 %add1512, 8
  %conv1514 = trunc i32 %shr15132018 to i16
  %arrayidx1515 = getelementptr inbounds i16***, i16**** %311, i64 1
  %353 = load i16***, i16**** %arrayidx1515, align 8, !tbaa !1
  %354 = load i16**, i16*** %353, align 8, !tbaa !1
  %355 = load i16*, i16** %354, align 8, !tbaa !1
  store i16 %conv1514, i16* %355, align 2, !tbaa !308
  %356 = load i16, i16* %arrayidx1492, align 2, !tbaa !308
  %conv1527 = sext i16 %356 to i32
  %mul1528 = mul nsw i32 %conv1527, %sub
  %add1529 = add nsw i32 %mul1528, 128
  %shr15302019 = lshr i32 %add1529, 8
  %conv1531 = trunc i32 %shr15302019 to i16
  br label %if.end1536

if.end1536:                                       ; preds = %if.else1468, %if.then1437
  %357 = phi i16 [ %conv1514, %if.else1468 ], [ 0, %if.then1437 ]
  %358 = phi i16* [ %350, %if.else1468 ], [ %.pre2141, %if.then1437 ]
  %359 = phi i16* [ %355, %if.else1468 ], [ %347, %if.then1437 ]
  %360 = phi i16 [ %conv1531, %if.else1468 ], [ 0, %if.then1437 ]
  %arrayidx1535 = getelementptr inbounds i16, i16* %359, i64 1
  store i16 %360, i16* %arrayidx1535, align 2, !tbaa !308
  %361 = load i16, i16* %358, align 2, !tbaa !308
  %.off2046 = add i16 %361, 8192
  %362 = icmp ugt i16 %.off2046, 16383
  br i1 %362, label %if.then1620, label %lor.lhs.false1554

lor.lhs.false1554:                                ; preds = %if.end1536
  %arrayidx1559 = getelementptr inbounds i16, i16* %358, i64 1
  %363 = load i16, i16* %arrayidx1559, align 2, !tbaa !308
  %conv1560 = sext i16 %363 to i32
  %364 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  %LevelIndex1561 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %364, i64 0, i32 2
  %365 = load i32, i32* %LevelIndex1561, align 8, !tbaa !310
  %idxprom1562 = sext i32 %365 to i64
  %arrayidx1564 = getelementptr inbounds [17 x [6 x i32]], [17 x [6 x i32]]* @LEVELMVLIMIT, i64 0, i64 %idxprom1562, i64 4
  %366 = load i32, i32* %arrayidx1564, align 8, !tbaa !13
  %cmp1565 = icmp slt i32 %conv1560, %366
  br i1 %cmp1565, label %if.then1620, label %lor.lhs.false1567

lor.lhs.false1567:                                ; preds = %lor.lhs.false1554
  %arrayidx1577 = getelementptr inbounds [17 x [6 x i32]], [17 x [6 x i32]]* @LEVELMVLIMIT, i64 0, i64 %idxprom1562, i64 5
  %367 = load i32, i32* %arrayidx1577, align 4, !tbaa !13
  %cmp1578 = icmp sgt i32 %conv1560, %367
  %.off2047 = add i16 %357, 8192
  %368 = icmp ugt i16 %.off2047, 16383
  %or.cond2168 = or i1 %cmp1578, %368
  br i1 %or.cond2168, label %if.then1620, label %lor.lhs.false1596

lor.lhs.false1596:                                ; preds = %lor.lhs.false1567
  %conv1601 = sext i16 %360 to i32
  %cmp1606 = icmp slt i32 %conv1601, %366
  %cmp1618 = icmp sgt i32 %conv1601, %367
  %or.cond2036 = or i1 %cmp1606, %cmp1618
  br i1 %or.cond2036, label %if.then1620, label %if.else1635

if.then1620:                                      ; preds = %lor.lhs.false1596, %lor.lhs.false1567, %lor.lhs.false1554, %if.end1536
  %369 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %370 = load i8**, i8*** %369, align 8, !tbaa !1
  %arrayidx1623 = getelementptr inbounds i8*, i8** %370, i64 %idxprom1377
  %371 = load i8*, i8** %arrayidx1623, align 8, !tbaa !1
  %idxprom1624 = sext i32 %add1332 to i64
  %arrayidx1625 = getelementptr inbounds i8, i8* %371, i64 %idxprom1624
  br label %if.end1667

if.else1635:                                      ; preds = %lor.lhs.false1596
  %conv1636 = trunc i64 %indvars.iv to i8
  %372 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %373 = load i8**, i8*** %372, align 8, !tbaa !1
  %arrayidx1639 = getelementptr inbounds i8*, i8** %373, i64 %idxprom1377
  %374 = load i8*, i8** %arrayidx1639, align 8, !tbaa !1
  %idxprom1640 = sext i32 %add1332 to i64
  %arrayidx1641 = getelementptr inbounds i8, i8* %374, i64 %idxprom1640
  br label %if.end1667

if.else1652.loopexit:                             ; preds = %if.else1421
  br label %if.else1652

if.else1652:                                      ; preds = %if.else1652.loopexit, %for.cond1391.preheader, %for.end1425
  %375 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %376 = load i8**, i8*** %375, align 8, !tbaa !1
  %arrayidx1655 = getelementptr inbounds i8*, i8** %376, i64 %idxprom1377
  %377 = load i8*, i8** %arrayidx1655, align 8, !tbaa !1
  %idxprom1656 = sext i32 %add1332 to i64
  %arrayidx1657 = getelementptr inbounds i8, i8* %377, i64 %idxprom1656
  br label %if.end1667

if.end1667:                                       ; preds = %if.then1620, %if.else1635, %if.else1652
  %idxprom1665.pre-phi = phi i64 [ %idxprom1624, %if.then1620 ], [ %idxprom1640, %if.else1635 ], [ %idxprom1656, %if.else1652 ]
  %arrayidx1625.sink = phi i8* [ %arrayidx1625, %if.then1620 ], [ %arrayidx1641, %if.else1635 ], [ %arrayidx1657, %if.else1652 ]
  %.sink2043 = phi i8 [ -1, %if.then1620 ], [ %conv1636, %if.else1635 ], [ -1, %if.else1652 ]
  %.sink2038 = phi i8 [ -1, %if.then1620 ], [ 0, %if.else1635 ], [ -1, %if.else1652 ]
  %.sink1698 = phi i16 [ -1, %if.then1620 ], [ 2, %if.else1635 ], [ -1, %if.else1652 ]
  store i8 %.sink2043, i8* %arrayidx1625.sink, align 1, !tbaa !328
  br label %for.inc1669

for.inc1669:                                      ; preds = %if.then1359, %if.end1667
  %idxprom1379.sink2164 = phi i64 [ %idxprom1379, %if.then1359 ], [ %idxprom1665.pre-phi, %if.end1667 ]
  %.sink2162 = phi i8 [ 0, %if.then1359 ], [ %.sink2038, %if.end1667 ]
  %.sink2033 = phi i16 [ 2, %if.then1359 ], [ %.sink1698, %if.end1667 ]
  %378 = load i8***, i8**** @direct_ref_idx, align 8, !tbaa !1
  %arrayidx1381 = getelementptr inbounds i8**, i8*** %378, i64 1
  %379 = load i8**, i8*** %arrayidx1381, align 8, !tbaa !1
  %arrayidx1383 = getelementptr inbounds i8*, i8** %379, i64 %idxprom1377
  %380 = load i8*, i8** %arrayidx1383, align 8, !tbaa !1
  %arrayidx1385 = getelementptr inbounds i8, i8* %380, i64 %idxprom1379.sink2164
  store i8 %.sink2162, i8* %arrayidx1385, align 1, !tbaa !328
  %381 = load i16**, i16*** @direct_pdir, align 8, !tbaa !1
  %arrayidx1387 = getelementptr inbounds i16*, i16** %381, i64 %idxprom1377
  %382 = load i16*, i16** %arrayidx1387, align 8, !tbaa !1
  %arrayidx1389 = getelementptr inbounds i16, i16* %382, i64 %idxprom1379.sink2164
  store i16 %.sink2033, i16* %arrayidx1389, align 2, !tbaa !308
  %indvars.iv.next2062 = add nuw nsw i64 %indvars.iv2061, 1
  %exitcond = icmp eq i64 %indvars.iv.next2062, 4
  br i1 %exitcond, label %for.inc1672, label %for.inc1669.for.body1329_crit_edge

for.inc1669.for.body1329_crit_edge:               ; preds = %for.inc1669
  %.pre2139 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.body1329

for.inc1672:                                      ; preds = %for.inc1669
  %indvars.iv.next2064 = add nuw nsw i64 %indvars.iv2063, 1
  %exitcond2065 = icmp eq i64 %indvars.iv.next2064, 4
  br i1 %exitcond2065, label %if.end1675.loopexit, label %for.inc1672.for.body1319_crit_edge

for.inc1672.for.body1319_crit_edge:               ; preds = %for.inc1672
  %.pre2138 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.body1319

if.end1675.loopexit:                              ; preds = %for.inc1672
  br label %if.end1675

if.end1675:                                       ; preds = %if.end1675.loopexit, %for.end1309
  ret void
}

; Function Attrs: norecurse nounwind readnone uwtable
define i32 @sign(i32 %a, i32 %b) local_unnamed_addr #7 {
entry:
  %cmp = icmp sgt i32 %b, -1
  %cmp1 = icmp slt i32 %a, 0
  %sub = sub nsw i32 0, %a
  %cond = select i1 %cmp1, i32 %sub, i32 %a
  %sub10 = sub nsw i32 0, %cond
  %cond12 = select i1 %cmp, i32 %cond, i32 %sub10
  ret i32 %cond12
}

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.1 (tags/RELEASE_401/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !7, i64 32}
!6 = !{!"", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !7, i64 56, !7, i64 60, !7, i64 64, !7, i64 68, !7, i64 72, !7, i64 76, !7, i64 80, !3, i64 84, !3, i64 148, !7, i64 212, !7, i64 216, !7, i64 220, !7, i64 224, !3, i64 228, !3, i64 428, !3, i64 628, !3, i64 828, !3, i64 1028, !7, i64 1228, !7, i64 1232, !7, i64 1236, !7, i64 1240, !7, i64 1244, !7, i64 1248, !7, i64 1252, !7, i64 1256, !7, i64 1260, !7, i64 1264, !7, i64 1268, !7, i64 1272, !7, i64 1276, !7, i64 1280, !7, i64 1284, !7, i64 1288, !7, i64 1292, !7, i64 1296, !7, i64 1300, !3, i64 1304, !3, i64 1504, !3, i64 1704, !7, i64 1904, !7, i64 1908, !7, i64 1912, !7, i64 1916, !7, i64 1920, !7, i64 1924, !7, i64 1928, !7, i64 1932, !7, i64 1936, !7, i64 1940, !7, i64 1944, !7, i64 1948, !3, i64 1952, !7, i64 2976, !7, i64 2980, !7, i64 2984, !7, i64 2988, !7, i64 2992, !7, i64 2996, !7, i64 3000, !7, i64 3004, !7, i64 3008, !7, i64 3012, !7, i64 3016, !7, i64 3020, !7, i64 3024, !7, i64 3028, !7, i64 3032, !7, i64 3036, !7, i64 3040, !7, i64 3044, !7, i64 3048, !7, i64 3052, !8, i64 3056, !7, i64 3064, !7, i64 3068, !7, i64 3072, !7, i64 3076, !7, i64 3080, !7, i64 3084, !7, i64 3088, !7, i64 3092, !7, i64 3096, !7, i64 3100, !7, i64 3104, !7, i64 3108, !7, i64 3112, !7, i64 3116, !7, i64 3120, !7, i64 3124, !7, i64 3128, !7, i64 3132, !7, i64 3136, !7, i64 3140, !7, i64 3144, !7, i64 3148, !3, i64 3152, !3, i64 3352, !7, i64 3552, !7, i64 3556, !7, i64 3560, !7, i64 3564, !7, i64 3568, !7, i64 3572, !7, i64 3576, !7, i64 3580, !7, i64 3584, !7, i64 3588, !7, i64 3592, !7, i64 3596, !7, i64 3600, !7, i64 3604, !7, i64 3608, !7, i64 3612, !7, i64 3616, !7, i64 3620, !3, i64 3624, !7, i64 3824, !7, i64 3828, !2, i64 3832, !2, i64 3840, !2, i64 3848, !2, i64 3856, !7, i64 3864, !7, i64 3868, !7, i64 3872, !7, i64 3876, !7, i64 3880, !7, i64 3884, !7, i64 3888, !7, i64 3892, !7, i64 3896, !7, i64 3900, !7, i64 3904, !7, i64 3908, !7, i64 3912, !7, i64 3916, !7, i64 3920, !7, i64 3924, !7, i64 3928, !3, i64 3932, !7, i64 3964, !7, i64 3968, !7, i64 3972, !7, i64 3976, !7, i64 3980, !7, i64 3984, !7, i64 3988, !7, i64 3992, !7, i64 3996, !7, i64 4000, !7, i64 4004, !3, i64 4008, !3, i64 4056, !7, i64 4256, !7, i64 4260, !7, i64 4264, !7, i64 4268, !3, i64 4272, !7, i64 4312, !7, i64 4316, !7, i64 4320, !7, i64 4324}
!7 = !{!"int", !3, i64 0}
!8 = !{!"double", !3, i64 0}
!9 = !{!10, !7, i64 36}
!10 = !{!"", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !11, i64 48, !7, i64 52, !7, i64 56, !7, i64 60, !7, i64 64, !7, i64 68, !7, i64 72, !7, i64 76, !7, i64 80, !7, i64 84, !7, i64 88, !7, i64 92, !7, i64 96, !2, i64 104, !2, i64 112, !7, i64 120, !2, i64 128, !7, i64 136, !7, i64 140, !7, i64 144, !7, i64 148, !7, i64 152, !7, i64 156, !7, i64 160, !7, i64 164, !7, i64 168, !7, i64 172, !7, i64 176, !7, i64 180, !3, i64 184, !3, i64 4792, !3, i64 7352, !3, i64 8504, !3, i64 12600, !3, i64 13112, !2, i64 14136, !2, i64 14144, !3, i64 14152, !3, i64 18248, !3, i64 21320, !3, i64 29512, !2, i64 31560, !2, i64 31568, !2, i64 31576, !3, i64 31584, !2, i64 89184, !2, i64 89192, !7, i64 89200, !7, i64 89204, !7, i64 89208, !7, i64 89212, !3, i64 89216, !7, i64 89280, !7, i64 89284, !7, i64 89288, !7, i64 89292, !7, i64 89296, !8, i64 89304, !7, i64 89312, !7, i64 89316, !7, i64 89320, !7, i64 89324, !2, i64 89328, !2, i64 89336, !2, i64 89344, !2, i64 89352, !3, i64 89360, !7, i64 89392, !7, i64 89396, !7, i64 89400, !7, i64 89404, !7, i64 89408, !7, i64 89412, !7, i64 89416, !7, i64 89420, !3, i64 89424, !7, i64 90192, !7, i64 90196, !7, i64 90200, !7, i64 90204, !7, i64 90208, !7, i64 90212, !7, i64 90216, !7, i64 90220, !7, i64 90224, !7, i64 90228, !7, i64 90232, !7, i64 90236, !7, i64 90240, !3, i64 90244, !7, i64 90248, !7, i64 90252, !3, i64 90256, !7, i64 90264, !7, i64 90268, !7, i64 90272, !7, i64 90276, !7, i64 90280, !7, i64 90284, !7, i64 90288, !7, i64 90292, !7, i64 90296, !7, i64 90300, !7, i64 90304, !7, i64 90308, !7, i64 90312, !7, i64 90316, !7, i64 90320, !7, i64 90324, !7, i64 90328, !2, i64 90336, !7, i64 90344, !7, i64 90348, !7, i64 90352, !7, i64 90356, !7, i64 90360, !8, i64 90368, !7, i64 90376, !7, i64 90380, !7, i64 90384, !7, i64 90388, !7, i64 90392, !7, i64 90396, !7, i64 90400, !2, i64 90408, !7, i64 90416, !7, i64 90420, !7, i64 90424, !7, i64 90428, !7, i64 90432, !7, i64 90436, !7, i64 90440, !7, i64 90444, !7, i64 90448, !7, i64 90452, !7, i64 90456, !7, i64 90460, !7, i64 90464, !7, i64 90468, !7, i64 90472, !7, i64 90476, !7, i64 90480, !7, i64 90484, !7, i64 90488, !7, i64 90492, !7, i64 90496, !7, i64 90500, !2, i64 90504, !2, i64 90512, !2, i64 90520, !7, i64 90528, !7, i64 90532, !7, i64 90536, !7, i64 90540, !7, i64 90544, !7, i64 90548, !7, i64 90552, !7, i64 90556, !7, i64 90560, !3, i64 90564, !7, i64 90572, !7, i64 90576, !7, i64 90580, !12, i64 90584, !7, i64 90588, !7, i64 90592}
!11 = !{!"float", !3, i64 0}
!12 = !{!"short", !3, i64 0}
!13 = !{!7, !7, i64 0}
!14 = !{!6, !7, i64 3108}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = !{!21}
!21 = distinct !{!21, !17}
!22 = !{!16, !19}
!23 = distinct !{!23, !24, !25}
!24 = !{!"llvm.loop.vectorize.width", i32 1}
!25 = !{!"llvm.loop.interleave.count", i32 1}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = distinct !{!28, !24, !25}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = !{!35}
!35 = distinct !{!35, !31}
!36 = !{!30, !33}
!37 = distinct !{!37, !24, !25}
!38 = distinct !{!38, !27}
!39 = distinct !{!39, !24, !25}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = !{!46}
!46 = distinct !{!46, !42}
!47 = !{!41, !44}
!48 = distinct !{!48, !24, !25}
!49 = distinct !{!49, !27}
!50 = distinct !{!50, !24, !25}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = !{!57}
!57 = distinct !{!57, !53}
!58 = !{!52, !55}
!59 = distinct !{!59, !24, !25}
!60 = distinct !{!60, !27}
!61 = distinct !{!61, !24, !25}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = !{!68}
!68 = distinct !{!68, !64}
!69 = !{!63, !66}
!70 = distinct !{!70, !24, !25}
!71 = distinct !{!71, !27}
!72 = distinct !{!72, !24, !25}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = !{!79}
!79 = distinct !{!79, !75}
!80 = !{!74, !77}
!81 = distinct !{!81, !24, !25}
!82 = distinct !{!82, !27}
!83 = distinct !{!83, !24, !25}
!84 = !{!85}
!85 = distinct !{!85, !86}
!86 = distinct !{!86, !"LVerDomain"}
!87 = !{!88}
!88 = distinct !{!88, !86}
!89 = !{!90}
!90 = distinct !{!90, !86}
!91 = !{!85, !88}
!92 = distinct !{!92, !24, !25}
!93 = distinct !{!93, !27}
!94 = distinct !{!94, !24, !25}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = !{!101}
!101 = distinct !{!101, !97}
!102 = !{!96, !99}
!103 = distinct !{!103, !24, !25}
!104 = distinct !{!104, !27}
!105 = distinct !{!105, !24, !25}
!106 = !{!107}
!107 = distinct !{!107, !108}
!108 = distinct !{!108, !"LVerDomain"}
!109 = !{!110}
!110 = distinct !{!110, !108}
!111 = !{!112}
!112 = distinct !{!112, !108}
!113 = !{!107, !110}
!114 = distinct !{!114, !24, !25}
!115 = distinct !{!115, !27}
!116 = distinct !{!116, !24, !25}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = !{!123}
!123 = distinct !{!123, !119}
!124 = !{!118, !121}
!125 = distinct !{!125, !24, !25}
!126 = distinct !{!126, !27}
!127 = distinct !{!127, !24, !25}
!128 = !{!129}
!129 = distinct !{!129, !130}
!130 = distinct !{!130, !"LVerDomain"}
!131 = !{!132}
!132 = distinct !{!132, !130}
!133 = !{!134}
!134 = distinct !{!134, !130}
!135 = !{!129, !132}
!136 = distinct !{!136, !24, !25}
!137 = distinct !{!137, !27}
!138 = distinct !{!138, !24, !25}
!139 = !{!140}
!140 = distinct !{!140, !141}
!141 = distinct !{!141, !"LVerDomain"}
!142 = !{!143}
!143 = distinct !{!143, !141}
!144 = !{!145}
!145 = distinct !{!145, !141}
!146 = !{!140, !143}
!147 = distinct !{!147, !24, !25}
!148 = distinct !{!148, !27}
!149 = distinct !{!149, !24, !25}
!150 = !{!151}
!151 = distinct !{!151, !152}
!152 = distinct !{!152, !"LVerDomain"}
!153 = !{!154}
!154 = distinct !{!154, !152}
!155 = !{!156}
!156 = distinct !{!156, !152}
!157 = !{!151, !154}
!158 = distinct !{!158, !24, !25}
!159 = distinct !{!159, !27}
!160 = distinct !{!160, !24, !25}
!161 = !{!162}
!162 = distinct !{!162, !163}
!163 = distinct !{!163, !"LVerDomain"}
!164 = !{!165}
!165 = distinct !{!165, !163}
!166 = !{!167}
!167 = distinct !{!167, !163}
!168 = !{!162, !165}
!169 = distinct !{!169, !24, !25}
!170 = distinct !{!170, !27}
!171 = distinct !{!171, !24, !25}
!172 = !{!173}
!173 = distinct !{!173, !174}
!174 = distinct !{!174, !"LVerDomain"}
!175 = !{!176}
!176 = distinct !{!176, !174}
!177 = !{!178}
!178 = distinct !{!178, !174}
!179 = !{!173, !176}
!180 = distinct !{!180, !24, !25}
!181 = distinct !{!181, !27}
!182 = distinct !{!182, !24, !25}
!183 = !{!184}
!184 = distinct !{!184, !185}
!185 = distinct !{!185, !"LVerDomain"}
!186 = !{!187}
!187 = distinct !{!187, !185}
!188 = !{!189}
!189 = distinct !{!189, !185}
!190 = !{!184, !187}
!191 = distinct !{!191, !24, !25}
!192 = distinct !{!192, !27}
!193 = distinct !{!193, !24, !25}
!194 = !{!195}
!195 = distinct !{!195, !196}
!196 = distinct !{!196, !"LVerDomain"}
!197 = !{!198}
!198 = distinct !{!198, !196}
!199 = !{!200}
!200 = distinct !{!200, !196}
!201 = !{!195, !198}
!202 = distinct !{!202, !24, !25}
!203 = distinct !{!203, !27}
!204 = distinct !{!204, !24, !25}
!205 = !{!206}
!206 = distinct !{!206, !207}
!207 = distinct !{!207, !"LVerDomain"}
!208 = !{!209}
!209 = distinct !{!209, !207}
!210 = !{!211}
!211 = distinct !{!211, !207}
!212 = !{!206, !209}
!213 = distinct !{!213, !24, !25}
!214 = distinct !{!214, !27}
!215 = distinct !{!215, !24, !25}
!216 = !{!217}
!217 = distinct !{!217, !218}
!218 = distinct !{!218, !"LVerDomain"}
!219 = !{!220}
!220 = distinct !{!220, !218}
!221 = !{!222}
!222 = distinct !{!222, !218}
!223 = !{!217, !220}
!224 = distinct !{!224, !24, !25}
!225 = distinct !{!225, !27}
!226 = distinct !{!226, !24, !25}
!227 = !{!228}
!228 = distinct !{!228, !229}
!229 = distinct !{!229, !"LVerDomain"}
!230 = !{!231}
!231 = distinct !{!231, !229}
!232 = !{!233}
!233 = distinct !{!233, !229}
!234 = !{!228, !231}
!235 = distinct !{!235, !24, !25}
!236 = distinct !{!236, !27}
!237 = distinct !{!237, !24, !25}
!238 = !{!239}
!239 = distinct !{!239, !240}
!240 = distinct !{!240, !"LVerDomain"}
!241 = !{!242}
!242 = distinct !{!242, !240}
!243 = !{!244}
!244 = distinct !{!244, !240}
!245 = !{!239, !242}
!246 = distinct !{!246, !24, !25}
!247 = distinct !{!247, !27}
!248 = distinct !{!248, !24, !25}
!249 = !{!250}
!250 = distinct !{!250, !251}
!251 = distinct !{!251, !"LVerDomain"}
!252 = !{!253}
!253 = distinct !{!253, !251}
!254 = !{!255}
!255 = distinct !{!255, !251}
!256 = !{!250, !253}
!257 = distinct !{!257, !24, !25}
!258 = distinct !{!258, !27}
!259 = distinct !{!259, !24, !25}
!260 = !{!261}
!261 = distinct !{!261, !262}
!262 = distinct !{!262, !"LVerDomain"}
!263 = !{!264}
!264 = distinct !{!264, !262}
!265 = !{!266}
!266 = distinct !{!266, !262}
!267 = !{!261, !264}
!268 = distinct !{!268, !24, !25}
!269 = distinct !{!269, !27}
!270 = distinct !{!270, !24, !25}
!271 = !{!272}
!272 = distinct !{!272, !273}
!273 = distinct !{!273, !"LVerDomain"}
!274 = !{!275}
!275 = distinct !{!275, !273}
!276 = !{!277}
!277 = distinct !{!277, !273}
!278 = !{!272, !275}
!279 = distinct !{!279, !24, !25}
!280 = distinct !{!280, !27}
!281 = distinct !{!281, !24, !25}
!282 = !{!283}
!283 = distinct !{!283, !284}
!284 = distinct !{!284, !"LVerDomain"}
!285 = !{!286}
!286 = distinct !{!286, !284}
!287 = !{!288}
!288 = distinct !{!288, !284}
!289 = !{!283, !286}
!290 = distinct !{!290, !24, !25}
!291 = distinct !{!291, !27}
!292 = distinct !{!292, !24, !25}
!293 = !{!10, !2, i64 31576}
!294 = !{!10, !7, i64 12}
!295 = !{!296, !7, i64 428}
!296 = !{!"macroblock", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !3, i64 20, !2, i64 56, !2, i64 64, !7, i64 72, !3, i64 76, !3, i64 332, !3, i64 348, !7, i64 364, !297, i64 368, !3, i64 376, !3, i64 392, !297, i64 408, !7, i64 416, !7, i64 420, !7, i64 424, !7, i64 428, !7, i64 432, !7, i64 436, !7, i64 440, !7, i64 444, !7, i64 448, !7, i64 452, !7, i64 456, !7, i64 460, !7, i64 464, !7, i64 468, !7, i64 472, !12, i64 476, !8, i64 480, !7, i64 488, !7, i64 492, !7, i64 496, !7, i64 500, !7, i64 504, !7, i64 508, !7, i64 512, !7, i64 516, !7, i64 520}
!297 = !{!"long long", !3, i64 0}
!298 = !{!299, !3, i64 192}
!299 = !{!"", !3, i64 0, !7, i64 4, !7, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24, !3, i64 56, !7, i64 60, !7, i64 64, !3, i64 68, !3, i64 100, !3, i64 132, !3, i64 164, !7, i64 168, !7, i64 172, !2, i64 176, !7, i64 184, !7, i64 188, !3, i64 192, !7, i64 196, !7, i64 200, !7, i64 204, !7, i64 208, !7, i64 212, !7, i64 216, !3, i64 220, !3, i64 224, !3, i64 228, !3, i64 232}
!300 = !{!10, !7, i64 24}
!301 = !{!299, !7, i64 196}
!302 = !{!6, !7, i64 1912}
!303 = !{!304, !7, i64 6392}
!304 = !{!"storable_picture", !3, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !3, i64 24, !3, i64 1608, !3, i64 3192, !3, i64 4776, !7, i64 6360, !7, i64 6364, !7, i64 6368, !7, i64 6372, !7, i64 6376, !7, i64 6380, !7, i64 6384, !7, i64 6388, !7, i64 6392, !7, i64 6396, !7, i64 6400, !7, i64 6404, !7, i64 6408, !7, i64 6412, !7, i64 6416, !2, i64 6424, !2, i64 6432, !2, i64 6440, !2, i64 6448, !2, i64 6456, !2, i64 6464, !2, i64 6472, !2, i64 6480, !2, i64 6488, !2, i64 6496, !2, i64 6504, !2, i64 6512, !2, i64 6520, !2, i64 6528, !2, i64 6536, !2, i64 6544, !7, i64 6552, !7, i64 6556, !7, i64 6560, !7, i64 6564, !7, i64 6568, !7, i64 6572, !7, i64 6576}
!305 = !{!304, !7, i64 6396}
!306 = !{!304, !2, i64 6480}
!307 = !{!304, !2, i64 6504}
!308 = !{!12, !12, i64 0}
!309 = !{!6, !7, i64 3136}
!310 = !{!10, !7, i64 8}
!311 = !{!10, !7, i64 168}
!312 = !{!10, !7, i64 172}
!313 = !{!314}
!314 = distinct !{!314, !315}
!315 = distinct !{!315, !"LVerDomain"}
!316 = !{!317}
!317 = distinct !{!317, !315}
!318 = distinct !{!318, !27}
!319 = distinct !{!319, !24, !25}
!320 = distinct !{!320, !24, !25}
!321 = !{!6, !7, i64 3964}
!322 = !{!323, !7, i64 0}
!323 = !{!"pix_pos", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20}
!324 = !{i64 0, i64 4, !13, i64 4, i64 4, !13, i64 8, i64 4, !13, i64 12, i64 4, !13, i64 16, i64 4, !13, i64 20, i64 4, !13}
!325 = !{!10, !7, i64 90220}
!326 = !{!323, !7, i64 20}
!327 = !{!323, !7, i64 16}
!328 = !{!3, !3, i64 0}
!329 = !{!296, !7, i64 424}
!330 = !{!323, !7, i64 4}
!331 = !{!10, !7, i64 90532}
!332 = !{!10, !7, i64 90536}
!333 = distinct !{!333, !27}
!334 = distinct !{!334, !27}
!335 = distinct !{!335, !24, !25}
!336 = distinct !{!336, !337, !24, !25}
!337 = !{!"llvm.loop.unroll.runtime.disable"}
!338 = !{!6, !7, i64 24}
!339 = !{!6, !7, i64 3892}
!340 = !{!304, !2, i64 6432}
!341 = !{!304, !2, i64 6448}
!342 = !{!10, !2, i64 89328}
!343 = !{!10, !2, i64 89336}
!344 = distinct !{!344, !27}
!345 = !{!10, !7, i64 156}
!346 = !{!10, !7, i64 152}
!347 = !{!6, !7, i64 28}
!348 = !{!10, !7, i64 28}
!349 = !{!6, !7, i64 1264}
!350 = !{!6, !7, i64 1268}
!351 = !{!6, !7, i64 1276}
!352 = !{!353, !354, i64 0}
!353 = !{!"timeb", !354, i64 0, !12, i64 8, !12, i64 10, !12, i64 12}
!354 = !{!"long", !3, i64 0}
!355 = !{!353, !12, i64 8}
!356 = !{!6, !7, i64 3012}
!357 = !{!6, !7, i64 3016}
!358 = !{!6, !7, i64 3020}
!359 = !{!10, !7, i64 148}
!360 = !{!10, !7, i64 144}
!361 = distinct !{!361, !27}
!362 = !{!10, !7, i64 89404}
!363 = !{!10, !7, i64 89408}
!364 = !{!297, !297, i64 0}
